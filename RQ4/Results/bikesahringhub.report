/home/ys/桌面/benchmarkapps/bikesharinghub-2.0.6.apk
Entry Points[be.brunoparmentier.openbikesharing.app.activities.SettingsActivity, be.brunoparmentier.openbikesharing.app.activities.StationsListActivity, be.brunoparmentier.openbikesharing.app.widgets.StationsListAppWidgetService, be.brunoparmentier.openbikesharing.app.activities.MapActivity, be.brunoparmentier.openbikesharing.app.activities.BikeNetworksListActivity, be.brunoparmentier.openbikesharing.app.widgets.StationsListAppWidgetProvider, be.brunoparmentier.openbikesharing.app.activities.StationActivity]
FllowDroidcallgraph size:4102
Soot started on Fri Aug 26 23:48:45 CST 2022
Soot finished on Fri Aug 26 23:49:06 CST 2022
Soot has run for 0 min. 21 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 14
Declared Target Sdk version is: 23
Declared Max Sdk version is: -1
Collected 713 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.os.StatFs: long getAvailableBytes()> is checking!!!
The life time of api is [18,31]
65call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.SettingsActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_SettingsActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void updatePreference(java.lang.String)>[[try]]--><org.osmdroid.tileprovider.cachemanager.CacheManager: long currentCacheUsage()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
64 Packageshead roads:
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long delete(java.lang.String,int,java.util.Collection,java.util.Collection)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,int,java.util.Collection,java.util.Collection)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i0 >= 10
-$i1 < 18
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getFirstExpiry()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager$3: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean loadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderGisgraphy: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean isTileToBeDownloaded(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocation(double,double,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.views.drawing.MapSnapshotHandler: void handleMessage(android.os.Message)>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.overlays.FolderZOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int,java.lang.String)>[]--><org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIAlong(java.util.ArrayList,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager$4: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean deleteTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,int,double)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: java.util.ArrayList getPOIsFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.clustering.MarkerClusterer: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList()>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.views.overlay.TilesOverlay$1: void callback(org.osmdroid.views.drawing.MapSnapshot)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaMounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i0 >= 10
-$i1 < 18
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider: boolean hasTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaUnmounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i0 >= 10
-$i1 < 18
Good road: <org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.MinimapOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.util.DuringSplashScreen: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.modules.OfflineTileProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,java.io.File[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[],boolean)>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: boolean addInKmlFolder(org.osmdroid.bonuspack.kml.KmlFolder,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.kml.KmlDocument$KmlSaxHandler: void loadNetworkLink(java.lang.String,java.util.zip.ZipFile)>[]--><org.osmdroid.bonuspack.kml.KmlDocument: boolean parseKMLUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long,int,int)>[]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThemXML(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
-$i1 < 18
Good road: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils$StorageInfo: void <init>(java.lang.String,boolean,boolean,int)>[[-$i1 < 18]]--><android.os.StatFs: long getAvailableBytes()>
One road protect good!
containsStatic:false
containsTry:true
65call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.os.Environment: java.lang.String getStorageState(java.io.File)> is checking!!!
The life time of api is [19,31]
65call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.SettingsActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_SettingsActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void updatePreference(java.lang.String)>[[try]]--><org.osmdroid.tileprovider.cachemanager.CacheManager: long currentCacheUsage()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
64 Packageshead roads:
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long delete(java.lang.String,int,java.util.Collection,java.util.Collection)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,int,java.util.Collection,java.util.Collection)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getFirstExpiry()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager$3: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean loadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderGisgraphy: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean isTileToBeDownloaded(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocation(double,double,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.views.drawing.MapSnapshotHandler: void handleMessage(android.os.Message)>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.overlays.FolderZOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int,java.lang.String)>[]--><org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIAlong(java.util.ArrayList,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager$4: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean deleteTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,int,double)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: java.util.ArrayList getPOIsFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.clustering.MarkerClusterer: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList()>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.views.overlay.TilesOverlay$1: void callback(org.osmdroid.views.drawing.MapSnapshot)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaMounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider: boolean hasTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaUnmounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.MinimapOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.util.DuringSplashScreen: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.OfflineTileProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,java.io.File[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[],boolean)>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: boolean addInKmlFolder(org.osmdroid.bonuspack.kml.KmlFolder,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.kml.KmlDocument$KmlSaxHandler: void loadNetworkLink(java.lang.String,java.util.zip.ZipFile)>[]--><org.osmdroid.bonuspack.kml.KmlDocument: boolean parseKMLUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long,int,int)>[]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThemXML(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.os.Environment: java.lang.String getStorageState(java.io.File)>
One road protect good!
containsStatic:false
containsTry:true
65call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.MapActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_MapActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.MapActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.StationsListActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_StationsListActivity(android.content.Intent)>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.fragments.StationsListFragment dummyMainMethod_be_brunoparmentier_openbikesharing_app_fragments_StationsListFragment(android.content.Intent,android.app.Activity)>[]--><be.brunoparmentier.openbikesharing.app.fragments.StationsListFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:1
crashApisInMain:1
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 <= 13
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[[-$i0 <= 13]]--><android.net.NetworkInfo: int getType()>
#1.the call statck between class <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
-$i0 <= 13
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[[-$i0 <= 13]]--><android.net.NetworkInfo: int getType()>
#2.the call statck between class <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#2.the call statck between class <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[]--><android.net.NetworkInfo: boolean isConnected()>
#2.the call statck between class <org.osmdroid.tileprovider.MapTileProviderBasic: boolean isDowngradedMode(long)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[]--><org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getNetworkAvailable()>[]--><android.net.NetworkInfo: boolean isConnected()>
#3.the call statck between class <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable loadTile(long)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()>[]--><android.net.NetworkInfo: boolean isConnected()>
#4.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocation(double,double,int)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)> is checking!!!
The life time of api is [19,31]
65call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.SettingsActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_SettingsActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><be.brunoparmentier.openbikesharing.app.fragments.SettingsFragment: void updatePreference(java.lang.String)>[[try]]--><org.osmdroid.tileprovider.cachemanager.CacheManager: long currentCacheUsage()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
64 Packageshead roads:
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean checkTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long delete(java.lang.String,int,java.util.Collection,java.util.Collection)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,int,java.util.Collection,java.util.Collection)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getFirstExpiry()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager$3: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean loadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean forceLoadTile(org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase,long)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderGisgraphy: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.cachemanager.CacheManager: boolean isTileToBeDownloaded(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocation(double,double,int)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.views.drawing.MapSnapshotHandler: void handleMessage(android.os.Message)>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.overlays.FolderZOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int,java.lang.String)>[]--><org.osmdroid.bonuspack.location.PicasaPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIAlong(java.util.ArrayList,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,java.lang.String,int,double)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.cachemanager.CacheManager$4: boolean tileAction(long)>[]--><org.osmdroid.tileprovider.cachemanager.CacheManager: boolean deleteTile(long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: boolean exists(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GraphHopperRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOICloseTo(org.osmdroid.util.GeoPoint,int,double)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try]][[$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String)>[[try]]--><org.osmdroid.tileprovider.modules.TileDownloader: android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)>[[try], [$i2 >= 20]]--><org.osmdroid.tileprovider.modules.TileWriter: boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: void cutCurrentCache()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: java.util.ArrayList getPOIsFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.clustering.MarkerClusterer: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.Overlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache(java.lang.String)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList()>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.views.overlay.TilesOverlay$1: void callback(org.osmdroid.views.drawing.MapSnapshot)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaMounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.MapQuestRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.MapView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet)>[]--><org.osmdroid.views.MapView: void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: boolean purgeCache()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider: boolean hasTile(long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: java.lang.Long getExpirationTimestamp(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[])>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void onMediaUnmounted()>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 >= 10
-$i0 < 19
Good road: <org.osmdroid.views.overlay.MinimapOverlay: void <init>(android.content.Context,android.os.Handler)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache)>[]--><org.osmdroid.tileprovider.MapTileProviderBasic: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache)>[[-$i0 >= 10]]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.MinimapOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.GoogleRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road getRoad(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.util.DuringSplashScreen: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runDuringSplashScreen()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.OfflineTileProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,java.io.File[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[])>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[],boolean)>[]--><org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider: void findArchiveFiles()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList)>[]--><org.osmdroid.bonuspack.routing.OSRMRoadManager: org.osmdroid.bonuspack.routing.Road[] getRoads(java.util.ArrayList,boolean)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.OverpassAPIProvider: boolean addInKmlFolder(org.osmdroid.bonuspack.kml.KmlFolder,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.NominatimPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.views.overlay.FolderOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDraw(android.graphics.Canvas,org.osmdroid.views.MapView)>[]--><org.osmdroid.views.overlay.DefaultOverlayManager: void onDrawHelper(android.graphics.Canvas,org.osmdroid.views.MapView,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void draw(android.graphics.Canvas,org.osmdroid.views.Projection)>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader: android.graphics.drawable.Drawable loadTile(long)>[[try]]--><org.osmdroid.tileprovider.modules.TileWriter: android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.TileWriter: java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getPOIInside(org.osmdroid.util.BoundingBox,int)>[]--><org.osmdroid.bonuspack.location.FlickrPOIProvider: java.util.ArrayList getThem(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.BonusPackHelper: java.lang.String requestStringFromUrl(java.lang.String,java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.kml.KmlDocument$KmlSaxHandler: void loadNetworkLink(java.lang.String,java.util.zip.ZipFile)>[]--><org.osmdroid.bonuspack.kml.KmlDocument: boolean parseKMLUrl(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long)>[]--><org.osmdroid.tileprovider.modules.MapTileFilesystemProvider: void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long,int,int)>[]--><org.osmdroid.tileprovider.modules.TileWriter: void <init>()>[]--><org.osmdroid.tileprovider.modules.TileWriter$1: void run()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeoNamesPOIProvider: java.util.ArrayList getThemXML(java.lang.String)>[]--><org.osmdroid.bonuspack.utils.HttpConnection: void doGet(java.lang.String)>[[try]]--><okhttp3.RealCall: okhttp3.Response execute()>[]--><okhttp3.Dispatcher: void finished(okhttp3.RealCall)>[]--><okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object,boolean)>[]--><org.osmdroid.views.drawing.MapSnapshot: void run()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refreshASAP()>[]--><org.osmdroid.views.drawing.MapSnapshot: void refresh()>[]--><org.osmdroid.views.overlay.TilesOverlay: void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas)>[]--><org.osmdroid.util.TileLooper: void loop(double,org.osmdroid.util.RectL)>[]--><org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper: void finaliseLoop()>[]--><org.osmdroid.tileprovider.TileStates: void finaliseLoop()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter$1: void run()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation()>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: void runCleanupOperation(long,int,long,boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
-$i0 < 19
Good road: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.modules.SqlTileWriter: int[] importFromFileCache(boolean)>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: boolean exists(java.lang.String,long)>[]--><org.osmdroid.tileprovider.modules.SqlTileWriter: long getRowCount(java.lang.String,java.lang.String[])>[[try]]--><org.osmdroid.tileprovider.modules.SqlTileWriter: android.database.sqlite.SQLiteDatabase getDb()>[[try]]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache()>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidTileCache(android.content.Context)>[]--><org.osmdroid.config.DefaultConfigurationProvider: java.io.File getOsmdroidBasePath(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: org.osmdroid.tileprovider.util.StorageUtils$StorageInfo getBestWritableStorage(android.content.Context)>[]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageList(android.content.Context)>[[-$i0 < 19]]--><org.osmdroid.tileprovider.util.StorageUtils: java.util.List getStorageListApi19(android.content.Context)>[]--><android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
65call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDouble(java.lang.String,double)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.MapActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_MapActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.MapActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putDouble(java.lang.String,double)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putDouble(java.lang.String,double)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:5
crashApisInMain:2
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.os.BaseBundle: double getDouble(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.MapActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_MapActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.MapActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: double getDouble(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: double getDouble(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:6
crashApisInMain:3
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>[]--><org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double,boolean)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.osmdroid.bonuspack.location.GeocoderNominatim: java.util.List getFromLocation(double,double,int)>[[try]]--><org.osmdroid.bonuspack.location.GeocoderNominatim: android.location.Address buildAndroidAddress(com.google.gson.JsonObject)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
try
Good road with try: <org.osmdroid.tileprovider.tilesource.MapQuestTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.MapQuestTileSource: void retrieveAccessToken(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.MapQuestTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.MapQuestTileSource: void retrieveMapBoxMapId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.util.CloudmadeUtil: void retrieveCloudmadeKey(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.ThunderforestTileSource: void <init>(android.content.Context,int)>[]--><org.osmdroid.tileprovider.tilesource.ThunderforestTileSource: java.lang.String retrieveMapId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.bing.BingMapTileSource: void retrieveBingKey(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void retrieveDomainOverride(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void retrieveAppCode(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void retrieveAppId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.HEREWeGoTileSource: void retrieveMapBoxMapId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.ThunderforestTileSource: boolean haveMapId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.MapBoxTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.MapBoxTileSource: void retrieveMapBoxMapId(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.osmdroid.tileprovider.tilesource.MapBoxTileSource: void <init>(android.content.Context)>[]--><org.osmdroid.tileprovider.tilesource.MapBoxTileSource: void retrieveAccessToken(android.content.Context)>[]--><org.osmdroid.tileprovider.util.ManifestUtil: java.lang.String retrieveKey(android.content.Context,java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.MapActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_MapActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.MapActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.StationsListActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_StationsListActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.StationsListActivity: void onCreate(android.os.Bundle)>[]--><be.brunoparmentier.openbikesharing.app.activities.StationsListActivity$TabsPagerAdapter: void <init>(be.brunoparmentier.openbikesharing.app.activities.StationsListActivity,android.support.v4.app.FragmentManager)>[]--><be.brunoparmentier.openbikesharing.app.fragments.StationsListFragment: be.brunoparmentier.openbikesharing.app.fragments.StationsListFragment newInstance(java.util.ArrayList,int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <be.brunoparmentier.openbikesharing.app.widgets.StationsListAppWidgetFactory: android.widget.RemoteViews getViewAt(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <be.brunoparmentier.openbikesharing.app.widgets.StationsListAppWidgetFactory: android.widget.RemoteViews getViewAt(int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:7
crashApisInMain:4
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getWiFiNetworkAvailable()> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#2.the call statck between class <org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck: boolean getCellularDataNetworkAvailable()> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.MapActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_MapActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.MapActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: be.brunoparmentier.openbikesharing.app.activities.StationsListActivity dummyMainMethod_be_brunoparmentier_openbikesharing_app_activities_StationsListActivity(android.content.Intent)>[]--><be.brunoparmentier.openbikesharing.app.activities.StationsListActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:9
crashApisInMain:5
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
crashApis numbers:9
crashApis numbers in main road:5
On Android Version 16 this app may have error api use(at least): 5 and error api roads: 9
On Android Version 17 this app may have error api use(at least): 5 and error api roads: 9
On Android Version 18 this app may have error api use(at least): 5 and error api roads: 9
On Android Version 19 this app may have error api use(at least): 5 and error api roads: 9
On Android Version 20 this app may have error api use(at least): 5 and error api roads: 9
On Android Version 21 this app may have error api use(at least): 1 and error api roads: 2
On Android Version 22 this app may have error api use(at least): 1 and error api roads: 2
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 4 and error api roads: 10
