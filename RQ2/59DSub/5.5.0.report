/home/ys/桌面/data-PSDroid-ICSE/59DSub/DSub-5.5.0.apk
Entry Points[github.daneren2005.dsub.service.sync.PodcastSyncService, github.daneren2005.dsub.provider.DSubWidget4x2, github.daneren2005.dsub.service.sync.MostRecentSyncService, github.daneren2005.dsub.activity.QueryReceiverActivity, github.daneren2005.dsub.receiver.PlayActionReceiver, org.fourthline.cling.android.AndroidUpnpServiceImpl, github.daneren2005.dsub.activity.EditPlayActionActivity, github.daneren2005.dsub.provider.DSubWidget4x3, github.daneren2005.dsub.receiver.MediaButtonIntentReceiver, github.daneren2005.dsub.receiver.A2dpIntentReceiver, github.daneren2005.dsub.provider.MostRecentStubProvider, github.daneren2005.dsub.provider.DSubSearchProvider, github.daneren2005.dsub.service.sync.AuthenticatorService, github.daneren2005.dsub.receiver.HeadphonePlugReceiver, github.daneren2005.dsub.activity.VoiceQueryReceiverActivity, github.daneren2005.dsub.activity.SubsonicFragmentActivity, github.daneren2005.dsub.service.sync.StarredSyncService, github.daneren2005.dsub.service.DownloadService, github.daneren2005.dsub.receiver.BootReceiver, github.daneren2005.dsub.provider.PlaylistStubProvider, github.daneren2005.dsub.receiver.AudioNoisyReceiver, github.daneren2005.dsub.service.HeadphoneListenerService, github.daneren2005.dsub.provider.DSubWidget4x1, github.daneren2005.dsub.provider.PodcastStubProvider, github.daneren2005.dsub.service.sync.PlaylistSyncService, github.daneren2005.dsub.activity.SettingsActivity, github.daneren2005.dsub.provider.DSubWidget4x4, github.daneren2005.dsub.provider.StarredStubProvider, github.daneren2005.dsub.service.AutoMediaBrowserService]
FllowDroidcallgraph size:9972
Soot started on Wed Jul 13 06:19:51 CST 2022
StaticCheck:$ys0 < 
StaticCheck:<com.google.android.gms.internal.zzmx: boolean zzcd(int)>< 
Soot finished on Wed Jul 13 06:20:41 CST 2022
Soot has run for 0 min. 49 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 15
Declared Target Sdk version is: 26
Declared Max Sdk version is: -1
Collected 1119 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.media.PlaybackParams: android.media.PlaybackParams setSpeed(float)> is checking!!!
The life time of api is [23,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23]][[try]]
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2500(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]--><android.media.PlaybackParams: android.media.PlaybackParams setSpeed(float)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller: java.util.List getAllSessions()> is checking!!!
The life time of api is [21,31]
405call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
$i0 < 21
$i0 < 18
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.pm.PackageInstaller: java.util.List getAllSessions()>has compatibility isssues！
-----------------------------------------
404 Packageshead roads:
crashApis:1
crashApisInMain:1
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()> is checking!!!
The life time of api is [21,31]
405call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
$i0 < 21
$i0 < 18
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>has compatibility isssues！
-----------------------------------------
404 Packageshead roads:
crashApis:2
crashApisInMain:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
402call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.PlayActionReceiver dummyMainMethod_github_daneren2005_dsub_receiver_PlayActionReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.PlayActionReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>[[try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>[[try]]
$i0 < 21
$i0 < 18
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
401 Packageshead roads:
crashApis:3
crashApisInMain:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.MulticastLock: void acquire()> is checking!!!
The life time of api is [4,30]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.fourthline.cling.android.AndroidUpnpServiceImpl dummyMainMethod_org_fourthline_cling_android_AndroidUpnpServiceImpl(android.content.Intent)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: void onCreate()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void <init>(org.fourthline.cling.android.AndroidUpnpServiceImpl,org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void acquire()>
One road protect good!
3 Packageshead roads:
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void acquire()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void acquire()>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void acquire()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
506call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onResume()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void populateTabs()>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean canBookmark(android.content.Context)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.parser.SearchResult2Parser: github.daneren2005.dsub.domain.SearchResult parse$1e6807d3(java.io.Reader)>[]--><github.daneren2005.dsub.service.parser.AbstractParser: void validate()>[]--><github.daneren2005.dsub.domain.ServerInfo: void saveServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
505 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onCreateContextMenuSupport(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.util.MenuUtil: void hideMenuItems(android.content.Context,android.view.Menu,github.daneren2005.dsub.view.UpdateView)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[[try]]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
crashApis:4
crashApisInMain:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <java.awt.Dimension: void <init>(int,int)> is checking!!!
The life time of api is [1,8]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.MainController$ShutdownWindow: void <init>()>[]--><java.awt.Dimension: void <init>(int,int)>
#1.the call statck between class <org.fourthline.cling.support.shared.MainController$ShutdownWindow: void <init>()> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.Main: void init()>[]--><java.awt.Dimension: void <init>(int,int)>
#2.the call statck between class <org.fourthline.cling.support.shared.Main: void init()> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.seamless.swing.logging.LogController: void initializeToolBar(org.seamless.swing.logging.LogController$Expiration)>[]--><java.awt.Dimension: void <init>(int,int)>
#3.the call statck between class <org.seamless.swing.logging.LogController: void initializeToolBar(org.seamless.swing.logging.LogController$Expiration)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.log.impl.LogViewImpl: void initializeToolBar(org.seamless.swing.logging.LogController$Expiration)>[]--><java.awt.Dimension: void <init>(int,int)>
#4.the call statck between class <org.fourthline.cling.support.shared.log.impl.LogViewImpl: void initializeToolBar(org.seamless.swing.logging.LogController$Expiration)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.log.impl.LogViewImpl: void init()>[]--><org.seamless.swing.logging.LogCategorySelector: void <init>(java.util.List)>[]--><java.awt.Dimension: void <init>(int,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.log.impl.LogViewImpl: void init()>[]--><java.awt.Dimension: void <init>(int,int)>
#5.the call statck between class <org.fourthline.cling.support.shared.log.impl.LogViewImpl: void init()> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.seamless.swing.logging.LogController: void <init>(org.seamless.swing.Controller,org.seamless.swing.logging.LogController$Expiration,java.util.List)>[]--><java.awt.Dimension: void <init>(int,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.seamless.swing.logging.LogController: void <init>(org.seamless.swing.Controller,org.seamless.swing.logging.LogController$Expiration,java.util.List)>[]--><org.seamless.swing.logging.LogCategorySelector: void <init>(java.util.List)>[]--><java.awt.Dimension: void <init>(int,int)>
#6.the call statck between class <org.seamless.swing.logging.LogController: void <init>(org.seamless.swing.Controller,org.seamless.swing.logging.LogController$Expiration,java.util.List)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)>[]--><java.awt.Dimension: void <init>(int,int)>
#7.the call statck between class <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)> to <java.awt.Dimension: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void register(android.content.Context,android.content.ComponentName)>[]--><android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:6
crashApisInMain:5
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
-$i1 < 26
Good road: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.StarredSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.fourthline.cling.android.AndroidRouter: boolean enableWiFi()>[[try]]--><android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.RemoteMediaPlayer$12: void zza(com.google.android.gms.common.api.Api$zzb)>[[try]]--><com.google.android.gms.cast.internal.zzm: long zza(com.google.android.gms.cast.internal.zzo,com.google.android.gms.cast.MediaInfo,boolean,long,long[],org.json.JSONObject)>[[try]]--><com.google.android.gms.cast.MediaInfo: org.json.JSONObject toJson()>[[try]]--><com.google.android.gms.cast.MediaMetadata: org.json.JSONObject toJson()>[]--><com.google.android.gms.cast.MediaMetadata: void zza(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#2.the call statck between class <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)>[]--><com.google.android.gms.cast.MediaMetadata: boolean zzb(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#3.the call statck between class <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
416call roads:
1 Mainhead roads:
415 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void onSaveInstanceState(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#18.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.media.PlaybackParams: void <init>()> is checking!!!
The life time of api is [23,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23]][[try]]
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2500(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]--><android.media.PlaybackParams: void <init>()>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.media.MediaPlayer: void setPlaybackParams(android.media.PlaybackParams)> is checking!!!
The life time of api is [23,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23]][[try]]
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2500(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]--><android.media.MediaPlayer: void setPlaybackParams(android.media.PlaybackParams)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <java.awt.Dimension: double getHeight()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window,java.awt.Window)>[]--><java.awt.Dimension: double getHeight()>
#1.the call statck between class <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)> to <java.awt.Dimension: double getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void register(android.content.Context,android.content.ComponentName)>[]--><android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:10
crashApisInMain:6
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
404call roads:
1 Mainhead roads:
403 Packageshead roads:
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#77.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:true
78call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.MulticastLock: void release()> is checking!!!
The life time of api is [4,30]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.fourthline.cling.android.AndroidUpnpServiceImpl dummyMainMethod_org_fourthline_cling_android_AndroidUpnpServiceImpl(android.content.Intent)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: void onCreate()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void <init>(org.fourthline.cling.android.AndroidUpnpServiceImpl,org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void release()>
One road protect good!
3 Packageshead roads:
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void release()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void release()>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: void release()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)> is checking!!!
The life time of api is [3,30]
5call roads:
1 Mainhead roads:
$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.fourthline.cling.android.AndroidUpnpServiceImpl dummyMainMethod_org_fourthline_cling_android_AndroidUpnpServiceImpl(android.content.Intent)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: void onCreate()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void <init>(org.fourthline.cling.android.AndroidUpnpServiceImpl,org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
One road protect good!
4 Packageshead roads:
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.util.Util: android.net.wifi.WifiManager$WifiLock createWifiLock(android.content.Context,java.lang.String)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
#2.the call statck between class <github.daneren2005.dsub.util.Util: android.net.wifi.WifiManager$WifiLock createWifiLock(android.content.Context,java.lang.String)> to <android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
One road protect good!
crashApis:12
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.media.RemoteControlClient: void setPlaybackState(int,long,float)> is checking!!!
The life time of api is [18,31]
399call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.A2dpIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.AudioNoisyReceiver dummyMainMethod_github_daneren2005_dsub_receiver_AudioNoisyReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.AudioNoisyReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
398 Packageshead roads:
try
Good road with try: <org.fourthline.cling.transport.RouterImpl: boolean enable(org.fourthline.cling.transport.EnableRouter)>[]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onStop()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
!!!this api will crash on sdk 16 17 
Error road: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
#4.the call statck between class <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)> to <android.media.RemoteControlClient: void setPlaybackState(int,long,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 
Error road: <com.google.android.gms.cast.internal.zze$zzb: void zzs(java.lang.String,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
#5.the call statck between class <com.google.android.gms.cast.internal.zze$zzb: void zzs(java.lang.String,java.lang.String)> to <android.media.RemoteControlClient: void setPlaybackState(int,long,float)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToPrevious()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
!!!this api will crash on sdk 16 17 
Error road: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
#7.the call statck between class <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)> to <android.media.RemoteControlClient: void setPlaybackState(int,long,float)>has compatibility isssues！
-----------------------------------------
$i1 != $i2
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
One road protect good!
crashApis:14
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.os.BaseBundle: double getDouble(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.RemoteMediaPlayer$12: void zza(com.google.android.gms.common.api.Api$zzb)>[[try]]--><com.google.android.gms.cast.internal.zzm: long zza(com.google.android.gms.cast.internal.zzo,com.google.android.gms.cast.MediaInfo,boolean,long,long[],org.json.JSONObject)>[[try]]--><com.google.android.gms.cast.MediaInfo: org.json.JSONObject toJson()>[[try]]--><com.google.android.gms.cast.MediaMetadata: org.json.JSONObject toJson()>[]--><com.google.android.gms.cast.MediaMetadata: void zza(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: double getDouble(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.media.audiofx.LoudnessEnhancer: void <init>(int)> is checking!!!
The life time of api is [19,31]
401call roads:
1 Mainhead roads:
400 Packageshead roads:
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void onStart()>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.BassBoost getBassBoost()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void onStart()>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.Equalizer getEqualizer()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: boolean onContextItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: github.daneren2005.dsub.audiofx.LoudnessEnhancerController getLoudnessEnhancerController()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: boolean onContextItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.Equalizer getEqualizer()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: boolean onContextItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.BassBoost getBassBoost()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.BassBoost getBassBoost()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.Equalizer getEqualizer()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: github.daneren2005.dsub.audiofx.LoudnessEnhancerController getLoudnessEnhancerController()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void access$000(github.daneren2005.dsub.fragments.EqualizerFragment,boolean)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.Equalizer getEqualizer()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void access$000(github.daneren2005.dsub.fragments.EqualizerFragment,boolean)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: github.daneren2005.dsub.audiofx.LoudnessEnhancerController getLoudnessEnhancerController()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void access$000(github.daneren2005.dsub.fragments.EqualizerFragment,boolean)>[]--><github.daneren2005.dsub.audiofx.EqualizerController: android.media.audiofx.BassBoost getBassBoost()>[[try]]--><github.daneren2005.dsub.audiofx.EqualizerController: void init()>[[-$i0 < 19]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void <init>(android.content.Context,int)>[[try]]--><android.media.audiofx.LoudnessEnhancer: void <init>(int)>
One road protect good!
containsStatic:false
containsTry:true
401call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
401call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.MediaButtonIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_MediaButtonIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.MediaButtonIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
400 Packageshead roads:
crashApis:15
crashApisInMain:7
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.view.View: void setElevation(float)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 21
Good road: <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><github.daneren2005.dsub.view.CardView: void init(android.content.Context)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context)>[]--><github.daneren2005.dsub.view.CardView: void init(android.content.Context)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><github.daneren2005.dsub.view.CardView: void init(android.content.Context)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <github.daneren2005.dsub.view.CardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><github.daneren2005.dsub.view.CardView: void init(android.content.Context)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.WifiLock: void release()> is checking!!!
The life time of api is [1,30]
400call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.A2dpIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.AudioNoisyReceiver dummyMainMethod_github_daneren2005_dsub_receiver_AudioNoisyReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.AudioNoisyReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
399 Packageshead roads:
try
Good road with try: <org.fourthline.cling.transport.RouterImpl: boolean enable(org.fourthline.cling.transport.EnableRouter)>[]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onStop()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzs(java.lang.String,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToPrevious()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
$i1 != $i2
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void addDevice(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[[try]]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$2: void received(org.fourthline.cling.model.action.ActionInvocation,int)>[]--><github.daneren2005.dsub.service.DownloadService: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: boolean onMove$1cbf1fb9(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$CheckCompletionTask: java.lang.Object doInBackground()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void deleteBookmark(github.daneren2005.dsub.domain.MusicDirectory$Entry,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlc$zza: void handleMessage(android.os.Message)>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$2: void onResult(com.google.android.gms.common.api.Result)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void play(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.BookmarkAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void onSwiped$763efb0b(android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void toggleOffline()>[]--><github.daneren2005.dsub.service.DownloadService: void setOnline(boolean)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void setActiveServer(int)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$31: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.internal.zzlg$zza$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zzc(com.google.android.gms.internal.zzlg,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback$1: java.lang.Void doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void removeBackground(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getDownloadInputStream(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,long,int,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.LocalDevice)>[[try]]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: void release()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onRelease()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><android.net.wifi.WifiManager.WifiLock: void release()>
#56.the call statck between class <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onRelease()> to <android.net.wifi.WifiManager.WifiLock: void release()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:true
57call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.PlayActionReceiver dummyMainMethod_github_daneren2005_dsub_receiver_PlayActionReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.PlayActionReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.EditPlayActionActivity dummyMainMethod_github_daneren2005_dsub_activity_EditPlayActionActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.EditPlayActionActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:17
crashApisInMain:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
420call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.PlayActionReceiver dummyMainMethod_github_daneren2005_dsub_receiver_PlayActionReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.PlayActionReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
$i0 < 21
$i0 < 18
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
419 Packageshead roads:
crashApis:18
crashApisInMain:9
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.media.MediaPlayer: void setVolume(float,float)> is checking!!!
The life time of api is [1,17]
3call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.util.Util$5: void onAudioFocusChange(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setVolume(float)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reapplyVolume()>[]--><github.daneren2005.dsub.service.DownloadService: void applyReplayGain(android.media.MediaPlayer,github.daneren2005.dsub.service.DownloadFile)>[[try]]--><android.media.MediaPlayer: void setVolume(float,float)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.util.Util$5: void onAudioFocusChange(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setVolume(float)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reapplyVolume()>[]--><github.daneren2005.dsub.service.DownloadService: void applyReplayGain(android.media.MediaPlayer,github.daneren2005.dsub.service.DownloadFile)>[[try]]--><android.media.MediaPlayer: void setVolume(float,float)>
One road protect good!
2 Packageshead roads:
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2300(github.daneren2005.dsub.service.DownloadService,android.media.MediaPlayer,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.DownloadService: void applyReplayGain(android.media.MediaPlayer,github.daneren2005.dsub.service.DownloadFile)>[[try]]--><android.media.MediaPlayer: void setVolume(float,float)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void reapplyVolume()>[]--><github.daneren2005.dsub.service.DownloadService: void applyReplayGain(android.media.MediaPlayer,github.daneren2005.dsub.service.DownloadFile)>[[try]]--><android.media.MediaPlayer: void setVolume(float,float)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)> is checking!!!
The life time of api is [26,31]
401call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.A2dpIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.AudioNoisyReceiver dummyMainMethod_github_daneren2005_dsub_receiver_AudioNoisyReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.AudioNoisyReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
400 Packageshead roads:
try
Good road with try: <org.fourthline.cling.transport.RouterImpl: boolean enable(org.fourthline.cling.transport.EnableRouter)>[]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onStop()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzs(java.lang.String,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToPrevious()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void addDevice(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[[try]]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$2: void received(org.fourthline.cling.model.action.ActionInvocation,int)>[]--><github.daneren2005.dsub.service.DownloadService: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: boolean onMove$1cbf1fb9(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$CheckCompletionTask: java.lang.Object doInBackground()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void deleteBookmark(github.daneren2005.dsub.domain.MusicDirectory$Entry,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlc$zza: void handleMessage(android.os.Message)>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$2: void onResult(com.google.android.gms.common.api.Result)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void play(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.BookmarkAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void onSwiped$763efb0b(android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void toggleOffline()>[]--><github.daneren2005.dsub.service.DownloadService: void setOnline(boolean)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void setActiveServer(int)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$31: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.internal.zzlg$zza$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zzc(com.google.android.gms.internal.zzlg,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback$1: java.lang.Void doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void removeBackground(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getDownloadInputStream(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,long,int,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onRelease()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.LocalDevice)>[[try]]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void createBookmark(github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void addDevice(org.fourthline.cling.model.meta.LocalDevice)>[[try]]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Start: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Start: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.common.images.ImageManager$ImageReceiver: void onReceiveResult(int,android.os.Bundle)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks: void setupChannel()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void removeAllRemoteDevices()>[[try]]--><org.fourthline.cling.registry.RemoteItems: void removeAll()>[]--><org.fourthline.cling.registry.RemoteItems: void removeAll(boolean)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$11$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.SelectConnector$Manager: boolean dispatch(java.lang.Runnable)>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.ArtistAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$15: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingRenewal: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingRenewal: org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlay()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void access$500(github.daneren2005.dsub.service.ChromeCastController)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment: void onSongPress(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzm: boolean zza(com.google.android.gms.common.internal.zzm$zza,android.content.ServiceConnection,java.lang.String)>[[try]]--><github.daneren2005.dsub.provider.DLNARouteProvider$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzm: boolean zza(com.google.android.gms.common.internal.zzm$zza,android.content.ServiceConnection,java.lang.String)>[[try]]--><com.google.android.gms.common.internal.zzm$zzb$zza: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><github.daneren2005.dsub.provider.DLNARouteProvider$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void access$200(github.daneren2005.dsub.service.DLNAController)>[]--><github.daneren2005.dsub.service.DLNAController: void failedLoad()>[]--><github.daneren2005.dsub.service.DownloadService: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPlaybackSpeed()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void scrollToCurrent()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.JukeboxController: void changePosition(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void onStart()>[]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void savePlayQueue(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ViewUrlTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ViewUrlTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineStars(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineStars(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void access$100(github.daneren2005.dsub.service.JukeboxController)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void access$100(github.daneren2005.dsub.service.JukeboxController)>[]--><github.daneren2005.dsub.service.JukeboxController: void disableJukeboxOnError(java.lang.Throwable,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.parser.UserParser: java.util.List parse$39b5e77(java.io.Reader)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.parser.UserParser: java.util.List parse$39b5e77(java.io.Reader)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzli$2: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.internal.zzlg: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingUnsubscribe: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingUnsubscribe: void onUnsubscribe(org.fourthline.cling.model.message.StreamResponseMessage)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.controlpoint.event.Search)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider: void onDiscoveryRequestChanged(android.support.v7.media.MediaRouteDiscoveryRequest)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$4: void onDrawerOpened$3c7ec8c3()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$6: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$6: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: boolean onMediaButtonEvent(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void handleKeyEvent(android.view.KeyEvent)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void handleKeyEvent(android.view.KeyEvent)>[]--><github.daneren2005.dsub.service.DownloadService: void stop()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$8: void onPrepared(android.media.MediaPlayer)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$9$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$9$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.LyricsFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.LyricsFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onSelect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.view.UpdateView: void access$000()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.MediaRouteManager: void onRouteUnselected$64594288(android.support.v7.media.MediaRouter$RouteInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void access$300(github.daneren2005.dsub.util.DownloadFileItemHelperCallback)>[]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.RemoteItems: void add(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.RemoteItems: void add(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$EntryInstanceUpdater: void execute()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetGain: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetGain: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToQueueItem(long)>[]--><github.daneren2005.dsub.service.DownloadService: void play(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void updateMediaButton$1385ff()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$2: void eventReceived(org.fourthline.cling.model.gena.GENASubscription)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$2: void eventReceived(org.fourthline.cling.model.gena.GENASubscription)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzb(com.google.android.gms.cast.internal.DeviceStatus)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void access$300(github.daneren2005.dsub.util.BackgroundTask$Task)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks$2: void onStatusUpdated()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks$2: void onStatusUpdated()>[]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void delete()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.transport.impl.StreamServerImpl$RequestHttpHandler: void handle(com.sun.net.httpserver.HttpExchange)>[]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.transport.spi.UpnpStream)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onUnselect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$5: boolean onPreferenceClick(android.preference.Preference)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider: void access$300(github.daneren2005.dsub.provider.DLNARouteProvider,org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$11: boolean onError(android.media.MediaPlayer,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$11: boolean onError(android.media.MediaPlayer,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void removeAllLocalDevices()>[[try]]--><org.fourthline.cling.registry.LocalItems: void removeAll()>[]--><org.fourthline.cling.registry.LocalItems: void removeAll(boolean)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.provider.DSubWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void clearBackground()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingSubscribe: void responseSent(org.fourthline.cling.model.message.StreamResponseMessage)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlp$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Skip: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Skip: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectoryImpl$7be032a8(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$3: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$3: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onUnselect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onItemClicked$7e075870(github.daneren2005.dsub.domain.Playlist)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient build()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlg$zzd: void zza(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzl(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$15: void done(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView: void triggerUpdate()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzli$4: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,int)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP: void access$100(github.daneren2005.dsub.util.compat.RemoteControlClientLP)>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$BufferTask: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$BufferTask: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SslConnection: boolean access$900(org.eclipse.jetty.io.nio.SslConnection,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl$1: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.transport.spi.UpnpStream)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void autoplay(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$16: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingSubscribe$1: void eventReceived()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.PodcastChannelAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DSubWidgetProvider: void onEnabled(android.content.Context)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2100(github.daneren2005.dsub.service.DownloadService,github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: boolean menuItemSelected(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$300(github.daneren2005.dsub.service.DownloadService,java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.handler.ContextHandlerCollection: void doStart()>[]--><org.eclipse.jetty.server.handler.HandlerCollection: void doStart()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingEvent: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.ReceivingEvent: org.fourthline.cling.model.message.gena.OutgoingEventResponseMessage executeSync()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void changeTrack(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$12: void received(org.fourthline.cling.model.action.ActionInvocation,org.fourthline.cling.support.model.PositionInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$12: void received(org.fourthline.cling.model.action.ActionInvocation,org.fourthline.cling.support.model.PositionInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingSearchResponse: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingSearchResponse: void execute()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onCustomAction$5dc9c75(java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void toggleStarred()>[]--><github.daneren2005.dsub.util.UpdateHelper: void toggleStarred(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,github.daneren2005.dsub.util.UpdateHelper$OnStarChange)>[]--><github.daneren2005.dsub.util.UpdateHelper: void toggleStarred(android.content.Context,java.util.List,github.daneren2005.dsub.util.UpdateHelper$OnStarChange)>[]--><github.daneren2005.dsub.service.DownloadService$16: void starChange$1385ff()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onCustomAction$5dc9c75(java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void toggleRating(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setRating(int)>[]--><github.daneren2005.dsub.service.DownloadService: void stop()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadFile$DownloadTask: void checkDownloads()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener: void onCallStateChanged(int,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzb(com.google.android.gms.cast.internal.ApplicationStatus)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$6: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$6: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.EditPlayActionActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.EditPlayActionActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientJB$1: long onGetPlaybackPosition()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getCoverArt(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void access$800(github.daneren2005.dsub.service.ChromeCastController)>[]--><github.daneren2005.dsub.service.ChromeCastController: void failedLoad()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.SocketConnector: void startConnection(org.eclipse.jetty.client.HttpDestination)>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$8: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader$7c929b60(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.bio.SocketConnector: void accept$13462e()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void resume()>[[try]]--><org.fourthline.cling.registry.RemoteItems: void resume()>[]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void resume()>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void onApplicationDisconnected(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void changeTrack(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPause()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setArtistRadio(java.lang.String)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void setArtist(java.lang.String)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void refill()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.EntryGridAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.controlpoint.ControlPointImpl: void search(int)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongProgress(github.daneren2005.dsub.service.DownloadFile,int,java.lang.Integer,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$8: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$8: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$4: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void access$500(github.daneren2005.dsub.service.DownloadServiceLifecycleSupport)>[]--><github.daneren2005.dsub.service.DownloadService: void restore(java.util.List,java.util.List,int,int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectVideoFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectVideoFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Stop: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Stop: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$26: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.internal.zzlg$zzb$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.internal.zzlg,com.google.android.gms.common.internal.ResolveAccountResponse)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$21$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$12: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$12: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ArtistRadioBuffer: void access$000(github.daneren2005.dsub.util.ArtistRadioBuffer)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void refill()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onSelect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onItemClicked$4c2ae096(java.io.Serializable)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void setRating(github.daneren2005.dsub.domain.MusicDirectory$Entry,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$9: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$16: void done(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView: void triggerUpdate()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetPlaylist: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetPlaylist: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.DownloadFileAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void bindPreferences()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$3: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$3: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$GetStatus: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$GetStatus: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.MediaRouteManager: void onRouteSelected$64594288(android.support.v7.media.MediaRouter$RouteInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void create(boolean,int)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void execute(org.fourthline.cling.controlpoint.SubscriptionCallback)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onRelease()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void start()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$AvatarTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$AvatarTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$25: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void clearIncomplete()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment: void playNowInTask(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void access$000(github.daneren2005.dsub.fragments.PreferenceCompatFragment)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void bindPreferences()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientJB$2: void onPlaybackPositionUpdate(long)>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$3200(github.daneren2005.dsub.service.DownloadService,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void doPlay(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.mock.MockUpnpService$1: void <init>(org.fourthline.cling.mock.MockUpnpService,org.fourthline.cling.UpnpService,org.fourthline.cling.mock.MockUpnpServiceConfiguration)>[]--><org.fourthline.cling.registry.RegistryImpl: void <init>(org.fourthline.cling.UpnpService)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void shutdown()>[]--><org.fourthline.cling.controlpoint.SubscriptionCallback: void end()>[[try]]--><org.fourthline.cling.controlpoint.SubscriptionCallback: void endRemoteSubscription(org.fourthline.cling.model.gena.RemoteGENASubscription)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.HttpClient: void doStart()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onAlbumSelected(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingSubscribe: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingSubscribe: org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync()>[[try]]--><org.fourthline.cling.protocol.sync.SendingSubscribe: void onSubscriptionFailure()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment: void onStartNewFragment(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.shehabic.droppy.DroppyMenuPopup$3: void onClick(android.view.View)>[]--><com.shehabic.droppy.DroppyMenuPopup: void callOnClick(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$33: void call(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1400(github.daneren2005.dsub.fragments.NowPlayingFragment,float)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlg$zzg: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzj(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.bio.SocketConnector: void doStart()>[]--><org.eclipse.jetty.server.AbstractConnector: void doStart()>[[try]]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2000(github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$1: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$1: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$3100(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void playNext()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$1: void onPanelCollapsed$3c7ec8c3()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectYearFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$3: java.lang.String doInBackground()>[]--><github.daneren2005.dsub.util.LoadingTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void updatePlaylist()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment: void access$000(github.daneren2005.dsub.fragments.DownloadFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.SearchAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyInstances(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[[try]]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void notifyChange(android.content.Context,github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void performUpdate(android.content.Context,github.daneren2005.dsub.service.DownloadService,int[],boolean)>[]--><github.daneren2005.dsub.provider.DSubWidgetProvider: void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews)>[[-$i0 < 26]]--><android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>
One road protect good!
containsStatic:false
containsTry:true
401call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <java.awt.Toolkit: java.awt.Dimension getScreenSize()> is checking!!!
The life time of api is [1,8]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.support.shared.Main$5: void run()>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Dimension getScreenSize()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.support.shared.Main$5: void run()>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Dimension getScreenSize()>
#129.the call statck between class <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)> to <java.awt.Toolkit: java.awt.Dimension getScreenSize()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:true
130call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
404call roads:
1 Mainhead roads:
403 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.RemoteMediaPlayer: void onMessageReceived$4b4da5a3(java.lang.String)>[]--><com.google.android.gms.cast.internal.zzm: void zzbK(java.lang.String)>[[try]]--><com.google.android.gms.cast.internal.zzm: void zza(long,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaStatus: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaStatus: int zza(org.json.JSONObject,int)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#25.the call statck between class <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:true
26call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.media.AudioFocusRequest.Builder: android.media.AudioFocusRequest.Builder setAudioAttributes(android.media.AudioAttributes)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> is checking!!!
The life time of api is [1,30]
463call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onResume()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void populateTabs()>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean canBookmark(android.content.Context)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.parser.SearchResult2Parser: github.daneren2005.dsub.domain.SearchResult parse$1e6807d3(java.io.Reader)>[]--><github.daneren2005.dsub.service.parser.AbstractParser: void validate()>[]--><github.daneren2005.dsub.domain.ServerInfo: void saveServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>has compatibility isssues！
-----------------------------------------
462 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onCreateContextMenuSupport(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.util.MenuUtil: void hideMenuItems(android.content.Context,android.view.Menu,github.daneren2005.dsub.view.UpdateView)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
#1.the call statck between class <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[[try]]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void access$300(github.daneren2005.dsub.service.DLNAController,github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
crashApis:21
crashApisInMain:10
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.fourthline.cling.android.AndroidUpnpServiceImpl$1: org.fourthline.cling.transport.Router createRouter(org.fourthline.cling.protocol.ProtocolFactory,org.fourthline.cling.registry.Registry)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: org.fourthline.cling.android.AndroidRouter createRouter(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.protocol.ProtocolFactory,android.content.Context)>[]--><org.fourthline.cling.android.AndroidRouter: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.protocol.ProtocolFactory,android.content.Context)>[]--><org.fourthline.cling.android.NetworkUtils: android.net.NetworkInfo getConnectedNetworkInfo(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <org.fourthline.cling.android.AndroidUpnpServiceImpl$1: org.fourthline.cling.transport.Router createRouter(org.fourthline.cling.protocol.ProtocolFactory,org.fourthline.cling.registry.Registry)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><org.fourthline.cling.android.NetworkUtils: android.net.NetworkInfo getConnectedNetworkInfo(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#2.the call statck between class <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.WifiLock: boolean isHeld()> is checking!!!
The life time of api is [1,30]
399call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.A2dpIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.AudioNoisyReceiver dummyMainMethod_github_daneren2005_dsub_receiver_AudioNoisyReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.AudioNoisyReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
398 Packageshead roads:
try
Good road with try: <org.fourthline.cling.transport.RouterImpl: boolean enable(org.fourthline.cling.transport.EnableRouter)>[]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onStop()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzs(java.lang.String,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToPrevious()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void addDevice(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[[try]]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$2: void received(org.fourthline.cling.model.action.ActionInvocation,int)>[]--><github.daneren2005.dsub.service.DownloadService: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: boolean onMove$1cbf1fb9(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateShare(java.lang.String,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$LoadTask: github.daneren2005.dsub.util.Pair doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$CheckCompletionTask: java.lang.Object doInBackground()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void deleteBookmark(github.daneren2005.dsub.domain.MusicDirectory$Entry,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePlaylist(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlc$zza: void handleMessage(android.os.Message)>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$2: void onResult(com.google.android.gms.common.api.Result)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void play(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.BookmarkAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ArtistImageTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void onSwiped$763efb0b(android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void toggleOffline()>[]--><github.daneren2005.dsub.service.DownloadService: void setOnline(boolean)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void setActiveServer(int)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.Scrobbler$1: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void scrobble(java.lang.String,boolean,long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$31: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.internal.zzlg$zza$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zzc(com.google.android.gms.internal.zzlg,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void changeEmail(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback$1: java.lang.Void doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void removeBackground(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getDownloadInputStream(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,long,int,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.types.UDN)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.LocalDevice)>[[try]]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onRelease()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void createBookmark(github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void addDevice(org.fourthline.cling.model.meta.LocalDevice)>[[try]]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Start: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Start: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus startJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.common.images.ImageManager$ImageReceiver: void onReceiveResult(int,android.os.Bundle)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks: void setupChannel()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void removeAllRemoteDevices()>[[try]]--><org.fourthline.cling.registry.RemoteItems: void removeAll()>[]--><org.fourthline.cling.registry.RemoteItems: void removeAll(boolean)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$11$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.CachedMusicService$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updateUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.SelectConnector$Manager: boolean dispatch(java.lang.Runnable)>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.ArtistAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$15: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingRenewal: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingRenewal: org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlay()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void access$500(github.daneren2005.dsub.service.ChromeCastController)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment: void onSongPress(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzm: boolean zza(com.google.android.gms.common.internal.zzm$zza,android.content.ServiceConnection,java.lang.String)>[[try]]--><github.daneren2005.dsub.provider.DLNARouteProvider$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzm: boolean zza(com.google.android.gms.common.internal.zzm$zza,android.content.ServiceConnection,java.lang.String)>[[try]]--><com.google.android.gms.common.internal.zzm$zzb$zza: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><github.daneren2005.dsub.provider.DLNARouteProvider$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void access$200(github.daneren2005.dsub.service.DLNAController)>[]--><github.daneren2005.dsub.service.DLNAController: void failedLoad()>[]--><github.daneren2005.dsub.service.DownloadService: void post(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPlaybackSpeed()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void scrollToCurrent()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.JukeboxController: void changePosition(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void onStart()>[]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void savePlayQueue(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ViewUrlTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$ViewUrlTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmap(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$5: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineStars(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineSyncs(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: int processOfflineStars(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void access$100(github.daneren2005.dsub.service.JukeboxController)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void access$100(github.daneren2005.dsub.service.JukeboxController)>[]--><github.daneren2005.dsub.service.JukeboxController: void disableJukeboxOnError(java.lang.Throwable,int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.parser.UserParser: java.util.List parse$39b5e77(java.io.Reader)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.parser.UserParser: java.util.List parse$39b5e77(java.io.Reader)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzli$2: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.internal.zzlg: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingUnsubscribe: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingUnsubscribe: void onUnsubscribe(org.fourthline.cling.model.message.StreamResponseMessage)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.controlpoint.event.Search)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider: void onDiscoveryRequestChanged(android.support.v7.media.MediaRouteDiscoveryRequest)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void refreshPodcasts(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.PlayerQueue getPlayQueue(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$4: void onDrawerOpened$3c7ec8c3()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$6: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$6: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void addChatMessage(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: boolean onMediaButtonEvent(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void handleKeyEvent(android.view.KeyEvent)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void handleKeyEvent(android.view.KeyEvent)>[]--><github.daneren2005.dsub.service.DownloadService: void stop()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$8: void onPrepared(android.media.MediaPlayer)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.ArtistInfo getArtistInfo(java.lang.String,boolean,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$9$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$9$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createUser(github.daneren2005.dsub.domain.User,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.LyricsFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.LyricsFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Lyrics getLyrics(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onSelect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.view.UpdateView: void access$000()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.MediaRouteManager: void onRouteUnselected$64594288(android.support.v7.media.MediaRouter$RouteInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void access$300(github.daneren2005.dsub.util.DownloadFileItemHelperCallback)>[]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void downloadPodcastEpisode(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.RemoteItems: void add(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.RemoteItems: void add(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.SubsonicSyncAdapter: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$EntryInstanceUpdater: void execute()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetGain: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetGain: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus setJukeboxGain(float,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onSkipToQueueItem(long)>[]--><github.daneren2005.dsub.service.DownloadService: void play(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void updateMediaButton$1385ff()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$2: void eventReceived(org.fourthline.cling.model.gena.GENASubscription)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$2: void eventReceived(org.fourthline.cling.model.gena.GENASubscription)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzb(com.google.android.gms.cast.internal.DeviceStatus)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.BackgroundTask$Task: void access$300(github.daneren2005.dsub.util.BackgroundTask$Task)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks$2: void onStatusUpdated()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController$ConnectionCallbacks$2: void onStatusUpdated()>[]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void delete()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.transport.impl.StreamServerImpl$RequestHttpHandler: void handle(com.sun.net.httpserver.HttpExchange)>[]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.transport.spi.UpnpStream)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onUnselect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$5: boolean onPreferenceClick(android.preference.Preference)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider: void access$300(github.daneren2005.dsub.provider.DLNARouteProvider,org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$11: boolean onError(android.media.MediaPlayer,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$11: boolean onError(android.media.MediaPlayer,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory$Entry,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void removeAllLocalDevices()>[[try]]--><org.fourthline.cling.registry.LocalItems: void removeAll()>[]--><org.fourthline.cling.registry.LocalItems: void removeAll(boolean)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.transport.RouterImpl: boolean enable()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void startAddressBasedTransports(java.util.Iterator)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void clearBackground()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingSubscribe: void responseSent(org.fourthline.cling.model.message.StreamResponseMessage)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlp$zza: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Skip: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Skip: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus skipJukebox(int,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectoryImpl$7be032a8(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UpdateHelper$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void setStarred(java.util.List,java.util.List,java.util.List,boolean,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$3: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$3: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onUnselect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onItemClicked$7e075870(github.daneren2005.dsub.domain.Playlist)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient build()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlg$zzd: void zza(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzl(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$14: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void overwritePlaylist(java.lang.String,java.lang.String,int,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$15: void done(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView: void triggerUpdate()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getInternetRadioStations(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzli$4: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,int)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP: void access$100(github.daneren2005.dsub.util.compat.RemoteControlClientLP)>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$BufferTask: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$BufferTask: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SslConnection: boolean access$900(org.eclipse.jetty.io.nio.SslConnection,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl$1: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.transport.spi.UpnpStream)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void autoplay(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$13: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPlaylist(java.lang.String,java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$16: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingSubscribe$1: void eventReceived()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.PodcastChannelAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2100(github.daneren2005.dsub.service.DownloadService,github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: boolean menuItemSelected(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$300(github.daneren2005.dsub.service.DownloadService,java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.handler.ContextHandlerCollection: void doStart()>[]--><org.eclipse.jetty.server.handler.HandlerCollection: void doStart()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteShare(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController: void changeTrack(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.sync.ReceivingEvent: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.ReceivingEvent: org.fourthline.cling.model.message.gena.OutgoingEventResponseMessage executeSync()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$12: void received(org.fourthline.cling.model.action.ActionInvocation,org.fourthline.cling.support.model.PositionInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$12: void received(org.fourthline.cling.model.action.ActionInvocation,org.fourthline.cling.support.model.PositionInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingSearchResponse: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingSearchResponse: void execute()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onCustomAction$5dc9c75(java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void toggleStarred()>[]--><github.daneren2005.dsub.util.UpdateHelper: void toggleStarred(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,github.daneren2005.dsub.util.UpdateHelper$OnStarChange)>[]--><github.daneren2005.dsub.util.UpdateHelper: void toggleStarred(android.content.Context,java.util.List,github.daneren2005.dsub.util.UpdateHelper$OnStarChange)>[]--><github.daneren2005.dsub.service.DownloadService$16: void starChange$1385ff()>[]--><github.daneren2005.dsub.service.DownloadService: void onMetadataUpdate(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onCustomAction$5dc9c75(java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void toggleRating(int)>[]--><github.daneren2005.dsub.service.DownloadService: void setRating(int)>[]--><github.daneren2005.dsub.service.DownloadService: void stop()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: void add(org.fourthline.cling.model.meta.LocalDevice,org.fourthline.cling.model.DiscoveryOptions)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$1: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List createShare(java.util.List,java.lang.String,java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadFile$DownloadTask: void checkDownloads()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener: void onCallStateChanged(int,java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deleteUser(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void zzb(com.google.android.gms.cast.internal.ApplicationStatus)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$6: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$6: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getTopTrackSongs(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.EditPlayActionActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.EditPlayActionActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getGenres(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$10: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void addToPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.lang.String getOfflineSongId(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientJB$1: long onGetPlaybackPosition()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getPlaylists(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getCoverArt(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void access$800(github.daneren2005.dsub.service.ChromeCastController)>[]--><github.daneren2005.dsub.service.ChromeCastController: void failedLoad()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.SocketConnector: void startConnection(org.eclipse.jetty.client.HttpDestination)>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$8: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$4: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader$7c929b60(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.bio.SocketConnector: void accept$13462e()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void resume()>[[try]]--><org.fourthline.cling.registry.RemoteItems: void resume()>[]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.registry.RegistryImpl: void resume()>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.internal.zze$zzb: void onApplicationDisconnected(int)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void changeTrack(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPause()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setArtistRadio(java.lang.String)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void setArtist(java.lang.String)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void refill()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.EntryGridAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastEpisode(java.lang.String,java.lang.String,github.daneren2005.dsub.util.ProgressListener,android.content.Context)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.controlpoint.ControlPointImpl: void search(int)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongProgress(github.daneren2005.dsub.service.DownloadFile,int,java.lang.Integer,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice)>[]--><org.fourthline.cling.registry.LocalItems: boolean remove(org.fourthline.cling.model.meta.LocalDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$4: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$8: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$8: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport: void access$500(github.daneren2005.dsub.service.DownloadServiceLifecycleSupport)>[]--><github.daneren2005.dsub.service.DownloadService: void restore(java.util.List,java.util.List,int,int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectVideoFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectVideoFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getVideos(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Stop: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$Stop: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus stopJukebox(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$26: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <com.google.android.gms.internal.zzlg$zzb$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.internal.zzlg,com.google.android.gms.common.internal.ResolveAccountResponse)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$21$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$12: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$12: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void removeFromPlaylist(java.lang.String,java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ArtistRadioBuffer: void access$000(github.daneren2005.dsub.util.ArtistRadioBuffer)>[]--><github.daneren2005.dsub.util.ArtistRadioBuffer: void refill()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getArtist(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SimilarArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.User getUser(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.AdminFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getUsers(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.DLNARouteProvider$DLNARouteController: void onSelect()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onItemClicked$4c2ae096(java.io.Serializable)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.RESTMusicService: void setRating(github.daneren2005.dsub.domain.MusicDirectory$Entry,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$9: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$16: void done(java.lang.Object)>[]--><github.daneren2005.dsub.view.UpdateView: void triggerUpdate()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List,boolean)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetPlaylist: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$SetPlaylist: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus updateJukeboxPlaylist(java.util.List,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity$8: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void addOnSongChangedListener$494236c9(github.daneren2005.dsub.service.DownloadService$OnSongChangedListener)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$26: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void metadataChanged$3d0c2bf3()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.MulticastReceiverImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$MyPhoneStateListener$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzf: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.transport.impl.DatagramIOImpl: void run()>[[try]]--><org.fourthline.cling.transport.RouterImpl: void received(org.fourthline.cling.model.message.IncomingDatagramMessage)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DLNAController$1: void run()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search()>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void search(org.fourthline.cling.model.message.header.UpnpHeader,int)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.client.SocketConnector$1: void run()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1$1: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void play()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$18: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$4: void run()>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.ChatFragment$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.JukeboxController$3: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$13: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void pause()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void pause(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.ChromeCastController$3: void run()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$2: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void run()>[[try]]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe()>[]--><org.fourthline.cling.protocol.RetrieveRemoteDescriptors: void describe(java.lang.String)>[[try]]--><org.fourthline.cling.registry.RegistryImpl: boolean notifyDiscoveryStart(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 < 26
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.util.Notifications$1: void run()>[]--><github.daneren2005.dsub.util.Notifications: void showDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler,github.daneren2005.dsub.service.DownloadFile,int)>[[$i1 < 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><com.google.android.gms.common.images.ImageManager$zzc: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView2$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$4: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.service.DownloadService$20: void run()>[]--><github.daneren2005.dsub.service.DownloadService: void access$900(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint$1: void run()>[]--><org.eclipse.jetty.io.nio.SelectChannelEndPoint: void handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: org.eclipse.jetty.io.Connection handle()>[[try]]--><org.eclipse.jetty.io.nio.SslConnection: boolean process(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$25: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.DownloadFragment$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><org.fourthline.cling.support.shared.MainController$1: void run()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void shutdown()>[[try]]--><org.fourthline.cling.UpnpServiceImpl: void shutdown(boolean)>[]--><github.daneren2005.dsub.view.UpdateView$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.DownloadFileAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void deletePodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void setShufflePlayEnabled(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void bindPreferences()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: void checkDownloads()>[[try]]--><github.daneren2005.dsub.util.Notifications: void hideDownloadingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService$12: void onCompletion(android.media.MediaPlayer)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$3: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.ChatFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getChatMessages(java.lang.Long,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$3: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$GetStatus: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.JukeboxController$GetStatus: github.daneren2005.dsub.domain.RemoteStatus execute()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus getJukeboxStatus(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.RemoteStatus executeJukeboxCommand(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.MediaRouteManager: void onRouteSelected$64594288(android.support.v7.media.MediaRouter$RouteInfo)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void create(boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void create(boolean,int)>[]--><org.fourthline.cling.controlpoint.ControlPointImpl: void execute(org.fourthline.cling.controlpoint.SubscriptionCallback)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.provider.JukeboxRouteProvider$JukeboxRouteController: void onRelease()>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteEnabled(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object)>[]--><github.daneren2005.dsub.service.DownloadService: void setRemoteState(github.daneren2005.dsub.domain.RemoteControlState,java.lang.Object,java.lang.String)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void start()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$AvatarTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.ImageLoader$AvatarTask: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getAvatar(java.lang.String,int,android.content.Context,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: android.graphics.Bitmap getBitmapFromUrl(android.content.Context,java.lang.String,java.util.List,java.util.List,int,java.io.File,boolean,github.daneren2005.dsub.util.ProgressListener,github.daneren2005.dsub.util.SilentBackgroundTask)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectShareFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getShares(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$25: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadServiceLifecycleSupport$1: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$9: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getBookmarks(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.Device)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectGenreFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicActivity$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void clearIncomplete()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void reset()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment: void playNowInTask(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.DownloadService: void previous()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void access$000(github.daneren2005.dsub.fragments.PreferenceCompatFragment)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void bindPreferences()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: android.widget.ListView getListView()>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void ensureList()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientJB$2: void onPlaybackPositionUpdate(long)>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$3200(github.daneren2005.dsub.service.DownloadService,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void doPlay(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.mock.MockUpnpService$1: void <init>(org.fourthline.cling.mock.MockUpnpService,org.fourthline.cling.UpnpService,org.fourthline.cling.mock.MockUpnpServiceConfiguration)>[]--><org.fourthline.cling.registry.RegistryImpl: void <init>(org.fourthline.cling.UpnpService)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void shutdown()>[]--><org.fourthline.cling.controlpoint.SubscriptionCallback: void end()>[[try]]--><org.fourthline.cling.controlpoint.SubscriptionCallback: void endRemoteSubscription(org.fourthline.cling.model.gena.RemoteGENASubscription)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.client.HttpClient: void doStart()>[]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment: void onAlbumSelected(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean removeDevice(org.fourthline.cling.model.meta.RemoteDevice)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice)>[]--><org.fourthline.cling.registry.RemoteItems: boolean remove(org.fourthline.cling.model.meta.RemoteDevice,boolean)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.registry.RegistryImpl: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[[try]]--><org.fourthline.cling.registry.RemoteItems: boolean update(org.fourthline.cling.model.meta.RemoteDeviceIdentity)>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
$i1 != $i2
try
Good road with try: <org.fourthline.cling.protocol.async.ReceivingNotification: void execute()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.protocol.sync.SendingSubscribe: org.fourthline.cling.model.message.StreamResponseMessage executeSync()>[]--><org.fourthline.cling.protocol.sync.SendingSubscribe: org.fourthline.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync()>[[try]]--><org.fourthline.cling.protocol.sync.SendingSubscribe: void onSubscriptionFailure()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment: void onStartNewFragment(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.util.List getMusicFolders(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.shehabic.droppy.DroppyMenuPopup$3: void onClick(android.view.View)>[]--><com.shehabic.droppy.DroppyMenuPopup: void callOnClick(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$33: void call(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1400(github.daneren2005.dsub.fragments.NowPlayingFragment,float)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlg$zzg: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzj(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$3: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.eclipse.jetty.server.bio.SocketConnector: void doStart()>[]--><org.eclipse.jetty.server.AbstractConnector: void doStart()>[[try]]--><org.eclipse.jetty.util.thread.ExecutorThreadPool: boolean dispatch(java.lang.Runnable)>[[try]]--><org.fourthline.cling.mock.MockUpnpServiceConfiguration$3: void execute(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$1: void run()>[[$i1 != $i2]]--><github.daneren2005.dsub.service.DownloadService: github.daneren2005.dsub.audiofx.EqualizerController getEqualizerController()>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2000(github.daneren2005.dsub.service.DownloadService,boolean)>[]--><github.daneren2005.dsub.service.DownloadService: void onSongProgress(boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$5: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void createPodcastChannel(java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.service.DownloadService: void play(int)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean)>[[try]]--><github.daneren2005.dsub.service.DownloadService: void play(int,boolean,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void hidePlayingNotification(android.content.Context,github.daneren2005.dsub.service.DownloadService,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.service.DownloadService: void start()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$1: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$1: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,boolean,github.daneren2005.dsub.service.MusicService,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$3100(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void playNext()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void onSongCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerStateCompleted()>[]--><github.daneren2005.dsub.service.DownloadService: void onStateUpdate()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getAlbum(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$2: void getSongsRecursively(github.daneren2005.dsub.domain.MusicDirectory,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getMusicDirectory(java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$1: void onPanelCollapsed$3c7ec8c3()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void startRescan(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectYearFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.MusicDirectory getPlaylist(boolean,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.lang.String,java.lang.Object,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$3: java.lang.String doInBackground()>[]--><github.daneren2005.dsub.util.LoadingTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: void ping(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$10: java.lang.Boolean doInBackground()>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: boolean isLicenseValid(android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.ChromeCastController: void updatePlaylist()>[]--><github.daneren2005.dsub.service.ChromeCastController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.DownloadFragment: void access$000(github.daneren2005.dsub.fragments.DownloadFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.UserUtil$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void changePassword(java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.adapter.SearchAdapter: void onBindViewHolder(github.daneren2005.dsub.view.UpdateView$UpdateViewHolder,java.lang.Object,int)>[]--><github.daneren2005.dsub.view.UpdateView2: void setObject(java.lang.Object,java.lang.Object)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.RESTMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPlaylistFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.CachedMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: void updatePlaylist(java.lang.String,java.lang.String,java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[]--><github.daneren2005.dsub.util.TabBackgroundTask: void updateProgress(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><github.daneren2005.dsub.service.DownloadService$23: void run()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientJB: void setPlaybackState(int,int,int)>[]--><github.daneren2005.dsub.service.DownloadService: int getPlayerPosition()>[]--><github.daneren2005.dsub.service.DownloadService: void handleError(java.lang.Exception)>[]--><github.daneren2005.dsub.service.DownloadService: void setPlayerState(github.daneren2005.dsub.domain.PlayerState)>[[try]]--><android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
One road protect good!
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
4call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.EditPlayActionActivity dummyMainMethod_github_daneren2005_dsub_activity_EditPlayActionActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.EditPlayActionActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SettingsFragment: void onCreate(android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SettingsFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <github.daneren2005.dsub.fragments.SettingsFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzlp: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#2.the call statck between class <com.google.android.gms.internal.zzlp: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#3.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:23
crashApisInMain:11
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.A2dpIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_A2dpIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.util.Util$5: void onAudioFocusChange(int)>[[-$i0 < 26]]--><android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.util.Util$5: void onAudioFocusChange(int)>[[-$i0 < 26]]--><android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.widget.AbsListView: void setScrollBarStyle(int)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)>[]--><android.widget.AbsListView: void setScrollBarStyle(int)>
#1.the call statck between class <github.daneren2005.dsub.fragments.PreferenceCompatFragment: void onActivityCreated(android.os.Bundle)> to <android.widget.AbsListView: void setScrollBarStyle(int)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.view.Window: void setStatusBarColor(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <github.daneren2005.dsub.adapter.SectionAdapter$4: boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)> is checking!!!
The life time of api is [21,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.app.AppOpsManager: void checkPackage(int,java.lang.String)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.gms.common.internal.zzi: java.lang.Object createFromParcel(android.os.Parcel)>[]--><com.google.android.gms.common.internal.GetServiceRequest: void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account)>[]--><com.google.android.gms.common.internal.zza: android.accounts.Account zzb(com.google.android.gms.common.internal.zzp)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzb(android.content.Context,int,java.lang.String)>[[try]]--><android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23]][[try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
-$i0 < 23
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isRoaming()> is checking!!!
The life time of api is [3,30]
437call roads:
1 Mainhead roads:
436 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.util.BackgroundTask$Task: void onError(java.lang.Throwable)>[]--><github.daneren2005.dsub.util.BackgroundTask: void error(java.lang.Throwable)>[]--><github.daneren2005.dsub.util.BackgroundTask: java.lang.String getErrorMessage(java.lang.Throwable)>[]--><github.daneren2005.dsub.util.Util: boolean isNetworkConnected(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isNetworkConnected(android.content.Context,boolean)>[]--><android.net.NetworkInfo: boolean isRoaming()>
#12.the call statck between class <github.daneren2005.dsub.util.BackgroundTask$Task: void onError(java.lang.Throwable)> to <android.net.NetworkInfo: boolean isRoaming()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes build()> is checking!!!
The life time of api is [21,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: void <init>()> is checking!!!
The life time of api is [21,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.RemoteMediaPlayer$12: void zza(com.google.android.gms.common.api.Api$zzb)>[[try]]--><com.google.android.gms.cast.internal.zzm: long zza(com.google.android.gms.cast.internal.zzo,com.google.android.gms.cast.MediaInfo,boolean,long,long[],org.json.JSONObject)>[[try]]--><com.google.android.gms.cast.MediaInfo: org.json.JSONObject toJson()>[[try]]--><com.google.android.gms.cast.MediaMetadata: org.json.JSONObject toJson()>[]--><com.google.android.gms.cast.MediaMetadata: void zza(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.server.response.SafeParcelResponse: void zzb(java.lang.StringBuilder,com.google.android.gms.common.server.response.FastJsonResponse$Field,android.os.Parcel,int)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.server.response.SafeParcelResponse: void zzb(java.lang.StringBuilder,com.google.android.gms.common.server.response.FastJsonResponse$Field,android.os.Parcel,int)>[]--><com.google.android.gms.common.server.response.SafeParcelResponse: void zza(java.lang.StringBuilder,java.util.Map,android.os.Parcel)>[]--><com.google.android.gms.common.server.response.SafeParcelResponse: java.util.HashMap zzi(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#2.the call statck between class <com.google.android.gms.common.server.response.SafeParcelResponse: void zzb(java.lang.StringBuilder,com.google.android.gms.common.server.response.FastJsonResponse$Field,android.os.Parcel,int)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.server.response.SafeParcelResponse: java.lang.String toString()>[]--><com.google.android.gms.common.server.response.SafeParcelResponse: void zza(java.lang.StringBuilder,java.util.Map,android.os.Parcel)>[]--><com.google.android.gms.common.server.response.SafeParcelResponse: java.util.HashMap zzi(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#3.the call statck between class <com.google.android.gms.common.server.response.SafeParcelResponse: java.lang.String toString()> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.playlog.internal.LogEvent: java.lang.String toString()>[]--><android.os.BaseBundle: java.util.Set keySet()>
#4.the call statck between class <com.google.android.gms.playlog.internal.LogEvent: java.lang.String toString()> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)>[]--><com.google.android.gms.cast.MediaMetadata: boolean zzb(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#5.the call statck between class <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.cast.MediaMetadata: int hashCode()>[]--><android.os.BaseBundle: java.util.Set keySet()>
#6.the call statck between class <com.google.android.gms.cast.MediaMetadata: int hashCode()> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.net.wifi.WifiInfo: java.lang.String getSSID()> is checking!!!
The life time of api is [1,30]
463call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onResume()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void populateTabs()>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean canBookmark(android.content.Context)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiInfo: java.lang.String getSSID()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.parser.SearchResult2Parser: github.daneren2005.dsub.domain.SearchResult parse$1e6807d3(java.io.Reader)>[]--><github.daneren2005.dsub.service.parser.AbstractParser: void validate()>[]--><github.daneren2005.dsub.domain.ServerInfo: void saveServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiInfo: java.lang.String getSSID()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.wifi.WifiInfo: java.lang.String getSSID()>has compatibility isssues！
-----------------------------------------
462 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onCreateContextMenuSupport(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.util.MenuUtil: void hideMenuItems(android.content.Context,android.view.Menu,github.daneren2005.dsub.view.UpdateView)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiInfo: java.lang.String getSSID()>
#1.the call statck between class <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.net.wifi.WifiInfo: java.lang.String getSSID()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[[try]]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><android.net.wifi.WifiInfo: java.lang.String getSSID()>
One road protect good!
crashApis:27
crashApisInMain:12
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.net.NetworkInfo: java.lang.String getTypeName()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><android.net.NetworkInfo: java.lang.String getTypeName()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.net.NetworkInfo: java.lang.String getTypeName()>
#1.the call statck between class <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> to <android.net.NetworkInfo: java.lang.String getTypeName()>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <java.awt.event.WindowAdapter: void <init>()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.Main$2: void <init>(org.fourthline.cling.support.shared.Main)>[]--><java.awt.event.WindowAdapter: void <init>()>
#1.the call statck between class <org.fourthline.cling.support.shared.Main$2: void <init>(org.fourthline.cling.support.shared.Main)> to <java.awt.event.WindowAdapter: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()> is checking!!!
The life time of api is [21,31]
405call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
$i0 < 21
$i0 < 18
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>has compatibility isssues！
-----------------------------------------
404 Packageshead roads:
crashApis:30
crashApisInMain:13
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)> is checking!!!
The life time of api is [23,31]
399call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.PlayActionReceiver dummyMainMethod_github_daneren2005_dsub_receiver_PlayActionReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.PlayActionReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.MediaButtonIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_MediaButtonIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.MediaButtonIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.HeadphonePlugReceiver dummyMainMethod_github_daneren2005_dsub_receiver_HeadphonePlugReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.HeadphonePlugReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
398 Packageshead roads:
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: boolean onMove$1cbf1fb9(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void onSwiped$763efb0b(android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void setActiveServer(int)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectShareFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.AdminFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$11$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment: void onSongPress(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPlaybackSpeed()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void scrollToCurrent()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.EqualizerFragment$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity$4: void onDrawerOpened$3c7ec8c3()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void access$300(github.daneren2005.dsub.util.DownloadFileItemHelperCallback)>[]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void updateMediaButton$1385ff()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void delete()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SettingsFragment$5: boolean onPreferenceClick(android.preference.Preference)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onItemClicked$7e075870(github.daneren2005.dsub.domain.Playlist)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void autoplay(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$16: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: boolean menuItemSelected(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$8: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongProgress(github.daneren2005.dsub.service.DownloadFile,int,java.lang.Integer,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$26: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$21$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SimilarArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onItemClicked$4c2ae096(java.io.Serializable)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$25: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectGenreFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment: void playNowInTask(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onAlbumSelected(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SettingsFragment: void onStartNewFragment(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <com.shehabic.droppy.DroppyMenuPopup$3: void onClick(android.view.View)>[]--><com.shehabic.droppy.DroppyMenuPopup: void callOnClick(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$33: void call(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1400(github.daneren2005.dsub.fragments.NowPlayingFragment,float)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$1: void onPanelCollapsed$3c7ec8c3()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectYearFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment: void access$000(github.daneren2005.dsub.fragments.DownloadFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
509call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onResume()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void populateTabs()>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean canBookmark(android.content.Context)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.parser.SearchResult2Parser: github.daneren2005.dsub.domain.SearchResult parse$1e6807d3(java.io.Reader)>[]--><github.daneren2005.dsub.service.parser.AbstractParser: void validate()>[]--><github.daneren2005.dsub.domain.ServerInfo: void saveServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
508 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onCreateContextMenuSupport(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.util.MenuUtil: void hideMenuItems(android.content.Context,android.view.Menu,github.daneren2005.dsub.view.UpdateView)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
#1.the call statck between class <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[[try]]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
One road protect good!
crashApis:31
crashApisInMain:14
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.net.wifi.WifiInfo: int getIpAddress()> is checking!!!
The life time of api is [1,30]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void access$300(github.daneren2005.dsub.service.DLNAController,github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void changeTrack(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.service.DLNAController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void updatePlaylist()>[]--><github.daneren2005.dsub.service.DLNAController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void access$100(github.daneren2005.dsub.service.DLNAController,github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController: void changeNextTrack(github.daneren2005.dsub.service.DownloadFile)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DLNAController$9: void success(org.fourthline.cling.model.action.ActionInvocation)>[]--><github.daneren2005.dsub.service.DLNAController: void start()>[]--><github.daneren2005.dsub.service.DLNAController: void startSong(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[]--><github.daneren2005.dsub.service.DLNAController: void startSongRemote(github.daneren2005.dsub.service.DownloadFile,boolean,int)>[[try]]--><github.daneren2005.dsub.service.DLNAController: github.daneren2005.dsub.util.Pair getSongInfo(github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.serverproxy.ServerProxy: java.lang.String getPublicAddress(java.lang.String)>[]--><android.net.wifi.WifiInfo: int getIpAddress()>
One road protect good!
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
-$i1 < 26
Good road: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.StarredSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
502call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onResume()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void populateTabs()>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean canBookmark(android.content.Context)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.parser.SearchResult2Parser: github.daneren2005.dsub.domain.SearchResult parse$1e6807d3(java.io.Reader)>[]--><github.daneren2005.dsub.service.parser.AbstractParser: void validate()>[]--><github.daneren2005.dsub.domain.ServerInfo: void saveServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
501 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void onCreateContextMenuSupport(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.util.MenuUtil: void hideMenuItems(android.content.Context,android.view.Menu,github.daneren2005.dsub.view.UpdateView)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <github.daneren2005.dsub.fragments.SearchFragment: void onCreateContextMenu(android.view.Menu,android.view.MenuInflater,github.daneren2005.dsub.view.UpdateView,java.lang.Object)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[[try]]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.domain.ServerInfo: boolean checkServerVersion(android.content.Context,java.lang.String,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: github.daneren2005.dsub.domain.ServerInfo getServerInfo(android.content.Context,int)>[]--><github.daneren2005.dsub.domain.ServerInfo: java.lang.String getCacheName(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getRestUrl(android.content.Context,java.lang.String,android.content.SharedPreferences,int,boolean)>[]--><github.daneren2005.dsub.util.Util: java.lang.String getSSID(android.content.Context)>[]--><github.daneren2005.dsub.util.Util: boolean isWifiConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
crashApis:32
crashApisInMain:15
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23]][[try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
-$i0 < 23
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.hardware.display.VirtualDisplay: android.view.Display getDisplay()> is checking!!!
The life time of api is [19,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$1: void zzbg(int)>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
#1.the call statck between class <com.google.android.gms.internal.zzkw$1: void zzbg(int)> to <android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$zzb$zzb: void onError(int)>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
#2.the call statck between class <com.google.android.gms.internal.zzkw$zzb$zzb: void onError(int)> to <android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$zzb$zzb: void onDisconnected()>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
#3.the call statck between class <com.google.android.gms.internal.zzkw$zzb$zzb: void onDisconnected()> to <android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void access$700(github.daneren2005.dsub.fragments.SelectDirectoryFragment)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void finishLoading()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void access$700(github.daneren2005.dsub.fragments.SelectDirectoryFragment)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zzlp: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#2.the call statck between class <com.google.android.gms.internal.zzlp: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void finishLoading()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#3.the call statck between class <github.daneren2005.dsub.fragments.SelectDirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#4.the call statck between class <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <github.daneren2005.dsub.fragments.SelectArtistFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#5.the call statck between class <github.daneren2005.dsub.fragments.SelectArtistFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
-$i1 < 26
Good road: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.StarredSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)> is checking!!!
The life time of api is [21,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.content.Context: java.io.File[] getExternalMediaDirs()> is checking!!!
The life time of api is [21,31]
411call roads:
1 Mainhead roads:
410 Packageshead roads:
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[-$i0 < 21], [-$i0 >= 30], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[-$i0 < 21]][[-$i0 >= 30]][[-$i0 < 19]]
-$i0 < 21
-$i0 >= 30
-$i0 < 19
Good road: <github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[-$i0 < 21], [-$i0 >= 30], [-$i0 < 19]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SettingsFragment$1$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.util.FileUtil: boolean deleteMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.view.ArtistView: void setObjectImpl(java.lang.Object)>[]--><github.daneren2005.dsub.view.ArtistView: void setObjectImpl(github.daneren2005.dsub.domain.Artist)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getArtistDirectory(android.content.Context,github.daneren2005.dsub.domain.Artist)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void done(java.lang.Boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.util.FileUtil: java.io.File getArtistDirectory(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.OfflineMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.MainFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.util.CacheCleaner: java.util.Set access$500(github.daneren2005.dsub.util.CacheCleaner)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
-$i0 < 21
-$i0 >= 30
Good road: <github.daneren2005.dsub.view.PodcastChannelView: void setObjectImpl(java.lang.Object)>[]--><github.daneren2005.dsub.view.PodcastChannelView: void setObjectImpl(github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21]][[-$i0 >= 30]]
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[-$i0 < 21], [-$i0 >= 30]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
containsStatic:false
containsTry:true
411call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23]][[try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
-$i0 < 23
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <java.awt.Dimension: double getWidth()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window,java.awt.Window)>[]--><java.awt.Dimension: double getWidth()>
#1.the call statck between class <org.fourthline.cling.support.shared.TextExpandDialog: void <init>(java.awt.Frame,java.lang.String)> to <java.awt.Dimension: double getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDouble(java.lang.String,double)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putDouble(java.lang.String,double)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.MediaStatus$zza: boolean zza(com.google.android.gms.cast.MediaStatus$zza,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaQueueItem: boolean zzg(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putDouble(java.lang.String,double)>
One road protect good!
try
Good road with try: <com.google.android.gms.cast.RemoteMediaPlayer: void onMessageReceived$4b4da5a3(java.lang.String)>[]--><com.google.android.gms.cast.internal.zzm: void zzbK(java.lang.String)>[[try]]--><com.google.android.gms.cast.internal.zzm: void zza(long,org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaStatus: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaStatus: int zza(org.json.JSONObject,int)>[]--><com.google.android.gms.cast.MediaInfo: void <init>(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzf(org.json.JSONObject)>[]--><com.google.android.gms.cast.MediaMetadata: void zzb(org.json.JSONObject,java.lang.String[])>[[try]]--><android.os.BaseBundle: void putDouble(java.lang.String,double)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()> is checking!!!
The life time of api is [1,8]
401call roads:
1 Mainhead roads:
400 Packageshead roads:
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><org.fourthline.cling.support.shared.Main$5: void run()>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
Error road: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><org.fourthline.cling.support.shared.Main$5: void run()>[]--><org.seamless.swing.Application: java.awt.Window center(java.awt.Window)>[]--><java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
#129.the call statck between class <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)> to <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:true
130call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23]][[try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]
-$i0 < 23
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onCreate(android.os.Bundle)>[[-$i0 < 23], [try]]--><github.daneren2005.dsub.util.KeyStoreUtil: void loadKeyStore()>[[try]]--><android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.hardware.display.VirtualDisplay: void release()> is checking!!!
The life time of api is [19,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$1: void zzbg(int)>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: void release()>
#1.the call statck between class <com.google.android.gms.internal.zzkw$1: void zzbg(int)> to <android.hardware.display.VirtualDisplay: void release()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$zzb$zzb: void onError(int)>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: void release()>
#2.the call statck between class <com.google.android.gms.internal.zzkw$zzb$zzb: void onError(int)> to <android.hardware.display.VirtualDisplay: void release()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 
Error road: <com.google.android.gms.internal.zzkw$zzb$zzb: void onDisconnected()>[]--><com.google.android.gms.internal.zzkw: void zza(com.google.android.gms.internal.zzkw)>[]--><android.hardware.display.VirtualDisplay: void release()>
#3.the call statck between class <com.google.android.gms.internal.zzkw$zzb$zzb: void onDisconnected()> to <android.hardware.display.VirtualDisplay: void release()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
401call roads:
1 Mainhead roads:
400 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.service.DownloadService: void access$2600(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void updateRemotePlaylist()>[]--><github.daneren2005.dsub.util.compat.RemoteControlClientLP: void updatePlaylist(java.util.List)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
#80.the call statck between class <github.daneren2005.dsub.service.DownloadService: void access$2600(github.daneren2005.dsub.service.DownloadService)> to <android.os.BaseBundle: void putLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:true
81call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.EditPlayActionActivity dummyMainMethod_github_daneren2005_dsub_activity_EditPlayActionActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:39
crashApisInMain:16
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.os.BaseBundle: int size()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)>[]--><com.google.android.gms.cast.MediaMetadata: boolean zzb(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: int size()>
#1.the call statck between class <com.google.android.gms.cast.MediaMetadata: boolean equals(java.lang.Object)> to <android.os.BaseBundle: int size()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.PlayActionReceiver dummyMainMethod_github_daneren2005_dsub_receiver_PlayActionReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.PlayActionReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.MediaButtonIntentReceiver dummyMainMethod_github_daneren2005_dsub_receiver_MediaButtonIntentReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.MediaButtonIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.receiver.HeadphonePlugReceiver dummyMainMethod_github_daneren2005_dsub_receiver_HeadphonePlugReceiver(android.content.Intent)>[]--><github.daneren2005.dsub.receiver.HeadphonePlugReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
398 Packageshead roads:
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$9$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void createNewPlaylist(java.util.List,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity: boolean onKeyDown(int,android.view.KeyEvent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: boolean onMove$1cbf1fb9(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.MainFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.MainFragment: void showAlbumList(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$32: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void onSwiped$763efb0b(android.support.v7.widget.RecyclerView$ViewHolder)>[[try]]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity$2: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void setActiveServer(int)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectBookmarkFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <org.eclipse.jetty.io.nio.SelectorManager$SelectSet: void doSelect()>[[try]]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1100(github.daneren2005.dsub.fragments.NowPlayingFragment,github.daneren2005.dsub.service.DownloadFile,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectShareFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.AdminFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$11$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment: void onSongPress(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPlaybackSpeed()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setupSubtitle(int)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void scrollToCurrent()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.EqualizerFragment$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongsChanged(java.util.List,github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onSongChanged(github.daneren2005.dsub.service.DownloadFile,int,boolean)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void updateMediaButtons(boolean)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onSongSelected$11a11a8d(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$5$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$10: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicActivity$4: void onDrawerOpened$3c7ec8c3()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.BackgroundTask$Task: void onDone(java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void access$300(github.daneren2005.dsub.util.DownloadFileItemHelperCallback)>[]--><github.daneren2005.dsub.util.DownloadFileItemHelperCallback: void updateDownloadService()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.UserUtil$3: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onBackPressed()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: boolean onBackPressedSupport()>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void removeCurrent()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void updateMediaButton$1385ff()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$7$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void delete()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SettingsFragment$5: boolean onPreferenceClick(android.preference.Preference)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment$2$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onItemClicked$7e075870(github.daneren2005.dsub.domain.Playlist)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void access$100(github.daneren2005.dsub.fragments.SearchFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void autoplay(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SearchFragment: void onArtistSelected(github.daneren2005.dsub.domain.Artist,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$16: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$13$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: boolean menuItemSelected(int,github.daneren2005.dsub.service.DownloadFile)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$12$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$8: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$3$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$17: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: boolean onContextItemSelected$7fe8c7e5(android.view.MenuItem,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$24$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onSongProgress(github.daneren2005.dsub.service.DownloadFile,int,java.lang.Integer,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$6$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$26: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$21$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SimilarArtistFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SimilarArtistFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onItemClicked$4c2ae096(java.io.Serializable)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.util.UserUtil$2: void onClick(android.content.DialogInterface,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$24: void run()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$900(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$22$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment$25: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectGenreFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SubsonicFragment: void playNowInTask(java.util.List,github.daneren2005.dsub.domain.MusicDirectory$Entry,int,java.lang.String,java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$4$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SearchFragment: void onAlbumSelected(github.daneren2005.dsub.domain.MusicDirectory$Entry,boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SettingsFragment: void onStartNewFragment(java.lang.String)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment$23: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <com.shehabic.droppy.DroppyMenuPopup$3: void onClick(android.view.View)>[]--><com.shehabic.droppy.DroppyMenuPopup: void callOnClick(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment$33: void call(android.view.View,int)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void access$1400(github.daneren2005.dsub.fragments.NowPlayingFragment,float)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void updateTitle()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectInternetRadioStationFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.activity.SubsonicFragmentActivity$1: void onPanelCollapsed$3c7ec8c3()>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectYearFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void replaceFragment$5308a3da(github.daneren2005.dsub.fragments.SubsonicFragment)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void replaceFragment(github.daneren2005.dsub.fragments.SubsonicFragment,int,boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void setPrimaryFragment(boolean)>[]--><github.daneren2005.dsub.fragments.NowPlayingFragment: void onPauseHandlers()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.DownloadFragment: void access$000(github.daneren2005.dsub.fragments.DownloadFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$11: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.activity.SubsonicActivity: github.daneren2005.dsub.service.DownloadService getDownloadService()>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context)>[]--><github.daneren2005.dsub.service.DownloadService: void startService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.media.AudioFocusRequest.Builder: android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.view.RecyclingImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <github.daneren2005.dsub.view.RecyclingImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.MulticastLock: boolean isHeld()> is checking!!!
The life time of api is [4,30]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.fourthline.cling.android.AndroidUpnpServiceImpl dummyMainMethod_org_fourthline_cling_android_AndroidUpnpServiceImpl(android.content.Intent)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: void onCreate()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void <init>(org.fourthline.cling.android.AndroidUpnpServiceImpl,org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
One road protect good!
3 Packageshead roads:
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SettingsActivity dummyMainMethod_github_daneren2005_dsub_activity_SettingsActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.EditPlayActionActivity dummyMainMethod_github_daneren2005_dsub_activity_EditPlayActionActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.SubsonicFragmentActivity dummyMainMethod_github_daneren2005_dsub_activity_SubsonicFragmentActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.SubsonicFragmentActivity: void onRestoreInstanceState(android.os.Bundle)>[]--><github.daneren2005.dsub.activity.SubsonicActivity: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:42
crashApisInMain:17
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
try
Good road with try: <com.google.android.gms.internal.zzli$4: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,int)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzlg$zzd: void zza(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzl(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzli$2: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.internal.zzlg: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.playlog.internal.LogEvent: java.lang.String toString()>[]--><android.os.BaseBundle: boolean isEmpty()>
#4.the call statck between class <com.google.android.gms.playlog.internal.LogEvent: java.lang.String toString()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzlg$zzb$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zza(com.google.android.gms.internal.zzlg,com.google.android.gms.common.internal.ResolveAccountResponse)>[]--><com.google.android.gms.internal.zzlg: void zznQ()>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
#5.the call statck between class <com.google.android.gms.internal.zzlg$zzb$1: void zznO()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzlg$zza$1: void zznO()>[]--><com.google.android.gms.internal.zzlg: void zzc(com.google.android.gms.internal.zzlg,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
#6.the call statck between class <com.google.android.gms.internal.zzlg$zza$1: void zznO()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zzlg$zzg: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzlg: void zzj(com.google.android.gms.internal.zzlg)>[]--><com.google.android.gms.internal.zzlg: void zznT()>[]--><com.google.android.gms.internal.zzlg: void zznU()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
crashApis:43
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.media.AudioFocusRequest.Builder: android.media.AudioFocusRequest build()> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)> is checking!!!
The life time of api is [19,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <github.daneren2005.dsub.audiofx.EqualizerController$EqualizerSettings: void apply(android.media.audiofx.Equalizer,android.media.audiofx.BassBoost,github.daneren2005.dsub.audiofx.LoudnessEnhancerController)>[]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void setGain(int)>[]--><android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
#1.the call statck between class <github.daneren2005.dsub.audiofx.EqualizerController$EqualizerSettings: void apply(android.media.audiofx.Equalizer,android.media.audiofx.BassBoost,github.daneren2005.dsub.audiofx.LoudnessEnhancerController)> to <android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment$5: void onProgressChanged(android.widget.SeekBar,int,boolean)>[[try]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void setGain(int)>[]--><android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: void access$000(github.daneren2005.dsub.fragments.EqualizerFragment,boolean)>[[try]]--><github.daneren2005.dsub.fragments.EqualizerFragment: void updateBars(boolean)>[[try]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void setGain(int)>[]--><android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: boolean onContextItemSelected(android.view.MenuItem)>[]--><github.daneren2005.dsub.fragments.EqualizerFragment: void updateBars(boolean)>[[try]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: void setGain(int)>[]--><android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
One road protect good!
crashApis:44
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.media.MediaPlayer: android.media.PlaybackParams getPlaybackParams()> is checking!!!
The life time of api is [23,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23]][[try]]
try
Good road with try: <github.daneren2005.dsub.service.DownloadService: void access$2500(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParamsMain()>[[try]]--><github.daneren2005.dsub.service.DownloadService: void applyPlaybackParams(android.media.MediaPlayer)>[[-$i0 < 23], [try]]--><android.media.MediaPlayer: android.media.PlaybackParams getPlaybackParams()>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager.WifiLock: void acquire()> is checking!!!
The life time of api is [1,30]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWifiLock(boolean)>[]--><android.net.wifi.WifiManager.WifiLock: void acquire()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.DownloadFile$DownloadTask: java.lang.Void doInBackground()>[[try]]--><android.net.wifi.WifiManager.WifiLock: void acquire()>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
4call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.activity.EditPlayActionActivity dummyMainMethod_github_daneren2005_dsub_activity_EditPlayActionActivity(android.content.Intent)>[]--><github.daneren2005.dsub.activity.EditPlayActionActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onFinishRefresh()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
#1.the call statck between class <github.daneren2005.dsub.fragments.SelectPlaylistFragment: void onFinishRefresh()> to <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onFinishRefresh()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
#2.the call statck between class <github.daneren2005.dsub.fragments.SelectPodcastsFragment: void onFinishRefresh()> to <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
#3.the call statck between class <github.daneren2005.dsub.util.compat.RemoteControlClientLP$EventCallback: void onPlayFromMediaId$5dc9c75(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:45
crashApisInMain:18
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
400call roads:
1 Mainhead roads:
399 Packageshead roads:
-$i1 < 26
Good road: <github.daneren2005.dsub.service.sync.PlaylistSyncAdapter: void onExecuteSync(android.content.Context,int)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.PodcastSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.MostRecentSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.service.sync.StarredSyncAdapter: void onExecuteSync(android.content.Context,int)>[[try]]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String)>[]--><github.daneren2005.dsub.util.Notifications: void showSyncNotification(android.content.Context,int,java.lang.String,java.lang.String)>[[-$i1 < 26]]--><github.daneren2005.dsub.util.Notifications: android.app.NotificationChannel getSyncNotificationChannel(android.content.Context)>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:false
containsTry:true
400call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)> is checking!!!
The life time of api is [18,31]
405call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.provider.DSubSearchProvider dummyMainMethod_github_daneren2005_dsub_provider_DSubSearchProvider(android.content.Intent)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>[]--><github.daneren2005.dsub.provider.DSubSearchProvider: github.daneren2005.dsub.domain.SearchResult search(java.lang.String)>[[try]]--><github.daneren2005.dsub.service.CachedMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: github.daneren2005.dsub.domain.SearchResult searchNew(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReader(android.content.Context,github.daneren2005.dsub.util.ProgressListener,java.lang.String,java.util.List,java.util.List,int,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.Reader getReaderForURL(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.io.InputStream getInputStream(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,boolean)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnection(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int,github.daneren2005.dsub.util.ProgressListener,int,int)>[[try]]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.List,java.util.List,java.util.Map,int)>[]--><github.daneren2005.dsub.service.RESTMusicService: java.net.HttpURLConnection getConnectionDirect(android.content.Context,java.lang.String,java.util.Map,int)>[[try]]--><github.daneren2005.dsub.util.compat.GoogleCompat: void installProvider(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zzab(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zzaa(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21]][[$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]
$i0 < 21
$i0 < 18
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: github.daneren2005.dsub.service.DownloadService dummyMainMethod_github_daneren2005_dsub_service_DownloadService(android.content.Intent)>[]--><github.daneren2005.dsub.service.DownloadService: void onCreate()>[[$i0 < 21], [$i0 < 18]]--><github.daneren2005.dsub.util.MediaRouteManager: void <init>(github.daneren2005.dsub.service.DownloadService)>[]--><github.daneren2005.dsub.util.compat.GoogleCompat: boolean playServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzd(android.content.Context,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzj(android.content.Context,java.lang.String)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>has compatibility isssues！
-----------------------------------------
404 Packageshead roads:
crashApis:46
crashApisInMain:19
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.media.AudioFocusRequest.Builder: void <init>(int)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.media.AudioFocusRequest.Builder: android.media.AudioFocusRequest.Builder setWillPauseWhenDucked(boolean)> is checking!!!
The life time of api is [26,31]
399call roads:
1 Mainhead roads:
398 Packageshead roads:
containsStatic:false
containsTry:true
399call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isAvailable()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <org.fourthline.cling.android.AndroidUpnpServiceImpl$1: org.fourthline.cling.transport.Router createRouter(org.fourthline.cling.protocol.ProtocolFactory,org.fourthline.cling.registry.Registry)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: org.fourthline.cling.android.AndroidRouter createRouter(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.protocol.ProtocolFactory,android.content.Context)>[]--><org.fourthline.cling.android.AndroidRouter: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.protocol.ProtocolFactory,android.content.Context)>[]--><org.fourthline.cling.android.NetworkUtils: android.net.NetworkInfo getConnectedNetworkInfo(android.content.Context)>[]--><android.net.NetworkInfo: boolean isAvailable()>
#1.the call statck between class <org.fourthline.cling.android.AndroidUpnpServiceImpl$1: org.fourthline.cling.transport.Router createRouter(org.fourthline.cling.protocol.ProtocolFactory,org.fourthline.cling.registry.Registry)> to <android.net.NetworkInfo: boolean isAvailable()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><org.fourthline.cling.android.NetworkUtils: android.net.NetworkInfo getConnectedNetworkInfo(android.content.Context)>[]--><android.net.NetworkInfo: boolean isAvailable()>
#2.the call statck between class <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> to <android.net.NetworkInfo: boolean isAvailable()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.os.Environment: boolean isExternalStorageRemovable(java.io.File)> is checking!!!
The life time of api is [21,31]
411call roads:
1 Mainhead roads:
410 Packageshead roads:
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.util.CacheCleaner$BackgroundSpaceCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment$7: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$7: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$3: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void onItemClicked(github.daneren2005.dsub.view.UpdateView,java.lang.Object)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.util.compat.RemoteControlClientLP$2: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[try]][[-$i0 < 19]]
try
Good road with try: <github.daneren2005.dsub.view.CacheLocationPreference: void onBindDialogView(android.view.View)>[[try], [-$i0 < 19]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SettingsFragment$1$1$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.util.FileUtil: boolean deleteMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.view.ArtistView: void setObjectImpl(java.lang.Object)>[]--><github.daneren2005.dsub.view.ArtistView: void setObjectImpl(github.daneren2005.dsub.domain.Artist)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getArtistDirectory(android.content.Context,github.daneren2005.dsub.domain.Artist)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.util.CacheCleaner$BackgroundCleanup: java.lang.Void doInBackground()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SearchFragment$2: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.SearchResult search(github.daneren2005.dsub.domain.SearchCritera,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.fragments.SubsonicFragment$RecursiveLoader: void done(java.lang.Boolean)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.service.AutoMediaBrowserService$6: java.lang.Object doInBackground(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.util.ShufflePlayBuffer: void access$000(github.daneren2005.dsub.util.ShufflePlayBuffer)>[[try]]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getRandomSongs(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.util.FileUtil: java.io.File getArtistDirectory(android.content.Context,github.daneren2005.dsub.domain.MusicDirectory$Entry)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SelectPodcastsFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.OfflineMusicService: java.util.List getPodcastChannels(boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.MainFragment$1: java.lang.Object doInBackground()>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment$4: github.daneren2005.dsub.domain.MusicDirectory load(github.daneren2005.dsub.service.MusicService)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.MusicDirectory getPodcastEpisodes(boolean,java.lang.String,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,java.lang.String)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean)>[]--><github.daneren2005.dsub.fragments.SelectDirectoryFragment: void downloadBackground(boolean,java.util.List)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.fragments.SelectArtistFragment: java.util.List getObjects(github.daneren2005.dsub.service.MusicService,boolean,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.service.OfflineMusicService: github.daneren2005.dsub.domain.Indexes getIndexes(java.lang.String,boolean,android.content.Context,github.daneren2005.dsub.util.ProgressListener)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.util.CacheCleaner: java.util.Set access$500(github.daneren2005.dsub.util.CacheCleaner)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
$i0 >= 30
-$i0 < 21
try
Good road with try: <github.daneren2005.dsub.view.PodcastChannelView: void setObjectImpl(java.lang.Object)>[]--><github.daneren2005.dsub.view.PodcastChannelView: void setObjectImpl(github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getPodcastDirectory(android.content.Context,github.daneren2005.dsub.domain.PodcastChannel)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21]][[try]]
try
Good road with try: <github.daneren2005.dsub.fragments.NowPlayingFragment: void access$300(github.daneren2005.dsub.fragments.NowPlayingFragment)>[]--><github.daneren2005.dsub.fragments.SubsonicFragment: void warnIfStorageUnavailable()>[[try]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getMusicDirectory(android.content.Context)>[]--><github.daneren2005.dsub.util.FileUtil: java.io.File getDefaultMusicDirectory(android.content.Context)>[[$i0 >= 30]]--><github.daneren2005.dsub.util.FileUtil: java.io.File getBestDir(java.io.File[])>[[-$i0 < 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
containsStatic:false
containsTry:true
411call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.media.audiofx.LoudnessEnhancer: float getTargetGain()> is checking!!!
The life time of api is [19,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <github.daneren2005.dsub.audiofx.EqualizerController$EqualizerSettings: void <init>(android.media.audiofx.Equalizer,android.media.audiofx.BassBoost,github.daneren2005.dsub.audiofx.LoudnessEnhancerController)>[[try]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: float getGain()>[]--><android.media.audiofx.LoudnessEnhancer: float getTargetGain()>
One road protect good!
try
Good road with try: <github.daneren2005.dsub.fragments.EqualizerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><github.daneren2005.dsub.audiofx.LoudnessEnhancerController: float getGain()>[]--><android.media.audiofx.LoudnessEnhancer: float getTargetGain()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)> is checking!!!
The life time of api is [4,30]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.fourthline.cling.android.AndroidUpnpServiceImpl dummyMainMethod_org_fourthline_cling_android_AndroidUpnpServiceImpl(android.content.Intent)>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl: void onCreate()>[]--><org.fourthline.cling.android.AndroidUpnpServiceImpl$1: void <init>(org.fourthline.cling.android.AndroidUpnpServiceImpl,org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
One road protect good!
3 Packageshead roads:
try
Good road with try: <org.fourthline.cling.UpnpServiceImpl: void <init>()>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
One road protect good!
try
Good road with try: <org.fourthline.cling.Main: void main(java.lang.String[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.registry.RegistryListener[])>[]--><org.fourthline.cling.UpnpServiceImpl: void <init>(org.fourthline.cling.UpnpServiceConfiguration,org.fourthline.cling.registry.RegistryListener[])>[[try]]--><org.fourthline.cling.android.AndroidRouter: boolean enable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
One road protect good!
try
Good road with try: <org.fourthline.cling.android.AndroidRouter$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><org.fourthline.cling.android.AndroidRouter: void onNetworkTypeChange(android.net.NetworkInfo,android.net.NetworkInfo)>[]--><org.fourthline.cling.android.AndroidRouter: boolean disable()>[[try]]--><org.fourthline.cling.android.AndroidRouter: void setWiFiMulticastLock(boolean)>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
crashApis numbers:47
crashApis numbers in main road:19
On Android Version 16 this app may have error api use(at least): 36 and error api roads: 78
On Android Version 17 this app may have error api use(at least): 36 and error api roads: 78
On Android Version 18 this app may have error api use(at least): 29 and error api roads: 68
On Android Version 19 this app may have error api use(at least): 25 and error api roads: 60
On Android Version 20 this app may have error api use(at least): 25 and error api roads: 60
On Android Version 21 this app may have error api use(at least): 9 and error api roads: 24
On Android Version 22 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 23 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 24 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 25 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 26 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 27 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 28 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 29 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 30 this app may have error api use(at least): 6 and error api roads: 14
On Android Version 31 this app may have error api use(at least): 17 and error api roads: 32
