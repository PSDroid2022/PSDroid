/home/ys/桌面/data-PSDroid-ICSE/55App_Manager/App_Manager-2.5.16.apk
Entry Points[io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity, io.github.muntashirakon.AppManager.details.AppDetailsActivity, io.github.muntashirakon.AppManager.details.ManifestViewerActivity, io.github.muntashirakon.AppManager.profiles.AppsProfileActivity, io.github.muntashirakon.AppManager.settings.SettingsActivity, io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver, io.github.muntashirakon.AppManager.profiles.ProfilesActivity, io.github.muntashirakon.AppManager.usage.AppUsageActivity, io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService, io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity, io.github.muntashirakon.AppManager.details.ClassListingActivity, io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity, io.github.muntashirakon.AppManager.AppManager, io.github.muntashirakon.AppManager.misc.AlertDialogActivity, io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity, androidx.core.content.FileProvider, io.github.muntashirakon.AppManager.batchops.BatchOpsService, io.github.muntashirakon.AppManager.main.MainActivity, io.github.muntashirakon.AppManager.details.ClassViewerActivity, io.github.muntashirakon.AppManager.crypto.OpenPGPCryptoActivity]
FllowDroidcallgraph size:24421
Soot started on Wed Jul 13 06:13:44 CST 2022
StaticCheck:<com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>$yysi0 < 21
StaticCheck:<androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>$yysi0 < 23
StaticCheck:<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>$yysi0 == 18
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastQ()>$yysi0 < 29
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastR()>$yysi0 >= 30
StaticCheck:<androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>$yysi0 < 17
StaticCheck:<androidx.print.PrintHelper: boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION>$yysi0 < 20
StaticCheck:<androidx.print.PrintHelper: boolean systemSupportsPrint()>$yysi0 < 19
StaticCheck:<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<io.github.muntashirakon.AppManager.utils.Utils: boolean checkUsageStatsPermission(android.content.Context)>$yysi0 < 29
StaticCheck:<androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>$yysi0 < 19
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>$yysi0 < 28
StaticCheck:<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>$yysi0 < 19
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>$yysi0 > 29
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>$yysi0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>$yysi1 > 29
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>$yysi0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>$yysi0 > 29
StaticCheck:<com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE>$yysi0 >= 18
StaticCheck:<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>$yysi0 < 16
StaticCheck:<androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>$yysi1 < 21
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>$yysi0 < 28
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>$yysi0 < 30
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback,android.os.Handler)>$yysi0 < 30
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>$yysi0 < 30
StaticCheck:<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>$yysi0 > 20
StaticCheck:<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>$yysi0 < 24
StaticCheck:<androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>$yysi0 < 29
StaticCheck:<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>$yysi0 < 23
StaticCheck:<androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>$yysi0 < 29
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>$yysi0 < 21
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>$yysi0 < 16
StaticCheck:<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>$yysi0 >= 21
StaticCheck:<com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW>$yysi0 < 19
StaticCheck:<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>$yysi0 < 22
StaticCheck:<androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>$yysi0 < 24
StaticCheck:<com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>$yysi0 >= 18
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>$yysi2 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>$yysi4 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>$yysi0 < 18
StaticCheck:<androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>$yysi1 < 24
StaticCheck:<androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>$yysi1 < 21
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>$yysi0 < 28
StaticCheck:<androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>$yysi0 < 28
StaticCheck:<androidx.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>$yysi0 < 21
StaticCheck:<com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>$yysi0 < 18
StaticCheck:<androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>$yysi1 < 25
StaticCheck:<androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>$yysi1 < 28
StaticCheck:<androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>$yysi1 < 23
StaticCheck:<io.github.muntashirakon.AppManager.apk.ApkUtils: boolean isSplitApk(android.content.pm.ApplicationInfo)>$yysi0 < 26
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
StaticCheck:<androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR>$yysi0 >= 21
StaticCheck:<androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>$yysi1 < 19
StaticCheck:<androidx.core.os.ProcessCompat: boolean isApplicationUid(int)>$yysi1 < 24
StaticCheck:<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>$yysi0 >= 15
StaticCheck:<androidx.core.os.TraceCompat: boolean isEnabled()>$yysi0 < 29
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
StaticCheck:<androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)>$yysi0 < 21
Soot finished on Wed Jul 13 06:14:38 CST 2022
Soot has run for 0 min. 53 sec.
Found 1 additional DEX files. Now visiting them one by one.
Soot started on Wed Jul 13 06:14:38 CST 2022
Soot finished on Wed Jul 13 06:14:39 CST 2022
Soot has run for 0 min. 1 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 21
Declared Target Sdk version is: 29
Declared Max Sdk version is: -1
Collected 4018 Android APIs in the primary DEX file
Collected 92 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#2.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]][[$i0 < 23]]
$z0 == 0
$yysi0 >= 15
-$i0 < 21
$i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#3.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]][[$i0 < 23]]
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
One road protect good!
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)>[]--><com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>[]--><com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#5.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#7.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]][[$i0 < 23]]
$z0 == 0
$yysi0 >= 15
-$i0 < 21
$i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#8.the call statck between class <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)>[]--><com.google.android.material.button.MaterialButton: void setStrokeWidth(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setStrokeWidth(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void updateStroke()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#10.the call statck between class <com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isDynamic()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isDynamic()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean isDynamic()>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30]][[-$i1 < 25]][[$i1 > 29]]
$i1 < 30
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]--><android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>[[-$i0 < 24]]--><android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30], [-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30]][[-$i0 < 29]]
$yysi0 >= 30
-$i0 < 29
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[]--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30], [-$i0 < 29]]--><android.view.DisplayCutout: void <init>(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
353call roads:
1 Mainhead roads:
352 Packageshead roads:
containsStatic:true
containsTry:true
353call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26]][[try]][[-$yysi0 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]--><android.app.usage.StorageStatsManager: android.app.usage.StorageStats queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)>
One road protect good!
containsStatic:true
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23], [$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23]][[$i0 < 28]]
-$i0 < 23
$i0 < 28
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23], [$i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setTouchModal(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setStateDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 >= 30
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>[[-$yysi0 >= 30]]--><android.view.accessibility.AccessibilityNodeInfo: void setStateDescription(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)> to <android.view.accessibility.AccessibilityNodeInfo: void setStateDescription(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.os.Trace: boolean isEnabled()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.os.TraceCompat: boolean isEnabled()>[[-$i0 < 29]]--><android.os.Trace: boolean isEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean shouldShowIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[[-$i0 < 28]]--><android.app.RemoteAction: boolean shouldShowIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.String getPackage()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.String getPackage()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.String getPackage()>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 28
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-$i0 < 28]]--><android.view.View: void setAccessibilityHeading(boolean)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setAccessibilityHeading(boolean)>
#2.the call statck between class <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$CompatImplApi28: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[]--><android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
#1.the call statck between class <androidx.core.view.ViewCompat$CompatImplApi28: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)> to <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(java.util.Map)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getResultsSource(android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26]][[-$i1 < 20]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-$i0 < 28]]
$i0 < 26
-$i1 < 20
-$i0 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-$i0 < 28]]--><android.app.RemoteInput: int getResultsSource(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.app.NotificationManager: int getImportance()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: int getImportance()>[[-$i0 < 24]]--><android.app.NotificationManager: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()> is checking!!!
The life time of api is [28,31]
6call roads:
1 Mainhead roads:
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: boolean runRestore()>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void restoreSource()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
5 Packageshead roads:
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$000(io.github.muntashirakon.AppManager.main.MainViewModel,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForUid(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$100(io.github.muntashirakon.AppManager.main.MainViewModel,java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$Iv_0L6-gFIWt618T3hONedO1Mww(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadSignatures()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
One road protect good!
crashApis:9
crashApisInMain:1
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>[[-$i0 < 24]]--><android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-$i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#1.the call statck between class <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-$i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMinTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMinTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setConversationId(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [30,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26], [-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]][[-$i0 < 30]]
-$i0 < 26
$i0 >= 26
-$i0 < 30
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26], [-$i0 < 30]]--><android.app.NotificationChannel: void setConversationId(java.lang.String,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26], [-$i0 < 30]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]][[-$i0 < 30]]
$i0 >= 26
-$i0 < 30
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26], [-$i0 < 30]]--><android.app.NotificationChannel: void setConversationId(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.os.Message: void setAsynchronous(boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try]][[-$i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-$i0 < 16]]--><android.os.Message: void setAsynchronous(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainRecyclerAdapter: void onBindViewHolder(io.github.muntashirakon.AppManager.main.MainRecyclerAdapter$ViewHolder,int)>[[-$i0 < 23]]--><android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
containsStatic:true
containsTry:true
30call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setOverlapAnchor(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>[[-$i0 < 23]]--><android.widget.PopupWindow: void setOverlapAnchor(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.widget.TextView: void setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23], [$i0 < 18]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23]][[$i0 < 18]]
$i0 >= 23
$i0 < 18
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23], [$i0 < 18]]--><android.widget.TextView: void setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.app.usage.StorageStats: long getCacheBytes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26]][[try]][[-$yysi0 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]--><android.app.usage.StorageStats: long getCacheBytes()>
One road protect good!
containsStatic:true
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeStepGranularity()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeStepGranularity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: int getDesiredHeightResId()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: int getDesiredHeightResId()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: int getDesiredHeightResId()>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26]][[-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]
$i0 < 26
-$i1 < 20
-$i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]--><android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.String getId()> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.String getId()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.String getId()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)>[]--><android.content.pm.ShortcutInfo: java.lang.String getId()>
#2.the call statck between class <androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)> to <android.content.pm.ShortcutInfo: java.lang.String getId()>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.graphics.Paint: void setBlendMode(android.graphics.BlendMode)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>[[-$i0 < 29]]--><android.graphics.Paint: void setBlendMode(android.graphics.BlendMode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.widget.PopupWindow: boolean getOverlapAnchor()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>[[-$i0 < 23]]--><android.widget.PopupWindow: boolean getOverlapAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.view.ViewGroup: void suppressLayout(boolean)> is checking!!!
The life time of api is [29,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 29
Good road: <androidx.transition.ChangeBounds$9: void onTransitionResume(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
-$i0 < 29
Good road: <androidx.transition.Visibility$DisappearListener: void suppressLayout(boolean)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
-$i0 < 29
Good road: <androidx.transition.ChangeBounds$9: void onTransitionCancel(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
-$i0 < 29
Good road: <androidx.transition.ChangeBounds$9: void onTransitionEnd(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
-$i0 < 29
Good road: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
-$i0 < 29
Good road: <androidx.transition.ChangeBounds$9: void onTransitionPause(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 29]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.app.Person: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])> is checking!!!
The life time of api is [29,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 28]]--><android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getIconMaxHeight()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxHeight(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getIconMaxHeight()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus.Callback,android.os.Handler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24], [$i0 < 30], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24]][[$i0 < 30]][[try]]
-$i0 < 24
$i0 < 30
try
Good road with try: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24], [$i0 < 30], [try]]--><android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus.Callback,android.os.Handler)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[$i0 < 28]]
-$i0 < 24
$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)> is checking!!!
The life time of api is [23,31]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>[]--><android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)> to <android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(android.graphics.Rect,java.util.List)>[[-$i0 < 28]]--><android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30], [$i0 < 29], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30]][[$i0 < 29]][[-$i0 < 28]]
$yysi0 >= 30
$i0 < 29
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[]--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[$yysi0 >= 30], [$i0 < 29], [-$i0 < 28]]--><android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)>
One road protect good!
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[$i0 < 28]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()> to <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
#1.the call statck between class <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)> to <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>has compatibility isssues！
-----------------------------------------
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
One road protect good!
crashApis:16
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.app.Activity: android.net.Uri getReferrer()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)>[[-$i0 < 22]]--><android.app.Activity: android.net.Uri getReferrer()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[$i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.view.View: void dispatchFinishTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)>[[-$i0 < 24]]--><android.view.View: void dispatchFinishTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: android.os.IBinder getBinder()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()>[]--><android.app.job.JobServiceEngine: android.os.IBinder getBinder()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()> to <android.app.job.JobServiceEngine: android.os.IBinder getBinder()>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
353call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassViewerActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.details.ClassViewerActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.AppDetailsActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_AppDetailsActivity(android.content.Intent)>[]--><androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
352 Packageshead roads:
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$setSortBy$0$MainViewModel(int)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomsheet.BottomSheetDialogFragment: void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i0 >= 18
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialFadeThrough: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper: java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void lambda$onStart$1$RunningAppsActivity(java.util.List)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$13$ImportExportDialogFragment()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$null$15$AppInfoFragment(android.view.View)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet)>[]--><androidx.preference.PreferenceGroup: void addItemFromInflater(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>[[try]]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialFadeThrough: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$onCreateDialog$4$ImportExportDialogFragment(android.view.View)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: void scrollToPreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceFragmentCompat: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[$i0 < 30], [try], [$i0 < 24]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[$i0 < 30]][[try]][[$i0 < 24]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]
$i0 < 30
try
Good road with try: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[$i0 < 30], [try], [$i0 < 24]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker$1: void onClick(android.view.View)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$1: void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>[]--><com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy: android.animation.AnimatorSet createAnimator()>[]--><com.google.android.material.floatingactionbutton.BaseMotionStrategy: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>[]--><com.google.android.material.floatingactionbutton.BaseMotionStrategy: android.animation.AnimatorSet createAnimator()>[]--><com.google.android.material.floatingactionbutton.BaseMotionStrategy: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.rules.RulesTypeSelectionDialogFragment: void lambda$null$8$RulesTypeSelectionDialogFragment()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialFade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void access$000(io.github.muntashirakon.AppManager.main.MainActivity,boolean)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialSharedAxis: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.datepicker.MaterialDatePicker: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$21$OneClickOpsActivity()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$25$OneClickOpsActivity(java.lang.String[],boolean[],java.util.ArrayList,java.lang.String[],int[])>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$14$ImportExportDialogFragment(java.util.List,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.ResultImpl: void callback(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.ResultImpl: void callback(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.ResultImpl: void callback(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.ResultImpl: void callback(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.ResultImpl: void callback(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.SnapHelper$1: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.Shell build(java.lang.String[])>[]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$18$OneClickOpsActivity()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialFade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialElevationScale: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.datepicker.MaterialDatePicker$2: void onClick(android.view.View)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip$1: void onClick(android.view.View)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$000(io.github.muntashirakon.AppManager.main.MainViewModel,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForUid(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$onCreateDialog$9$ImportExportDialogFragment(android.view.View)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transformation.FabTransformationBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialFade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: boolean endFakeDrag()>[]--><androidx.viewpager2.widget.FakeDrag: boolean endFakeDrag()>[]--><androidx.viewpager2.widget.ViewPager2: void snapToPage()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceGroupAdapter: void <init>(androidx.preference.PreferenceGroup)>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$nsBhXrwrH6hPwTluNCQGb2qCSH8(io.github.muntashirakon.AppManager.details.AppDetailsFragment)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewDetachedFromWindow(android.view.View)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: boolean fakeDragBy(float)>[]--><androidx.viewpager2.widget.FakeDrag: boolean fakeDragBy(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.DialogFragment: void onDestroyView()>[]--><androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialSharedAxis: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip$2: void onClick(android.view.View)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$null$59$AppInfoFragment(android.content.DialogInterface,int)>[]--><androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>[]--><androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$null$12$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.Shell: com.topjohnwu.superuser.Shell newInstance()>[]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialElevationScale: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void setSortBy(int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat$1: void handleMessage(android.os.Message)>[]--><androidx.preference.PreferenceFragmentCompat: void bindPreferences()>[]--><androidx.preference.PreferenceFragmentCompat: androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceGroupAdapter: void <init>(androidx.preference.PreferenceGroup)>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceGroup: boolean removePreferenceRecursively(java.lang.CharSequence)>[]--><androidx.preference.PreferenceGroup: boolean removePreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean removePreferenceInt(androidx.preference.Preference)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceGroup: void removeAll()>[[try]]--><androidx.preference.PreferenceGroup: boolean removePreferenceInt(androidx.preference.Preference)>[[try]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$100(io.github.muntashirakon.AppManager.main.MainViewModel,java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$addFilterFlag$1$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity$1: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$12$OneClickOpsActivity()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceDialogFragmentCompat: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$cKGovHIBNWKEam83K6YCUGLhd9Q(io.github.muntashirakon.AppManager.main.MainViewModel)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$onCreateDialog$10$ImportExportDialogFragment(android.view.View)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppCacheDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager: void endFakeDrag()>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.datepicker.MaterialCalendar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$null$8$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceGroupAdapter$3: boolean onPreferenceClick(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(androidx.preference.Preference)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialFadeThrough: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismiss()>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean tryDismissWithAnimation(boolean)>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int)>[]--><androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onCreate$2$MainActivity(android.view.View,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void checkAppUpdate()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.profiles.AppsProfileActivity: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$12$ImportExportDialogFragment(java.util.List)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$17$ImportExportDialogFragment(java.lang.String[],boolean[],java.util.List,java.lang.String[],android.os.Handler)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.JobImpl: void submit(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.JobImpl: void submit(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.JobImpl: void submit(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.JobImpl: void submit(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.JobImpl: void submit(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$ResultCallback)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$yysi0 < 29
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[[-$yysi0 < 29]]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void onCleared()>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$9$AppInfoFragment(int)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$10$OneClickOpsActivity(android.content.DialogInterface,int)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialSharedAxis: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAllowingStateLoss()>[]--><androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAllowingStateLoss()>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean tryDismissWithAnimation(boolean)>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)>[]--><com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.timepicker.RadialViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void access$100(io.github.muntashirakon.AppManager.usage.AppUsageActivity)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()>[]--><androidx.fragment.app.FragmentManager: void handleOnBackPressed()>[]--><androidx.activity.OnBackPressedDispatcher: void onBackPressed()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialFadeThrough: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$DNQefDQMG93kSR60qdpKrQ9qmv0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.profiles.AppsFragment: void lambda$onViewCreated$1$AppsFragment(io.github.muntashirakon.AppManager.profiles.AppsFragment$AppsRecyclerAdapter,java.util.ArrayList)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$onCreateDialog$2$OpenPgpKeySelectionDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void chooseKey()>[]--><org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto$2: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onMenuItemClick(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void handleBatchOp(int)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onMenuItemClick(android.view.MenuItem)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void scrollToPreference(java.lang.String)>[]--><androidx.preference.PreferenceFragment: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$yysi0 < 19
try
Good road with try: <androidx.transition.FragmentTransitionSupport: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.OpReorderer: void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$0$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.ShellUtils: boolean fastCmdResult(java.lang.String[])>[]--><com.topjohnwu.superuser.Shell: com.topjohnwu.superuser.Shell getShell()>[]--><com.topjohnwu.superuser.internal.MGR: com.topjohnwu.superuser.internal.ShellImpl getShell()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialFade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbStream openShell(android.content.Context,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbConnection connect(android.content.Context,java.lang.String,int)>[]--><com.tananaev.adblib.AdbConnection: void connect()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker$2: void onClick(android.view.View)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$yysi0 < 19
try
Good road with try: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void setLabelVisibilityMode(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void onRefresh()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.activity.ComponentActivity: void onBackPressed()>[]--><androidx.activity.OnBackPressedDispatcher: void onBackPressed()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.Shell: com.topjohnwu.superuser.Shell newInstance(java.lang.String[])>[]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener: void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: void cleanOldSessions()>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.Shell: boolean rootAccess()>[[try]]--><com.topjohnwu.superuser.Shell: com.topjohnwu.superuser.Shell getShell()>[]--><com.topjohnwu.superuser.internal.MGR: com.topjohnwu.superuser.internal.ShellImpl getShell()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager$PagerObserver: void onChanged()>[]--><androidx.viewpager.widget.ViewPager: void dataSetChanged()>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.rules.RulesTypeSelectionDialogFragment: void lambda$null$4$RulesTypeSelectionDialogFragment()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1: void run()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.'-$$Lambda$SharedPrefsActivity$SharedPrefsReaderThread$_dBmloWXOqx7wsY2SqXt6UPWd_A': void run()>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity$SharedPrefsReaderThread: void lambda$run$0$SharedPrefsActivity$SharedPrefsReaderThread()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.types.IconLoaderThread: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper$1: void run()>[]--><androidx.recyclerview.widget.ItemTouchHelper: boolean scrollIfNecessary()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.Fragment$2: void run()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.profiles.ProfilesActivity: void lambda$onStart$0$ProfilesActivity(java.util.HashMap)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[try], [$i0 < 28], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[try]][[$i0 < 28]][[$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]
$i0 < 28
try
Good road with try: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>[[$i0 < 28]]--><androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>[[try], [$i0 < 28], [$yysi0 == 26]]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$10$AppInfoFragment(int,java.lang.String[])>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transformation.FabTransformationScrimBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void lambda$getShell$1(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.datepicker.MaterialDatePicker$1: void onClick(android.view.View)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.ShellUtils: java.lang.String fastCmd(java.lang.String[])>[]--><com.topjohnwu.superuser.Shell: com.topjohnwu.superuser.Shell getShell()>[]--><com.topjohnwu.superuser.internal.MGR: com.topjohnwu.superuser.internal.ShellImpl getShell()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$removeFilterFlag$2$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByFlags()>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void filterItemsByQuery(java.util.List)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
$i0 >= 16
-$i1 < 23
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>[[$i0 >= 16]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void transitionTo(androidx.transition.Scene)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.Scene: void enter()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$11$OneClickOpsActivity(java.lang.String[],boolean[],java.util.ArrayList,java.lang.String[])>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$16$ImportExportDialogFragment(android.content.DialogInterface,int)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)>[[try]]--><androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void onAttach(android.content.Context)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uEWG6j5IO7FMIMsoQq00MOTU06I(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadAppOps()>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.types.FullscreenDialog: boolean lambda$onViewCreated$1$FullscreenDialog(android.view.MenuItem)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialSharedAxis: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void scrollToPreference(androidx.preference.Preference)>[]--><androidx.preference.PreferenceFragment: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$yysi0 < 19
try
Good road with try: <androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Scene: void exit()>[]--><com.topjohnwu.superuser.internal.WaitRunnable: void run()>[[try]]--><androidx.loader.content.AsyncTaskLoader$LoadTask: void run()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$27$OneClickOpsActivity(android.text.Editable,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.util.Collection getFilteredAppOps(java.lang.String,int[])>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$importExistingRules$19$ImportExportDialogFragment(android.content.pm.PackageManager,boolean,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$16$OneClickOpsActivity(android.content.DialogInterface,int)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppFilesDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void getShell(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.MGR: void getShell(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void getShell(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void getShell(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.MGR: void getShell(java.util.concurrent.Executor,com.topjohnwu.superuser.Shell$GetShellCallback)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onViewCreated$5$AppInfoFragment(java.util.List)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$8$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: java.util.List retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.LocalServer: java.lang.String readProcess()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet)>[]--><androidx.preference.PreferenceGroup: void addItemFromInflater(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>[[try]]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsActivity: void lambda$null$3$AppDetailsActivity(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$24$OneClickOpsActivity(android.content.DialogInterface,int)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.types.FullscreenDialog: void lambda$onViewCreated$0$FullscreenDialog(android.view.View)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>[]--><androidx.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet)>[]--><androidx.preference.PreferenceGroup: void addItemFromInflater(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>[[try]]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void go(androidx.transition.Scene)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.Scene: void enter()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$9$MainPreferences()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: void scrollToPreference(java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.MessageThreadUtil$2: void maybeExecuteBackgroundRunnable()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void showHelper(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageDetailsDialogFragment: void lambda$onCreateDialog$0$AppUsageDetailsDialogFragment(android.content.DialogInterface,int)>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.topjohnwu.superuser.internal.'-$$Lambda$4ncyw0eqhIXFN8msOlmOoKcb0zE': void execute(java.lang.Runnable)>[]--><com.topjohnwu.superuser.internal.UiThreadHandler: void run(java.lang.Runnable)>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager$PagerObserver: void onInvalidated()>[]--><androidx.viewpager.widget.ViewPager: void dataSetChanged()>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.DefaultSpecialEffectsController: java.util.Map startTransitions(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation)>[]--><androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)>[]--><androidx.core.provider.FontsContractCompat$4: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStoragePublicDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.MaterialElevationScale: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.transition.TransitionManager: void go(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.TransitionManager: void changeScene(androidx.transition.Scene,androidx.transition.Transition)>[]--><androidx.transition.Scene: void enter()>[]--><androidx.fragment.app.Fragment$1: void run()>[]--><androidx.fragment.app.Fragment: void startPostponedEnterTransition()>[]--><androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onMenuItemClick$5$MainActivity(int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>[]--><androidx.core.os.HandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>[]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>[]--><com.topjohnwu.superuser.internal.SerialExecutorService: void execute(java.lang.Runnable)>[[try]]--><androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)>[]--><androidx.fragment.app.FragmentManager: void launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet)>[]--><androidx.preference.PreferenceGroup: void addItemFromInflater(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>[[try]]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$17$OneClickOpsActivity(java.lang.String[],boolean[],java.util.ArrayList,java.lang.String[],java.lang.String[])>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$26$OneClickOpsActivity()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$4$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onMenuItemClick$6$MainActivity(int,java.lang.String[])>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$getPackageInfo$63$AppInfoFragment()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$getPackageInfo$62$AppInfoFragment()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onStart$9$MainActivity(java.util.List)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$onCreateDialog$5$ImportExportDialogFragment(android.view.View)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$null$18$ImportExportDialogFragment()>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.ViewPager: void setPageMargin(int)>[]--><androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)>[]--><androidx.viewpager.widget.ViewPager: void completeScroll(boolean)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onRefresh()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void refreshDetails()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceGroupAdapter: void onPreferenceVisibilityChange(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(androidx.preference.Preference)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$4$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.loader.content.AsyncTaskLoader: void onForceLoad()>[]--><androidx.loader.content.AsyncTaskLoader: void executePendingTask()>[]--><androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.OpReorderer: void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)>[]--><androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>[]--><androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>[]--><androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$15$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean ignoreDangerousAppOps()>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$1900(io.github.muntashirakon.AppManager.details.ClassListingActivity,boolean)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void showProgress(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void access$100(io.github.muntashirakon.AppManager.details.AppDetailsFragment,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsFragment: void showProgressIndicator(boolean)>[]--><com.google.android.material.progressindicator.ProgressIndicator: void hide()>[]--><androidx.preference.PreferenceGroupAdapter$1: void run()>[]--><androidx.preference.PreferenceGroupAdapter: void updatePreferences()>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)>[]--><androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>[]--><androidx.recyclerview.widget.DiffUtil$DiffResult: void addRootSnake()>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.DialogFragment$3: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
try
Good road with try: <com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.Shell build()>[]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build()>[[try]]--><com.topjohnwu.superuser.internal.BuilderImpl: com.topjohnwu.superuser.internal.ShellImpl build(java.lang.String[])>[[try]]--><com.topjohnwu.superuser.internal.Utils: android.content.Context getContext()>[[try]]--><com.topjohnwu.superuser.internal.UiThreadHandler: void runAndWait(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.transition.platform.MaterialElevationScale: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>[]--><com.topjohnwu.superuser.CallbackList: void add(int,java.lang.Object)>[]--><androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.types.FullscreenDialog: void onStart()>[]--><androidx.fragment.app.DialogFragment: void dismiss()>[]--><androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><androidx.core.app.ActivityCompat$1: void run()>[]--><androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[-$i1 < 23]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
One road protect good!
containsStatic:true
containsTry:true
353call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean isContextual()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 29]][[$i0 < 28]][[$i0 < 24]]
$i0 < 23
$i0 < 20
-$i0 < 29
$i0 < 28
$i0 < 24
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action: boolean isContextual()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-$i1 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-$i1 < 29]][[$i0 < 28]][[$i0 < 24]]
-$i1 < 29
$i0 < 28
$i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-$i1 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action: boolean isContextual()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 28
Good road: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$yysi0 < 28]]--><android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder recoverBuilder(android.content.Context,android.app.Notification)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24], [$i0 >= 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24]][[$i0 >= 16]]
-$i0 < 24
$i0 >= 16
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24], [$i0 >= 16]]--><android.app.Notification.Builder: android.app.Notification.Builder recoverBuilder(android.content.Context,android.app.Notification)>
One road protect good!
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createContentView()>[[-$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder recoverBuilder(android.content.Context,android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24], [$i0 >= 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24]][[$i0 >= 21]]
-$i0 < 24
$i0 >= 21
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24], [$i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder recoverBuilder(android.content.Context,android.app.Notification)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getStateDescription()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getStateDescription()>
#1.the call statck between class <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getStateDescription()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.graphics.Color: float[] getComponents()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float[] getComponents()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float[] getComponents()>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.app.Notification.Action: int getSemanticAction()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 24]][[-$i0 < 28]]
$i0 < 23
$i0 < 20
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action: int getSemanticAction()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 24]][[-$i0 < 28]]
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action: int getSemanticAction()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.app.PendingIntent getActionIntent()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.app.PendingIntent getActionIntent()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.app.PendingIntent getActionIntent()>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsets(int,android.graphics.Insets)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsets(int,android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsets(int,android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 21
$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 30
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)>[[-$i0 < 30]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getUri()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
30call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: int onStartCommand(android.content.Intent,int,int)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void createNotificationChannel()>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: int onStartCommand(android.content.Intent,int,int)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void createNotificationChannel()>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
29 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i1 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-$i1 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onActionUp(float,boolean)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxHeight(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void reportShortcutUsed(android.content.Context,java.lang.String)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void enableShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
$i0 < 25
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
$i0 < 25
-$i1 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[-$i1 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker: void access$300(com.google.android.material.timepicker.MaterialTimePicker,com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerTextInputPresenter: void hide()>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-$i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxWidth(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerTextInputPresenter: void hide()>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[]--><androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 >= 30
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)>[[-$i0 >= 30]]--><androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
$i0 >= 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)>[[$i0 >= 30]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void disableShortcuts(android.content.Context,java.util.List,java.lang.CharSequence)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
$i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainRecyclerAdapter: void onBindViewHolder(io.github.muntashirakon.AppManager.main.MainRecyclerAdapter$ViewHolder,int)>[[-$i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 23
-$i0 <= 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-$i0 < 23]]--><androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>[[-$i0 <= 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
30call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.widget.RemoteViews createContentView()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createContentView()>[[-$i0 < 24]]--><android.app.Notification.Builder: android.widget.RemoteViews createContentView()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <android.location.GnssStatus: float getElevationDegrees(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: float getElevationDegrees(int)>[]--><android.location.GnssStatus: float getElevationDegrees(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: float getElevationDegrees(int)> to <android.location.GnssStatus: float getElevationDegrees(int)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
One road protect good!
crashApis:24
crashApisInMain:2
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getShortcutId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getShortcutId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: void <init>(java.lang.String,java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26]]--><android.app.NotificationChannelGroup: void <init>(java.lang.String,java.lang.CharSequence)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat)>[]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26]]--><android.app.NotificationChannelGroup: void <init>(java.lang.String,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean hasGlyph(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>[[-$i0 < 23]]--><android.graphics.Paint: boolean hasGlyph(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
357call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassListingActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassListingActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.ProfilesActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_ProfilesActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity dummyMainMethod_io_github_muntashirakon_AppManager_runningapps_RunningAppsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity dummyMainMethod_io_github_muntashirakon_AppManager_oneclickops_OneClickOpsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.main.MainActivity dummyMainMethod_io_github_muntashirakon_AppManager_main_MainActivity(android.content.Intent)>[]--><androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.usage.AppUsageActivity dummyMainMethod_io_github_muntashirakon_AppManager_usage_AppUsageActivity(android.content.Intent)>[]--><androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.AppsProfileActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_AppsProfileActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.misc.AlertDialogActivity dummyMainMethod_io_github_muntashirakon_AppManager_misc_AlertDialogActivity(android.content.Intent)>[]--><androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ManifestViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ManifestViewerActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.SettingsActivity dummyMainMethod_io_github_muntashirakon_AppManager_settings_SettingsActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity dummyMainMethod_io_github_muntashirakon_AppManager_sharedpref_SharedPrefsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: boolean execPendingActions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.crypto.OpenPGPCryptoActivity dummyMainMethod_io_github_muntashirakon_AppManager_crypto_OpenPGPCryptoActivity(android.content.Intent)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
356 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$new$0$AppInfoFragment(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void dispatchDestroyView()>[]--><androidx.fragment.app.FragmentManager: void dispatchDestroyView()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.ImportExportDialogFragment: void lambda$new$1$ImportExportDialogFragment(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentAnim$2$1: void run()>[]--><androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void createView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>[]--><androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void createView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.MaterialTextInputPicker: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentManager: void dispatchCreate()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: void onRequery(androidx.lifecycle.ViewModel)>[]--><androidx.lifecycle.SavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.SavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()>[]--><androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)>[]--><androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>[]--><androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>[]--><androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void createView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><androidx.fragment.app.FragmentAnim$2$1: void run()>[]--><androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void createView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$4$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.types.FullscreenDialog: void show()>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>[]--><androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>[]--><androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>[[try]]--><androidx.fragment.app.FragmentStateManager: void stop()>[]--><androidx.fragment.app.Fragment: void performStop()>[]--><androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><io.github.muntashirakon.AppManager.main.'-$$Lambda$MainActivity$bu2vShCLtk0xsW6n0EV15JIA16k': void onActivityResult(java.lang.Object)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void lambda$new$1$MainActivity(android.net.Uri)>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void lambda$null$6$PackageInstallerActivity(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void install()>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void launchInstaller()>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$20$MainPreferences(androidx.preference.Preference)>[]--><io.github.muntashirakon.AppManager.types.FullscreenDialog: void show()>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()>[]--><androidx.fragment.app.FragmentManager: boolean executePendingTransactions()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List,java.lang.Runnable)>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.fragment.app.FragmentAnim$2$1: void run()>[]--><androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)>[]--><androidx.fragment.app.FragmentStateManager: void createView()>[]--><androidx.fragment.app.Fragment: void performViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchViewCreated()>[]--><androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$null$10$MainActivity(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.types.FullscreenDialog: void show()>[]--><androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>[]--><androidx.fragment.app.BackStackRecord: int commit()>[]--><androidx.fragment.app.BackStackRecord: int commitInternal(boolean)>[]--><androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void scheduleCommit()>[]--><androidx.fragment.app.FragmentManager$5: void run()>[]--><androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>[[try]]--><androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#119.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:true
containsTry:true
120call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isPinned()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isPinned()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean isPinned()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <android.location.GnssStatus: boolean hasCarrierFrequencyHz(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.location.GnssStatusWrapper: boolean hasCarrierFrequencyHz(int)>[[-$i1 < 26]]--><android.location.GnssStatus: boolean hasCarrierFrequencyHz(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsetsIgnoringVisibility(int,android.graphics.Insets)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsetsIgnoringVisibility(int,android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setInsetsIgnoringVisibility(int,android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[$i0 < 28]]--><android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()> to <android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getEditChoicesBeforeSending()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[[-$i0 < 29]]--><android.app.RemoteInput: int getEditChoicesBeforeSending()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [-$i0 < 20]]--><androidx.core.app.RemoteInput: androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23]][[-$i0 < 20]]--><androidx.core.app.RemoteInput: androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput)>[[-$i0 < 29]]
$i0 < 23
-$i0 < 20
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [-$i0 < 20]]--><androidx.core.app.RemoteInput: androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput: int getEditChoicesBeforeSending()>
One road protect good!
-$i1 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-$i1 < 29]]--><android.app.RemoteInput: int getEditChoicesBeforeSending()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <android.util.ArraySet: boolean add(java.lang.Object)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)>[]--><android.util.ArraySet: boolean add(java.lang.Object)>
#1.the call statck between class <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)> to <android.util.ArraySet: boolean add(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <android.widget.TextView: int getHyphenationFrequency()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23], [$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23]][[$i0 < 28]]
-$i0 < 23
$i0 < 28
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 23], [$i0 < 28]]--><android.widget.TextView: int getHyphenationFrequency()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean registerGnssStatusCallback(java.util.concurrent.Executor,android.location.GnssStatus.Callback)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[try], [-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[try]][[-$i0 < 30]]
try
Good road with try: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>[[try], [-$i0 < 30]]--><android.location.LocationManager: boolean registerGnssStatusCallback(java.util.concurrent.Executor,android.location.GnssStatus.Callback)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: int getRestrictBackgroundStatus()> is checking!!!
The life time of api is [24,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)>[[-$i0 < 24]]--><android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: int getRestrictBackgroundStatus()>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannelGroups()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
$i0 < 28
-$i0 < 26
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannelGroups()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <android.view.View: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setScreenReaderFocusable(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>[]--><android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()> to <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <android.app.Notification.DecoratedCustomViewStyle: void <init>()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.DecoratedCustomViewStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20]][[-$i0 < 23]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20]][[-$i0 < 23]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 20
-$i0 < 23
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20]][[-$i0 < 23]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 20
-$i0 < 23
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20]][[-$i0 < 23]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 20], [-$i0 < 23], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannels()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannels()>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannels()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.view.ViewGroup: int getChildDrawingOrder(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
$i0 != 28
$i1 < 21
-$i1 < 29
Good road: <androidx.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[[-$z0 == 0]]--><androidx.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.GhostViewUtils: androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[[$i0 != 28]]--><androidx.transition.GhostViewPort: androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[]--><androidx.transition.GhostViewHolder: void addGhostView(androidx.transition.GhostViewPort)>[]--><androidx.transition.GhostViewHolder: int getInsertIndex(java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>[[$i1 < 21]]--><androidx.transition.ViewGroupUtils: int getChildDrawingOrder(android.view.ViewGroup,int)>[[-$i1 < 29]]--><android.view.ViewGroup: int getChildDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <android.location.GnssStatus: float getAzimuthDegrees(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: float getAzimuthDegrees(int)>[]--><android.location.GnssStatus: float getAzimuthDegrees(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: float getAzimuthDegrees(int)> to <android.location.GnssStatus: float getAzimuthDegrees(int)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <android.app.Notification: int getGroupAlertBehavior()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getGroupAlertBehavior()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setRadius(int)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i1 < 23
Good road: <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.Slider: void setHaloRadius(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void setHaloRadius(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.Slider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.slider.Slider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <android.view.View: void setKeyboardNavigationCluster(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i1 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[$i1 < 21]][[-$i1 < 26]]
$i0 < 21
$i1 < 21
-$i1 < 26
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i1 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphEnd(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)>[[-$i1 < 29]]--><android.text.PrecomputedText: int getParagraphEnd(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int displayCutout()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int displayCutout()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int displayCutout()>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <android.os.Process: boolean isApplicationUid(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.ProcessCompat$Api24Impl: boolean isApplicationUid(int)>[]--><android.os.Process: boolean isApplicationUid(int)>
#1.the call statck between class <androidx.core.os.ProcessCompat$Api24Impl: boolean isApplicationUid(int)> to <android.os.Process: boolean isApplicationUid(int)>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <android.view.View: void setTransitionAlpha(float)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setTransitionAlpha(android.view.View,float)>[]--><android.view.View: void setTransitionAlpha(float)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setTransitionAlpha(android.view.View,float)> to <android.view.View: void setTransitionAlpha(float)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.transition.ViewUtilsApi19: void setTransitionAlpha(android.view.View,float)>[[try]]--><android.view.View: void setTransitionAlpha(float)>
One road protect good!
crashApis:38
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.CharSequence getSettingsText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: java.lang.CharSequence getSettingsText(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.CharSequence getSettingsText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)> is checking!!!
The life time of api is [23,31]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-$i1 < 25]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
-$i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-$i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[[]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-$i1 < 23]]--><android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.view.View: int getScrollIndicators()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)>[[-$i0 < 23]]--><android.view.View: int getScrollIndicators()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphCount()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)>[]--><androidx.core.text.PrecomputedTextCompat: int getParagraphCount()>[[-$i0 < 29]]--><android.text.PrecomputedText: int getParagraphCount()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)>[]--><androidx.core.text.PrecomputedTextCompat: int getParagraphCount()>[[-$i0 < 29]]--><android.text.PrecomputedText: int getParagraphCount()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <android.widget.AutoCompleteTextView: void refreshAutoCompleteResults()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setBot(boolean)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)> is checking!!!
The life time of api is [28,31]
10call roads:
0 Mainhead roads:
10 Packageshead roads:
-$i2 < 29
Good road: <androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-$i0 < 19], [-$i0 >= 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-$i0 < 19]][[-$i0 >= 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
-$i0 < 19
-$i0 >= 26
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-$i0 < 19], [-$i0 >= 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$4: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
$yysi0 < 28
$yysi0 < 28
-$i2 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[$yysi0 < 28]]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <com.google.android.material.bottomsheet.BottomSheetDialog$2: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#2.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#3.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
crashApis:39
crashApisInMain:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: android.content.Intent getIntent()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#2.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> is checking!!!
The life time of api is [26,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getTitle()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getTitle()>has compatibility isssues！
-----------------------------------------
crashApis:42
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getPinnedShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30]][[-$i1 < 25]]
$i0 < 25
$i1 < 30
-$i1 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]--><android.content.pm.ShortcutManager: java.util.List getPinnedShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtection()> is checking!!!
The life time of api is [28,31]
7call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean backup(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$BackupOp: boolean runBackup()>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$BackupOp: void backupPermissions()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
6 Packageshead roads:
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$8Ez1umyH9hAGcB1A8puCXhqGLag(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadUsesPermissions()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$15$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean ignoreDangerousAppOps()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getUsesPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getAppOpsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getBasePermissionType(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
4call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: int onStartCommand(android.content.Intent,int,int)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void createNotificationChannel()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
3 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void access$400(io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void sendNotification(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <android.view.Window: void setDecorFitsSystemWindows(boolean)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowCompat$Impl30: void setDecorFitsSystemWindows(android.view.Window,boolean)>[]--><android.view.Window: void setDecorFitsSystemWindows(boolean)>
#1.the call statck between class <androidx.core.view.WindowCompat$Impl30: void setDecorFitsSystemWindows(android.view.Window,boolean)> to <android.view.Window: void setDecorFitsSystemWindows(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#2.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: int getDisabledReason()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[-$i0 < 28]]--><android.content.pm.ShortcutInfo: int getDisabledReason()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <android.location.GnssStatus: boolean hasAlmanacData(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: boolean hasAlmanacData(int)>[]--><android.location.GnssStatus: boolean hasAlmanacData(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: boolean hasAlmanacData(int)> to <android.location.GnssStatus: boolean hasAlmanacData(int)>has compatibility isssues！
-----------------------------------------
crashApis:45
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <android.location.GnssStatus: int getSvid(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: int getSvid(int)>[]--><android.location.GnssStatus: int getSvid(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: int getSvid(int)> to <android.location.GnssStatus: int getSvid(int)>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
$i0 < 29
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo)>[[$i0 < 29]]--><android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewRemoved(android.view.View)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i0 >= 14
-$i0 < 14
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onSelectionChanged(int)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)>[]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#2.the call statck between class <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
-$i0 >= 14
-$i0 < 14
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onActionUp(float,boolean)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
-$i0 < 14
!!!this api will crash on sdk 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
!!!this api will crash on sdk 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)>[[]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#4.the call statck between class <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
-$i0 >= 14
-$i0 < 14
Good road: <com.google.android.material.timepicker.MaterialTimePicker: void access$300(com.google.android.material.timepicker.MaterialTimePicker,com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: com.google.android.material.timepicker.TimePickerPresenter initializeOrRetrieveActivePresenterForMode(int)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void <init>(com.google.android.material.timepicker.TimePickerView,com.google.android.material.timepicker.TimeModel)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void initialize()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void invalidate()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
-$i0 >= 14
-$i0 < 14
Good road: <com.google.android.material.timepicker.MaterialTimePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: com.google.android.material.timepicker.TimePickerPresenter initializeOrRetrieveActivePresenterForMode(int)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void <init>(com.google.android.material.timepicker.TimePickerView,com.google.android.material.timepicker.TimeModel)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void initialize()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void invalidate()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.transition.GhostViewHolder: void onViewRemoved(android.view.View)>[]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#7.the call statck between class <androidx.transition.GhostViewHolder: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:49
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <android.view.View: void transformMatrixToLocal(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)> to <android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.transition.ViewUtilsApi21: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>
One road protect good!
crashApis:50
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <android.widget.TextView: boolean setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()>[[$i0 >= 24]]--><android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)>[[-$i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[[try]]--><androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)>[[-$i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <android.view.FrameMetrics: long getMetric(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>[]--><android.view.FrameMetrics: long getMetric(int)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)> to <android.view.FrameMetrics: long getMetric(int)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.util.Set getCategories()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: java.util.Set getCategories()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.util.Set getCategories()>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getTooltipText()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getTooltipText()>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)> is checking!!!
The life time of api is [29,31]
3call roads:
1 Mainhead roads:
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.usage.AppUsageActivity dummyMainMethod_io_github_muntashirakon_AppManager_usage_AppUsageActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onStart()>[]--><io.github.muntashirakon.AppManager.utils.Utils: boolean checkUsageStatsPermission(android.content.Context)>[[-$i0 < 29]]--><android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)>
One road protect good!
2 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26]]--><io.github.muntashirakon.AppManager.utils.Utils: boolean checkUsageStatsPermission(android.content.Context)>[[-$i0 < 29]]--><android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.utils.Utils: boolean checkUsageStatsPermission(android.content.Context)>[[-$i0 < 29]]--><android.app.AppOpsManager: int unsafeCheckOpNoThrow(java.lang.String,int,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#2.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#3.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
crashApis:56
crashApisInMain:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void enableShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void enableShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void enableShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [23,31]
17call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
$i0 < 30
$i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
$i0 < 30
$i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
$i0 < 30
$i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
16 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i0 < 24
-$i0 < 28
$i0 < 30
$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
$i0 < 30
$i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#3.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
$i0 < 30
$i0 < 26
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#4.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i1 < 28
$i0 < 30
$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i0 < 23
$i0 < 30
$i0 < 26
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i0 < 23
$i0 < 30
$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i0 < 26
-$i0 < 29
$i0 < 30
$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[$i0 < 26]]
-$i0 < 25
-$i0 < 29
$i0 < 30
$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
crashApis:57
crashApisInMain:5
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <android.location.GnssStatus: int getConstellationType(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: int getConstellationType(int)>[]--><android.location.GnssStatus: int getConstellationType(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: int getConstellationType(int)> to <android.location.GnssStatus: int getConstellationType(int)>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <android.app.Person: boolean isImportant()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <android.app.Notification.Action: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[-$i0 < 23]]--><android.app.Notification.Action: android.graphics.drawable.Icon getIcon()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28]][[-$i1 < 23]][[$i1 < 29]][[$i0 < 24]]
$i0 < 28
-$i1 < 23
$i1 < 29
$i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><android.app.Notification.Action: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 16
Good road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[$i0 < 16]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [25,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannels(java.util.List)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannels(java.util.List)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannels(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <android.database.CursorWindow: void <init>(java.lang.String,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)>[[-$i1 < 28]]--><android.database.CursorWindow: void <init>(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 188 Potential Issue API: SDKCheck of <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 189 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 190 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:61
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 191 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void setVisibility(int)> is checking!!!
The life time of api is [21,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 192 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: boolean isActiveNetworkMetered()> is checking!!!
The life time of api is [16,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 16
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[-$i0 < 16]]--><android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: boolean isActiveNetworkMetered()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 193 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeLongLivedShortcuts(java.util.List)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)>[[$i0 >= 30]]--><android.content.pm.ShortcutManager: void removeLongLivedShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 194 Potential Issue API: SDKCheck of <android.widget.TextView: void setFirstBaselineToTopHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>[[-$i1 < 28]]--><android.widget.TextView: void setFirstBaselineToTopHeight(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 195 Potential Issue API: SDKCheck of <android.app.NotificationChannel: java.lang.String getId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 26]]--><android.app.NotificationChannel: java.lang.String getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 196 Potential Issue API: SDKCheck of <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 197 Potential Issue API: SDKCheck of <android.location.LocationManager: void unregisterGnssStatusCallback(android.location.GnssStatus.Callback)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.location.LocationManagerCompat: void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24]][[try]]
-$i0 < 24
try
Good road with try: <androidx.core.location.LocationManagerCompat: void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>[[-$i0 < 24], [try]]--><android.location.LocationManager: void unregisterGnssStatusCallback(android.location.GnssStatus.Callback)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 198 Potential Issue API: SDKCheck of <android.os.Trace: void endAsyncSection(java.lang.String,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.os.TraceCompat: void endAsyncSection(java.lang.String,int)>[[-$i1 < 29]]--><android.os.Trace: void endAsyncSection(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 199 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
One road protect good!
crashApis:63
crashApisInMain:6
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 200 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.CharSequence)>[]--><android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:64
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 201 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 202 Potential Issue API: SDKCheck of <android.print.PrintAttributes: int getDuplexMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes: int getDuplexMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 203 Potential Issue API: SDKCheck of <android.os.LocaleList: int size()> is checking!!!
The life time of api is [24,31]
362call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
361 Packageshead roads:
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setHeaders()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackageInfo(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$ph2nE4-bTTKCkQxzvuop9f25jCo(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadActivities()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$v63q8U_cEAA8IEuprQCgicJKkSc(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadServices()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uSmbktTUxw_dkJNjGV9le_y9_g0(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadReceivers()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$10$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.List blockTrackingComponents(java.util.Collection,int)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackage(java.lang.String)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppCacheDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onCreate$2$MainActivity(android.view.View,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void checkAppUpdate()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
-$yysi0 < 29
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[[-$yysi0 < 29]]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void onCleared()>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void access$100(io.github.muntashirakon.AppManager.usage.AppUsageActivity)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: int size()>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int size()>[]--><androidx.core.os.LocaleListPlatformWrapper: int size()>[]--><android.os.LocaleList: int size()>
#188.the call statck between class <androidx.core.os.LocaleListCompat: int size()> to <android.os.LocaleList: int size()>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:true
containsTry:true
189call by main package
-----------------------------------------
#################################################
N 204 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean getAllowGeneratedReplies()> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]]
$i0 < 23
$i0 < 20
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24]]--><android.app.Notification.Action: boolean getAllowGeneratedReplies()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-$i0 < 24]]--><android.app.Notification.Action: boolean getAllowGeneratedReplies()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 205 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableLights(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 206 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()> is checking!!!
The life time of api is [24,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 207 Potential Issue API: SDKCheck of <android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
$i0 < 23
-$i0 < 23
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onActionUp(float,boolean)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[$i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
$i0 < 23
-$i0 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker: void access$300(com.google.android.material.timepicker.MaterialTimePicker,com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerTextInputPresenter: void hide()>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[$i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
$i0 < 23
-$i0 < 23
Good road: <com.google.android.material.timepicker.MaterialTimePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerTextInputPresenter: void hide()>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[$i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 208 Potential Issue API: SDKCheck of <android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)>[[-$i0 < 24]]--><android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 209 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-$i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 210 Potential Issue API: SDKCheck of <android.graphics.Path: float[] approximate(float)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)>[]--><androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>[]--><android.graphics.Path: float[] approximate(float)>
#1.the call statck between class <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)> to <android.graphics.Path: float[] approximate(float)>has compatibility isssues！
-----------------------------------------
crashApis:66
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 211 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
10call roads:
0 Mainhead roads:
10 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)>[]--><androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#3.the call statck between class <androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)>[]--><androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)>[]--><androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#4.the call statck between class <androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#5.the call statck between class <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])>[]--><androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#6.the call statck between class <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#7.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]]--><androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>[]--><androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#9.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: boolean getUsesChronometer(android.app.Notification)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20]][[-$i0 < 16]]
$i0 < 20
-$i0 < 16
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 26], [$i2 < 21], [$i1 < 28], [-$yysi0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 26]][[$i2 < 21]][[$i1 < 28]][[-$yysi0 < 29]]
-$z0 == 0
-$i1 < 26
$i2 < 21
$i1 < 28
-$yysi0 < 29
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 26], [$i2 < 21], [$i1 < 28], [-$yysi0 < 29]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 
Error road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: boolean getShowWhen(android.app.Notification)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>[[$i0 < 20]][[-$i0 < 16]]
$i0 < 20
-$i0 < 16
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>[[$i0 < 20], [-$i0 < 16]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
#10.the call statck between class <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 212 Potential Issue API: SDKCheck of <android.view.View: boolean isKeyboardNavigationCluster()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isKeyboardNavigationCluster()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 213 Potential Issue API: SDKCheck of <android.view.Display: android.view.Display.Mode getMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23]][[$i0 >= 28]]
-$i0 < 23
$i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]--><android.view.Display: android.view.Display.Mode getMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 214 Potential Issue API: SDKCheck of <android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 215 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isCached()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[-$i0 < 30], [$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[-$i0 < 30]][[$i0 < 28]]
-$i0 < 30
$i0 < 28
Good road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[-$i0 < 30], [$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isCached()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 216 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)> to <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 217 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 218 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 219 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)> is checking!!!
The life time of api is [25,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 220 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
38call roads:
0 Mainhead roads:
38 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.transition.platform.MaterialElevationScale: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><com.google.android.material.transition.platform.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialElevationScale: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>[]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>[]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()>[]--><android.animation.AnimatorSet: void <init>()>
#2.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.textfield.ClearTextEndIconDelegate: void initialize()>[]--><com.google.android.material.textfield.ClearTextEndIconDelegate: void initAnimators()>[]--><android.animation.AnimatorSet: void <init>()>
#3.the call statck between class <com.google.android.material.textfield.ClearTextEndIconDelegate: void initialize()> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float)>[[-$i0 < 21]]--><android.animation.AnimatorSet: void <init>()>
#4.the call statck between class <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
#5.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.transition.MaterialFadeThrough: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
#7.the call statck between class <com.google.android.material.transition.MaterialFadeThrough: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.transformation.FabTransformationBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
#8.the call statck between class <com.google.android.material.transformation.FabTransformationBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>[]--><android.animation.AnimatorSet: void <init>()>
#9.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.transition.MaterialFade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><com.google.android.material.transition.MaterialVisibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean)>[]--><android.animation.AnimatorSet: void <init>()>
#10.the call statck between class <com.google.android.material.transition.MaterialFade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 221 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)>[[-$i1 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 222 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[$i0 < 26]]
-$i0 < 24
$i0 < 26
!!!this api will crash on sdk 24 25 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 26]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:71
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 223 Potential Issue API: SDKCheck of <android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 23
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[[-$i0 < 26]]--><android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 224 Potential Issue API: SDKCheck of <android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()> is checking!!!
The life time of api is [28,31]
6call roads:
1 Mainhead roads:
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: boolean runRestore()>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void restoreSource()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
5 Packageshead roads:
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$000(io.github.muntashirakon.AppManager.main.MainViewModel,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForUid(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$100(io.github.muntashirakon.AppManager.main.MainViewModel,java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$Iv_0L6-gFIWt618T3hONedO1Mww(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadSignatures()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 225 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#2.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#3.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
crashApis:72
crashApisInMain:7
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 226 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createDeviceProtectedStorageContext()> is checking!!!
The life time of api is [24,31]
34call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.SettingsActivity dummyMainMethod_io_github_muntashirakon_AppManager_settings_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.MainPreferences dummyMainMethod_io_github_muntashirakon_AppManager_settings_MainPreferences(android.content.Intent,android.app.Activity)>[]--><androidx.preference.PreferenceFragmentCompat: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.settings.MainPreferences: void onCreatePreferences(android.os.Bundle,java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
33 Packageshead roads:
-$i0 < 24
Good road: <androidx.preference.Preference: boolean persistLong(long)>[]--><androidx.preference.Preference: long getPersistedLong(long)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void setValueIndex(int)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <com.topjohnwu.superuser.internal.Utils: android.content.Context getDeContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreferenceDialogFragment: void onDialogClosed(boolean)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>[]--><androidx.preference.SeekBarPreference: void syncValueInternal(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreferenceDialogFragment: void onDialogClosed(boolean)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreferenceCompat$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragment: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void addPreferencesFromResource(int)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onClick()>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference$1: void onStopTrackingTouch(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void syncValueInternal(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.SeekBarPreference: void setValue(int)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.DropDownPreference$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.CheckBoxPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.Preference: boolean persistFloat(float)>[]--><androidx.preference.Preference: float getPersistedFloat(float)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreferenceDialogFragment: void onDialogClosed(boolean)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.DropDownPreference: void setValueIndex(int)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>[]--><androidx.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
containsStatic:false
containsTry:true
34call by main package
-----------------------------------------
#################################################
N 227 Potential Issue API: SDKCheck of <android.app.usage.UsageEvents.Event: void <init>()> is checking!!!
The life time of api is [26,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.usage.AppUsageStatsManager$PackageUS getUsageStatsForPackage(java.lang.String,int)>[]--><android.app.usage.UsageEvents.Event: void <init>()>
#7.the call statck between class <io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.usage.AppUsageStatsManager$PackageUS getUsageStatsForPackage(java.lang.String,int)> to <android.app.usage.UsageEvents.Event: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 228 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)> is checking!!!
The life time of api is [28,31]
380call roads:
1 Mainhead roads:
379 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[-$z0 == 0], [$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[-$z0 == 0]][[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]
$yysi0 < 28
-$z0 == 0
$yysi0 < 28
-$i3 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[-$z0 == 0], [$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.RangeSlider: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.BaseSlider: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.BaseSlider: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
$yysi0 < 28
-$i3 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.BaseSlider$AccessibilityHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getReceiverView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getAppOpsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void onBindViewHolder(io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.textfield.MaterialAutoCompleteTextView: void onMeasure(int,int)>[]--><com.google.android.material.textfield.MaterialAutoCompleteTextView: int measureContentWidth()>[]--><io.github.muntashirakon.AppManager.profiles.ProfilesActivity$ProfilesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getUsesPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.RangeSlider: void setFocusedThumbIndex(int)>[]--><com.google.android.material.slider.BaseSlider: void setFocusedThumbIndex(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()>[]--><androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip$ChipTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.main.MainRecyclerAdapter: void onBindViewHolder(io.github.muntashirakon.AppManager.main.MainRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getProviderView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.slider.BaseSlider$AccessibilityEventSender: void run()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.Slider: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getActivityView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getServicesView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: android.text.Spannable getHighlightedText(java.lang.String,java.lang.String,int)>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.slider.Slider: void setFocusedThumbIndex(int)>[]--><com.google.android.material.slider.BaseSlider: void setFocusedThumbIndex(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
containsStatic:true
containsTry:true
380call by main package
-----------------------------------------
#################################################
N 229 Potential Issue API: SDKCheck of <android.view.View: boolean isFocusedByDefault()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isFocusedByDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 230 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
$i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 231 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)> is checking!!!
The life time of api is [28,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[$i0 < 24]][[-$i0 < 28]]
-$i0 < 20
$i1 < 23
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[$i0 < 24]][[-$i0 < 28]]
-$i0 < 20
$i1 < 23
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[$i0 < 24]][[-$i0 < 28]]
-$i0 < 20
$i1 < 23
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[$i0 < 24]][[-$i0 < 28]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 232 Potential Issue API: SDKCheck of <android.view.View: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isScreenReaderFocusable()>
#1.the call statck between class <androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>has compatibility isssues！
-----------------------------------------
crashApis:74
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 233 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats: boolean hasNextBucket()> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats: boolean hasNextBucket()>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 234 Potential Issue API: SDKCheck of <android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)>[[-$i0 < 28]]--><android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 235 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)> is checking!!!
The life time of api is [23,30]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 236 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.widget.RemoteViews createHeadsUpContentView()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24], [$i0 >= 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24]][[$i0 >= 21]]
-$i0 < 24
$i0 >= 21
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()>[[-$i0 < 24], [$i0 >= 21]]--><android.app.Notification.Builder: android.widget.RemoteViews createHeadsUpContentView()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 237 Potential Issue API: SDKCheck of <android.view.View: void setAutofillHints(java.lang.String[])> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])>[[-$i0 < 26]]--><android.view.View: void setAutofillHints(java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 238 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void releasePermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()>[]--><android.view.inputmethod.InputContentInfo: void releasePermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()> to <android.view.inputmethod.InputContentInfo: void releasePermission()>has compatibility isssues！
-----------------------------------------
crashApis:75
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 239 Potential Issue API: SDKCheck of <android.graphics.Canvas: void disableZ()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21], [-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21]][[-$i0 < 29]]
$i0 >= 21
-$i0 < 29
Good road: <androidx.transition.GhostViewPort: void onDraw(android.graphics.Canvas)>[]--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21], [-$i0 < 29]]--><android.graphics.Canvas: void disableZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 240 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getDefault()> is checking!!!
The life time of api is [24,31]
355call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity dummyMainMethod_io_github_muntashirakon_AppManager_runningapps_RunningAppsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity dummyMainMethod_io_github_muntashirakon_AppManager_oneclickops_OneClickOpsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: java.util.Locale getLocaleByLanguage()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity dummyMainMethod_io_github_muntashirakon_AppManager_sharedpref_SharedPrefsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: java.util.Locale getLocaleByLanguage()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
354 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
-$i0 < 24
-$i0 < 24
Good road: <io.github.muntashirakon.AppManager.BaseActivity: void attachBaseContext(android.content.Context)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context attachBaseContext(android.content.Context)>[[-$i0 < 24]]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context updateResources(android.content.Context)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: java.util.Locale getLocaleByLanguage()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
containsStatic:true
containsTry:true
355call by main package
-----------------------------------------
#################################################
N 241 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>[[-$i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 242 Potential Issue API: SDKCheck of <android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi21: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)> to <android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
crashApis:76
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 243 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 244 Potential Issue API: SDKCheck of <android.graphics.Color: float alpha()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float alpha()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float alpha()>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 245 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEpicenterBounds(android.graphics.Rect)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 246 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
crashApis:78
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 247 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)> is checking!!!
The life time of api is [29,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 248 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 249 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>
#1.the call statck between class <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)> to <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 250 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30]][[-$i1 < 25]]
$i0 < 25
$i1 < 30
-$i1 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]--><android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 251 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()> to <android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()>has compatibility isssues！
-----------------------------------------
crashApis:80
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 252 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setShowBadge(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setShowBadge(boolean)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setShowBadge(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 253 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>has compatibility isssues！
-----------------------------------------
crashApis:81
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 254 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [24,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-$i0 < 25
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-$i0 < 26
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
$i0 > 29
-$i0 < 25
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
-$i1 < 25
$i1 > 29
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]
$i0 > 29
-$i0 < 25
$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 255 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void pushDynamicShortcut(android.content.pm.ShortcutInfo)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 > 29], [-$i1 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 > 29]][[-$i1 < 30]]
$i1 > 29
-$i1 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 > 29], [-$i1 < 30]]--><android.content.pm.ShortcutManager: void pushDynamicShortcut(android.content.pm.ShortcutInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 256 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 257 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 258 Potential Issue API: SDKCheck of <android.graphics.BlendModeColorFilter: void <init>(int,android.graphics.BlendMode)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void access$000(android.view.Window)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void removeWindowBackground(android.view.Window)>[]--><androidx.core.graphics.BlendModeColorFilterCompat: android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat)>[[-$i1 < 29]]--><android.graphics.BlendModeColorFilter: void <init>(int,android.graphics.BlendMode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 259 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSettingsText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setSettingsText(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setSettingsText(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setSettingsText(java.lang.CharSequence)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setSettingsText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 260 Potential Issue API: SDKCheck of <android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.viewpager2.widget.ViewPager2$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>[]--><android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)> to <android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>has compatibility isssues！
-----------------------------------------
-$i0 < 24
Good road: <androidx.viewpager2.widget.ViewPager2$SavedState$1: androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>[[-$i0 < 24]]--><android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
One road protect good!
crashApis:82
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 261 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.chip.Chip: void setTextAppearance(int)>[]--><android.widget.TextView: void setTextAppearance(int)>
#3.the call statck between class <com.google.android.material.chip.Chip: void setTextAppearance(int)> to <android.widget.TextView: void setTextAppearance(int)>has compatibility isssues！
-----------------------------------------
-$i1 < 23
Good road: <com.google.android.material.tabs.TabLayout$TabView: void update()>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
$i0 < 17
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void setItemTextAppearanceActive(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemTextAppearanceActive(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceActive(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
crashApis:83
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 262 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)> is checking!!!
The life time of api is [25,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 263 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
One road protect good!
crashApis:84
crashApisInMain:8
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 264 Potential Issue API: SDKCheck of <android.view.View: void setAnimationMatrix(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setAnimationMatrix(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setAnimationMatrix(android.view.View,android.graphics.Matrix)> to <android.view.View: void setAnimationMatrix(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.transition.ViewUtilsApi21: void setAnimationMatrix(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
One road protect good!
crashApis:85
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 265 Potential Issue API: SDKCheck of <android.widget.TextView: void setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23], [$i0 < 18]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23]][[$i0 < 18]]
$i0 >= 23
$i0 < 18
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 >= 23], [$i0 < 18]]--><android.widget.TextView: void setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 266 Potential Issue API: SDKCheck of <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)> is checking!!!
The life time of api is [29,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.SettingsActivity dummyMainMethod_io_github_muntashirakon_AppManager_settings_SettingsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.settings.SettingsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity dummyMainMethod_io_github_muntashirakon_AppManager_sharedpref_SharedPrefsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.usage.AppUsageActivity dummyMainMethod_io_github_muntashirakon_AppManager_usage_AppUsageActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassViewerActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.details.ClassViewerActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.main.MainActivity dummyMainMethod_io_github_muntashirakon_AppManager_main_MainActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.ProfilesActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_ProfilesActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.profiles.ProfilesActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.AppDetailsActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_AppDetailsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity dummyMainMethod_io_github_muntashirakon_AppManager_runningapps_RunningAppsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.crypto.OpenPGPCryptoActivity dummyMainMethod_io_github_muntashirakon_AppManager_crypto_OpenPGPCryptoActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCryptoActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity dummyMainMethod_io_github_muntashirakon_AppManager_oneclickops_OneClickOpsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ManifestViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ManifestViewerActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.details.ManifestViewerActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassListingActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassListingActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.misc.AlertDialogActivity dummyMainMethod_io_github_muntashirakon_AppManager_misc_AlertDialogActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.misc.AlertDialogActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.AppsProfileActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_AppsProfileActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.profiles.AppsProfileActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[]--><androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:86
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 267 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 268 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 269 Potential Issue API: SDKCheck of <android.view.View: boolean restoreDefaultFocus()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean restoreDefaultFocus()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 270 Potential Issue API: SDKCheck of <android.view.View: int getNextClusterForwardId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getNextClusterForwardId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 271 Potential Issue API: SDKCheck of <android.location.GnssStatus: float getCn0DbHz(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: float getCn0DbHz(int)>[]--><android.location.GnssStatus: float getCn0DbHz(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: float getCn0DbHz(int)> to <android.location.GnssStatus: float getCn0DbHz(int)>has compatibility isssues！
-----------------------------------------
crashApis:88
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 272 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)> is checking!!!
The life time of api is [29,31]
4call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
-$i0 < 20
$i1 < 23
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
-$i0 < 20
$i1 < 23
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
-$i0 < 20
$i1 < 23
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26]][[-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
$i0 < 26
-$i1 < 20
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-$i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
-$i1 < 20
-$i0 < 29
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-$i1 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
$i0 < 23
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 273 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 >= 30
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)>[[-$i0 >= 30]]--><androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30]][[-$i1 < 25]][[$i1 > 29]]
$i1 < 30
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]--><android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 274 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)> is checking!!!
The life time of api is [24,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 275 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLightColor(int)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 276 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: int getScaledHoverSlop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>[[-$i0 < 28]]--><android.view.ViewConfiguration: int getScaledHoverSlop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 277 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>[[]]--><android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>has compatibility isssues！
-----------------------------------------
crashApis:89
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 278 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:90
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 279 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 280 Potential Issue API: SDKCheck of <android.view.View: void setFocusedByDefault(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setFocusedByDefault(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 281 Potential Issue API: SDKCheck of <android.view.View: void setForeground(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#1.the call statck between class <com.google.android.material.card.MaterialCardView: void setClickable(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void setCornerRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#2.the call statck between class <com.google.android.material.card.MaterialCardView: void setRadius(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#3.the call statck between class <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#4.the call statck between class <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#5.the call statck between class <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$yysi0 >= 18
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void removeBadge(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void removeBadge(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void removeBadge()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryRemoveBadgeFromAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 >= 18
Good road: <com.google.android.material.tabs.TabLayout$TabView: void tryAttachBadgeToAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#8.the call statck between class <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$yysi0 >= 18
Good road: <com.google.android.material.bottomnavigation.BottomNavigationPresenter: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeDrawables(android.util.SparseArray)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryAttachBadgeToAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 >= 18
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void removeBadge()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryRemoveBadgeFromAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
crashApis:91
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 282 Potential Issue API: SDKCheck of <android.content.LocusId: java.lang.String getId()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.content.LocusIdCompat$Api29Impl: java.lang.String getId(android.content.LocusId)>[]--><android.content.LocusId: java.lang.String getId()>
#1.the call statck between class <androidx.core.content.LocusIdCompat$Api29Impl: java.lang.String getId(android.content.LocusId)> to <android.content.LocusId: java.lang.String getId()>has compatibility isssues！
-----------------------------------------
crashApis:92
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 283 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace getColorSpace()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace getColorSpace()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 284 Potential Issue API: SDKCheck of <android.view.View: int getImportantForAutofill()> is checking!!!
The life time of api is [26,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 285 Potential Issue API: SDKCheck of <android.view.View: void cancelDragAndDrop()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)>[[-$i0 < 24]]--><android.view.View: void cancelDragAndDrop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 286 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: int getRegionCount()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: int getRegionCount()>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: int getRegionCount()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 287 Potential Issue API: SDKCheck of <android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>[[-$i1 < 26]]--><android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 288 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 289 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 290 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 291 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 292 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <com.google.android.material.snackbar.Snackbar: int getDuration()>[[-$i1 < 29]]--><android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 293 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
One road protect good!
crashApis:94
crashApisInMain:10
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 294 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>[[-$i0 < 23]]--><android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 295 Potential Issue API: SDKCheck of <android.location.GnssStatus: boolean usedInFix(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: boolean usedInFix(int)>[]--><android.location.GnssStatus: boolean usedInFix(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: boolean usedInFix(int)> to <android.location.GnssStatus: boolean usedInFix(int)>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 296 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtectionFlags()> is checking!!!
The life time of api is [28,31]
5call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean backup(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$BackupOp: boolean runBackup()>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$BackupOp: void backupPermissions()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getProtectionLevel(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
4 Packageshead roads:
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getProtectionLevel(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getUsesPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getProtectionLevel(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getAppOpsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><io.github.muntashirakon.AppManager.utils.Utils: java.lang.String getProtectionLevelString(android.content.pm.PermissionInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: int getProtectionLevel(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 297 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewAdded(android.view.View)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <androidx.constraintlayout.motion.widget.MotionLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: boolean updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[[]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 < 14
!!!this api will crash on sdk 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
!!!this api will crash on sdk 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)>[[]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
#2.the call statck between class <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)> to <android.view.ViewGroup: void onViewAdded(android.view.View)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.transition.GhostViewHolder: void onViewAdded(android.view.View)>[]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
#3.the call statck between class <androidx.transition.GhostViewHolder: void onViewAdded(android.view.View)> to <android.view.ViewGroup: void onViewAdded(android.view.View)>has compatibility isssues！
-----------------------------------------
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
-$i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-$i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
crashApis:96
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 298 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
One road protect good!
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 299 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getAdjustedDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 300 Potential Issue API: SDKCheck of <android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$CompatImplApi28: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[]--><android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
#1.the call statck between class <androidx.core.view.ViewCompat$CompatImplApi28: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)> to <android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 301 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 302 Potential Issue API: SDKCheck of <android.view.View: void setStateDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)>[]--><android.view.View: void setStateDescription(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)> to <android.view.View: void setStateDescription(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 303 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 304 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[[try]]--><android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 305 Potential Issue API: SDKCheck of <android.util.ArraySet: boolean remove(java.lang.Object)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet remove(android.util.ArraySet,java.lang.Object)>[]--><android.util.ArraySet: boolean remove(java.lang.Object)>
#1.the call statck between class <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet remove(android.util.ArraySet,java.lang.Object)> to <android.util.ArraySet: boolean remove(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:99
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 306 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats.Bucket: long getTxBytes()> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats.Bucket: long getTxBytes()>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 307 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 308 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean isLocationEnabled()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>[[-$i0 < 28]]--><android.location.LocationManager: boolean isLocationEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 309 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: java.lang.String getResPackage()> is checking!!!
The life time of api is [28,31]
23call roads:
1 Mainhead roads:
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
22 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$i0 < 24
-$i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i1 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
$i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$yysi0 < 26], [$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$yysi0 < 26]][[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$yysi0 < 26
$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$yysi0 < 26], [$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 26
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 25
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 26
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 > 29
-$i0 < 25
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28]][[-$i1 < 23]][[$i1 < 29]][[$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 < 28
-$i1 < 23
$i1 < 29
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$i1 < 25
$i1 > 29
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 > 29
-$i0 < 25
-$i0 < 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
containsStatic:true
containsTry:true
23call by main package
-----------------------------------------
#################################################
N 310 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getBreakStrategy()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getBreakStrategy()>
#1.the call statck between class <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)> to <android.text.PrecomputedText.Params: int getBreakStrategy()>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 311 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 312 Potential Issue API: SDKCheck of <android.app.Notification: long getTimeoutAfter()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)>[[-$i1 < 26]]--><android.app.Notification: long getTimeoutAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 313 Potential Issue API: SDKCheck of <android.app.NotificationChannel: java.lang.String getParentChannelId()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 30]][[-$i0 < 26]]
-$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>[[-$i0 < 30], [-$i0 < 26]]--><android.app.NotificationChannel: java.lang.String getParentChannelId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 314 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)>[]--><androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 315 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)>[[-$i4 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 316 Potential Issue API: SDKCheck of <android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)>[]--><androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)>[[-$i0 < 24]]--><android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 317 Potential Issue API: SDKCheck of <android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>[[-$i1 < 26]]--><android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 318 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 319 Potential Issue API: SDKCheck of <android.view.View: float getTransitionAlpha()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi19: float getTransitionAlpha(android.view.View)>[[try]]--><android.view.View: float getTransitionAlpha()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: float getTransitionAlpha(android.view.View)>[]--><android.view.View: float getTransitionAlpha()>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: float getTransitionAlpha(android.view.View)> to <android.view.View: float getTransitionAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:102
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 320 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
One road protect good!
crashApis:103
crashApisInMain:11
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 321 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isImmutable()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isImmutable()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean isImmutable()>has compatibility isssues！
-----------------------------------------
crashApis:104
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 322 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void removeSpan(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 28
$yysi0 < 28
-$i0 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: void pruneOverlaps(java.util.ArrayList,android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>[[-$i0 < 29]]--><android.text.PrecomputedText: void removeSpan(java.lang.Object)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 323 Potential Issue API: SDKCheck of <android.app.Notification: android.content.LocusId getLocusId()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: androidx.core.content.LocusIdCompat getLocusId(android.app.Notification)>[[-$i0 < 29]]--><android.app.Notification: android.content.LocusId getLocusId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 324 Potential Issue API: SDKCheck of <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 19
Good road: <androidx.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)>[]--><androidx.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>[]--><androidx.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)>[[$yysi0 < 19]]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 325 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetBottom()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)>[]--><androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetBottom()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 326 Potential Issue API: SDKCheck of <android.app.Activity: void setLocusContext(android.content.LocusId,android.os.Bundle)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.app.ActivityCompat$Api30Impl: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)>[]--><android.app.Activity: void setLocusContext(android.content.LocusId,android.os.Bundle)>
#1.the call statck between class <androidx.core.app.ActivityCompat$Api30Impl: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)> to <android.app.Activity: void setLocusContext(android.content.LocusId,android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:105
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 327 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getType()> is checking!!!
The life time of api is [28,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>[]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28]][[-$i1 < 23]][[$i1 < 29]][[$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 < 28
-$i1 < 23
$i1 < 29
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
$i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
containsStatic:true
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 328 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void <init>()> is checking!!!
The life time of api is [22,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[$i0 != 21]]--><android.animation.StateListAnimator: void <init>()>
One road protect good!
-$i0 < 21
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#2.the call statck between class <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [-$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[-$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
$i0 < 21
-$i1 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [-$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
One road protect good!
crashApis:106
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 329 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setShouldShowIcon(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[[-$i0 < 28]]--><android.app.RemoteAction: void setShouldShowIcon(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 330 Potential Issue API: SDKCheck of <android.view.DisplayCutout: android.graphics.Insets getWaterfallInsets()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 >= 30
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()>[[-$yysi0 >= 30]]--><android.view.DisplayCutout: android.graphics.Insets getWaterfallInsets()>
#1.the call statck between class <androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()> to <android.view.DisplayCutout: android.graphics.Insets getWaterfallInsets()>has compatibility isssues！
-----------------------------------------
crashApis:107
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 331 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.widget.RemoteViews createBigContentView()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24], [$i0 >= 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24]][[$i0 >= 16]]
-$i0 < 24
$i0 >= 16
Good road: <androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()>[[-$i0 < 24], [$i0 >= 16]]--><android.app.Notification.Builder: android.widget.RemoteViews createBigContentView()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 332 Potential Issue API: SDKCheck of <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 333 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)>[[-$i0 < 24]]--><android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 334 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int mandatorySystemGestures()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int mandatorySystemGestures()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int mandatorySystemGestures()>has compatibility isssues！
-----------------------------------------
crashApis:108
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 335 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 336 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#2.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#3.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
crashApis:109
crashApisInMain:12
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 337 Potential Issue API: SDKCheck of <android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>[[-$i0 < 24]]--><android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 338 Potential Issue API: SDKCheck of <android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 339 Potential Issue API: SDKCheck of <android.app.Dialog: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)>[[-$i0 < 28]]--><android.app.Dialog: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 340 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
One road protect good!
crashApis:110
crashApisInMain:13
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 341 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 342 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addHistoricMessage(android.app.Notification.MessagingStyle.Message)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[$i0 < 28]][[-$i0 < 26]]
-$i0 < 24
$i0 < 28
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28], [-$i0 < 26]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addHistoricMessage(android.app.Notification.MessagingStyle.Message)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 343 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>has compatibility isssues！
-----------------------------------------
crashApis:111
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 344 Potential Issue API: SDKCheck of <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)> is checking!!!
The life time of api is [4,26]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: void runReset(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#1.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: void runReset(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: void runSet(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#2.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: void runSet(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <io.github.muntashirakon.AppManager.server.ServerHandler: void onMessage(byte[])>[[try]]--><io.github.muntashirakon.AppManager.server.ServerHandler: io.github.muntashirakon.AppManager.server.common.CallerResult callServiceMethod(io.github.muntashirakon.AppManager.server.common.SystemServiceCaller)>[[try]]--><io.github.muntashirakon.AppManager.server.ServerHandler: void findFromService(io.github.muntashirakon.AppManager.server.common.SystemServiceCaller)>[[try]]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runGet(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#4.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runGet(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.UserHandler: android.os.Bundle proxyInvoke(android.os.Bundle)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#5.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.UserHandler: android.os.Bundle proxyInvoke(android.os.Bundle)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runGetForOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#6.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runGetForOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 27 28 29 30 31 
Error road: <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runCheck(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
#7.the call statck between class <io.github.muntashirakon.AppManager.servermanager.remote.AppOpsHandler: io.github.muntashirakon.AppManager.server.common.OpsResult runCheck(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)> to <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:112
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 345 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>[]--><android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> to <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:113
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 346 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)>[]--><android.content.Context: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)> to <android.content.Context: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:114
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 347 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: int getDesiredHeight()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: int getDesiredHeight()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: int getDesiredHeight()>has compatibility isssues！
-----------------------------------------
crashApis:115
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 348 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> is checking!!!
The life time of api is [26,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 349 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:116
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 350 Potential Issue API: SDKCheck of <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$z0 == 0]]--><android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
#1.the call statck between class <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> to <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>has compatibility isssues！
-----------------------------------------
crashApis:117
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 351 Potential Issue API: SDKCheck of <android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText.Params)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try], [-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try]][[-$i0 < 29]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try], [-$i0 < 29]]--><android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText.Params)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 352 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(android.app.Person)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 353 Potential Issue API: SDKCheck of <android.app.Person.Builder: void <init>()> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 354 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: void <init>(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:118
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 355 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setVibrationPattern(long[])> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 356 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:119
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 357 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 358 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getDataDir()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: java.io.File getDataDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 359 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>has compatibility isssues！
-----------------------------------------
crashApis:120
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 360 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void disableShortcuts(java.util.List,java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void disableShortcuts(android.content.Context,java.util.List,java.lang.CharSequence)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void disableShortcuts(java.util.List,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 361 Potential Issue API: SDKCheck of <android.view.DisplayCutout: java.util.List getBoundingRects()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()>[[-$i0 < 28]]--><android.view.DisplayCutout: java.util.List getBoundingRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 362 Potential Issue API: SDKCheck of <android.app.Notification: boolean getAllowSystemGeneratedContextualActions()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>[[-$i0 < 29]]--><android.app.Notification: boolean getAllowSystemGeneratedContextualActions()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 363 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 364 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 365 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout build()> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
containsStatic:true
containsTry:true
30call by main package
-----------------------------------------
#################################################
N 366 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 367 Potential Issue API: SDKCheck of <android.app.Notification: android.app.Notification.BubbleMetadata getBubbleMetadata()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification)>[[-$i0 < 29]]--><android.app.Notification: android.app.Notification.BubbleMetadata getBubbleMetadata()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 368 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 369 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>has compatibility isssues！
-----------------------------------------
crashApis:121
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 370 Potential Issue API: SDKCheck of <android.os.LocaleList: int hashCode()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: int hashCode()>[]--><android.os.LocaleList: int hashCode()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: int hashCode()> to <android.os.LocaleList: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:122
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 371 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 372 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onPointerCaptureChanged(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 373 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: java.lang.String getId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]
$i0 < 28
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><android.app.NotificationChannelGroup: java.lang.String getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 374 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>has compatibility isssues！
-----------------------------------------
crashApis:123
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 375 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 376 Potential Issue API: SDKCheck of <android.os.Trace: void setCounter(java.lang.String,long)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.os.TraceCompat: void setCounter(java.lang.String,int)>[[-$i1 < 29]]--><android.os.Trace: void setCounter(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 377 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getInsets(int)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)>[]--><android.view.WindowInsets: android.graphics.Insets getInsets(int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)> to <android.view.WindowInsets: android.graphics.Insets getInsets(int)>has compatibility isssues！
-----------------------------------------
crashApis:124
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 378 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getIconMaxWidth()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxWidth(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getIconMaxWidth()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 379 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:125
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 380 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setWindowLayoutType(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>[[-$i1 < 23]]--><android.widget.PopupWindow: void setWindowLayoutType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 381 Potential Issue API: SDKCheck of <android.os.Message: boolean isAsynchronous()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try]][[-$i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-$i0 < 16]]--><android.os.Message: boolean isAsynchronous()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 382 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
crashApis:126
crashApisInMain:14
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 383 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
$i0 < 25
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[]--><androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 384 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphStart(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)>[[-$i1 < 29]]--><android.text.PrecomputedText: int getParagraphStart(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 385 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 386 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i1 < 24
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
-$i1 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
#3.the call statck between class <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)> to <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>has compatibility isssues！
-----------------------------------------
crashApis:127
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 387 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int ime()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int ime()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int ime()>has compatibility isssues！
-----------------------------------------
crashApis:128
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 388 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeTextType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeTextType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 389 Potential Issue API: SDKCheck of <android.view.View: boolean isAccessibilityHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isAccessibilityHeading()>
#1.the call statck between class <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>has compatibility isssues！
-----------------------------------------
crashApis:129
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 390 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [26,31]
15call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 < 30
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 < 30
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 < 30
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 24
-$i0 < 28
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i1 < 28
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 23
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 23
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 26
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 28
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i0 < 26
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 > 29
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
-$i1 < 25
$i1 > 29
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]][[-$i0 < 26]]
$i0 > 29
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30], [-$i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 391 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
363call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
362 Packageshead roads:
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setHeaders()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackageInfo(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$ph2nE4-bTTKCkQxzvuop9f25jCo(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadActivities()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$v63q8U_cEAA8IEuprQCgicJKkSc(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadServices()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uSmbktTUxw_dkJNjGV9le_y9_g0(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadReceivers()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$10$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.List blockTrackingComponents(java.util.Collection,int)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackage(java.lang.String)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppCacheDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onCreate$2$MainActivity(android.view.View,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void checkAppUpdate()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-$yysi0 < 29
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[[-$yysi0 < 29]]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void onCleared()>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void access$100(io.github.muntashirakon.AppManager.usage.AppUsageActivity)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$onCreateDialog$2$OpenPgpKeySelectionDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void chooseKey()>[]--><org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto$2: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onMenuItemClick(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void handleBatchOp(int)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$0$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbStream openShell(android.content.Context,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbConnection connect(android.content.Context,java.lang.String,int)>[]--><com.tananaev.adblib.AdbConnection: void connect()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$DHx2vpenuP6FEkhUxWDxjFOVPVM(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadProviders()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: void cleanOldSessions()>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[$i0 >= 28]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)>[[try]]--><androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uEWG6j5IO7FMIMsoQq00MOTU06I(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadAppOps()>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$27$OneClickOpsActivity(android.text.Editable,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.util.Collection getFilteredAppOps(java.lang.String,int[])>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppFilesDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$8$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: java.util.List retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.LocalServer: java.lang.String readProcess()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsActivity: void lambda$null$3$AppDetailsActivity(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStoragePublicDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$blockTrackers$13$OneClickOpsActivity(boolean)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: io.github.muntashirakon.AppManager.oneclickops.ItemCount getTrackerCountForApp(android.content.pm.ApplicationInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackage(java.lang.String)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$4$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$4$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$15$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean ignoreDangerousAppOps()>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:true
containsTry:true
363call by main package
-----------------------------------------
#################################################
N 392 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 393 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean isVisible(int)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)>[]--><android.view.WindowInsets: boolean isVisible(int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)> to <android.view.WindowInsets: boolean isVisible(int)>has compatibility isssues！
-----------------------------------------
crashApis:130
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 394 Potential Issue API: SDKCheck of <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)> to <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>has compatibility isssues！
-----------------------------------------
crashApis:131
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 395 Potential Issue API: SDKCheck of <android.view.View: boolean isImportantForAutofill()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 396 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 397 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void requestPermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()>[]--><android.view.inputmethod.InputContentInfo: void requestPermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()> to <android.view.inputmethod.InputContentInfo: void requestPermission()>has compatibility isssues！
-----------------------------------------
crashApis:132
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 398 Potential Issue API: SDKCheck of <android.view.MenuItem: int getAlphabeticModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getAlphabeticModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getAlphabeticModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:133
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 399 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getShortcuts(int)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 25
-$i1 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[-$i1 < 30]]--><android.content.pm.ShortcutManager: java.util.List getShortcuts(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 400 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextClassifier(android.view.textclassifier.TextClassifier)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 401 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int statusBars()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int statusBars()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int statusBars()>has compatibility isssues！
-----------------------------------------
crashApis:134
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 402 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setEnabled(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void setEnabled(boolean)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void setEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:135
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 403 Potential Issue API: SDKCheck of <android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)> is checking!!!
The life time of api is [29,31]
357call roads:
1 Mainhead roads:
356 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.utils.IOUtils: java.io.File getSharableFile(java.io.File)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]--><android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runner.RunnerUtils: void copyToybox(java.io.File,java.io.File)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: java.io.File saveZipFile(java.io.InputStream,java.io.File)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]--><android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>
One road protect good!
###Multi invoking in one method, need manual check!!!<io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$8$AppInfoFragment()>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkUtils: java.io.File getSharableApkFile(android.content.pm.PackageInfo)>[[try], [$yysi0 < 26]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]
###Multi invoking in one method, need manual check!!!<io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$8$AppInfoFragment()>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkUtils: java.io.File getSharableApkFile(android.content.pm.PackageInfo)>[[try]][[$yysi0 < 26]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$8$AppInfoFragment()>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkUtils: java.io.File getSharableApkFile(android.content.pm.PackageInfo)>[[try], [$yysi0 < 26]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]--><android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]--><android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.apk.ApkFile$Entry: java.io.File getCachedFile()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: java.io.File saveZipFile(java.io.InputStream,java.io.File,java.lang.String)>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: java.io.File saveZipFile(java.io.InputStream,java.io.File)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>[[-$i1 < 29]]--><android.os.FileUtils: long copy(java.io.InputStream,java.io.OutputStream)>
One road protect good!
containsStatic:true
containsTry:true
357call by main package
-----------------------------------------
#################################################
N 404 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
354call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
353 Packageshead roads:
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$22$MainPreferences()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppCacheDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onCreate$2$MainActivity(android.view.View,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void checkAppUpdate()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$yysi0 < 29
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[[-$yysi0 < 29]]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void onCleared()>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void access$100(io.github.muntashirakon.AppManager.usage.AppUsageActivity)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$onCreateDialog$2$OpenPgpKeySelectionDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void chooseKey()>[]--><org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto$2: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onMenuItemClick(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void handleBatchOp(int)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$0$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbStream openShell(android.content.Context,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbConnection connect(android.content.Context,java.lang.String,int)>[]--><com.tananaev.adblib.AdbConnection: void connect()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: void cleanOldSessions()>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)>[[try]]--><androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uEWG6j5IO7FMIMsoQq00MOTU06I(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadAppOps()>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$27$OneClickOpsActivity(android.text.Editable,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.util.Collection getFilteredAppOps(java.lang.String,int[])>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppFilesDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$8$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: java.util.List retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.LocalServer: java.lang.String readProcess()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsActivity: void lambda$null$3$AppDetailsActivity(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStoragePublicDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$4$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$4$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$15$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean ignoreDangerousAppOps()>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void access$2000(io.github.muntashirakon.AppManager.details.ClassListingActivity)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void viewScanSummary()>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 405 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)> is checking!!!
The life time of api is [30,31]
15call roads:
1 Mainhead roads:
-$i0 < 30
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 30
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 30
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
-$i0 < 24
-$i0 < 28
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 30
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i1 < 28
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 23
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 23
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 26
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 25
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 28
-$i0 < 30
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
-$i0 < 26
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
$i0 > 29
-$i0 < 25
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
-$i1 < 25
$i1 > 29
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]
$i0 > 29
-$i0 < 25
-$i0 < 29
-$i0 < 30
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-$i0 < 30]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 406 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26]][[-$i1 < 20]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-$i0 < 26]]
$i0 < 26
-$i1 < 20
-$i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-$i0 < 26]]--><android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 407 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>has compatibility isssues！
-----------------------------------------
crashApis:136
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 408 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean isEnabled()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: boolean isEnabled()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: boolean isEnabled()>has compatibility isssues！
-----------------------------------------
crashApis:137
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 409 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)>[]--><android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
crashApis:138
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 410 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace.Model getModel()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace.Model getModel()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace.Model getModel()>has compatibility isssues！
-----------------------------------------
crashApis:139
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 411 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.View: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 412 Potential Issue API: SDKCheck of <android.view.View: android.graphics.drawable.Drawable getForeground()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.view.View: android.graphics.drawable.Drawable getForeground()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 413 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[]--><android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
#1.the call statck between class <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)> to <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:140
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 414 Potential Issue API: SDKCheck of <android.os.LocaleList: void <init>(java.util.Locale[])> is checking!!!
The life time of api is [24,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i2 < 21
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>[[$i2 < 21]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: void <clinit>()>[]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
-$i0 < 24
Good road: <io.github.muntashirakon.AppManager.BaseActivity: void attachBaseContext(android.content.Context)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context attachBaseContext(android.content.Context)>[[-$i0 < 24]]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context updateResources(android.content.Context)>[]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 415 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getLayoutDirection()> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.Rect access$500(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]
$yysi0 < 21
-$z0 == 0
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void getChipTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]
$yysi0 < 21
-$z0 == 0
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: com.google.android.material.chip.Chip addChip(int,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 23
Good road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
containsStatic:true
containsTry:false
30call by main package
-----------------------------------------
#################################################
N 416 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>[[$i0 >= 24]]--><android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 417 Potential Issue API: SDKCheck of <android.content.Context: java.util.concurrent.Executor getMainExecutor()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>[[-$i0 < 28]]--><android.content.Context: java.util.concurrent.Executor getMainExecutor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 418 Potential Issue API: SDKCheck of <android.graphics.Canvas: void enableZ()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21], [-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21]][[-$i0 < 29]]
$i0 >= 21
-$i0 < 29
Good road: <androidx.transition.GhostViewPort: void onDraw(android.graphics.Canvas)>[]--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[$i0 >= 21], [-$i0 < 29]]--><android.graphics.Canvas: void enableZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 419 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 420 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>[]--><android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)> to <android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:141
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 421 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.LocusId getLocusId()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo)>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo: android.content.LocusId getLocusId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 422 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats.Bucket: long getRxBytes()> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats.Bucket: long getRxBytes()>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 423 Potential Issue API: SDKCheck of <android.content.Context: boolean isDeviceProtectedStorage()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: boolean isDeviceProtectedStorage()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 424 Potential Issue API: SDKCheck of <android.os.LocaleList: int indexOf(java.util.Locale)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)>[]--><androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)>[]--><android.os.LocaleList: int indexOf(java.util.Locale)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)> to <android.os.LocaleList: int indexOf(java.util.Locale)>has compatibility isssues！
-----------------------------------------
crashApis:142
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 425 Potential Issue API: SDKCheck of <android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 426 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toString()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()>[]--><android.os.LocaleList: java.lang.String toString()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()> to <android.os.LocaleList: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:143
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 427 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)> is checking!!!
The life time of api is [29,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLocusId(android.content.LocusId)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 428 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 429 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
363call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity dummyMainMethod_io_github_muntashirakon_AppManager_runningapps_RunningAppsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity dummyMainMethod_io_github_muntashirakon_AppManager_oneclickops_OneClickOpsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: java.util.Locale getLocaleByLanguage()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity dummyMainMethod_io_github_muntashirakon_AppManager_sharedpref_SharedPrefsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.BaseActivity: void onResume()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: java.util.Locale getLocaleByLanguage()>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: void <clinit>()>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
362 Packageshead roads:
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setHeaders()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackageInfo(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$ph2nE4-bTTKCkQxzvuop9f25jCo(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadActivities()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$v63q8U_cEAA8IEuprQCgicJKkSc(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadServices()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uSmbktTUxw_dkJNjGV9le_y9_g0(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadReceivers()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
$i1 >= 24
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$10$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.List blockTrackingComponents(java.util.Collection,int)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: java.util.HashMap getTrackerComponentsForPackage(java.lang.String)>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: boolean isTracker(java.lang.String)>[]--><io.github.muntashirakon.AppManager.StaticDataset: java.lang.String[] getTrackerCodeSignatures()>[]--><io.github.muntashirakon.AppManager.StaticDataset: void <clinit>()>[[$i1 >= 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale get(int)>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>[]--><android.os.LocaleList: java.util.Locale get(int)>
#139.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale get(int)> to <android.os.LocaleList: java.util.Locale get(int)>has compatibility isssues！
-----------------------------------------
crashApis:144
containsStatic:true
containsTry:true
140call by main package
-----------------------------------------
#################################################
N 430 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 431 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: int onStartCommand(android.content.Intent,int,int)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void createNotificationChannel()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
4 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void access$400(io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void sendNotification(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: void displayHighPriorityNotification(android.app.Notification)>[]--><io.github.muntashirakon.AppManager.utils.NotificationUtils: android.app.NotificationManager getHighPriorityNotificationManager()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 432 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)> to <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:145
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 433 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: long getLastChangedTimestamp()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: long getLastChangedTimestamp()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: long getLastChangedTimestamp()>has compatibility isssues！
-----------------------------------------
crashApis:146
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 434 Potential Issue API: SDKCheck of <android.app.RemoteInput: void setResultsSource(android.content.Intent,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-$i1 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[$i0 < 26]][[-$i1 < 20]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-$i1 < 28]]
$i0 < 26
-$i1 < 20
-$i1 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[$i0 < 26], [-$i1 < 20]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-$i1 < 28]]--><android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 435 Potential Issue API: SDKCheck of <android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>
One road protect good!
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 436 Potential Issue API: SDKCheck of <android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()> is checking!!!
The life time of api is [29,31]
39call roads:
1 Mainhead roads:
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.SettingsActivity dummyMainMethod_io_github_muntashirakon_AppManager_settings_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.MainPreferences dummyMainMethod_io_github_muntashirakon_AppManager_settings_MainPreferences(android.content.Intent,android.app.Activity)>[]--><androidx.preference.PreferenceFragmentCompat: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.preference.PreferenceFragmentCompat: androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.AppDetailsActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_AppDetailsActivity(android.content.Intent)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.AppsProfileActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_AppsProfileActivity(android.content.Intent)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
38 Packageshead roads:
-$i0 < 29
Good road: <com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onActionUp(float,boolean)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context)>[]--><com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 21
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>[[-$i0 < 21]]--><androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.timepicker.MaterialTimePicker: void access$300(com.google.android.material.timepicker.MaterialTimePicker,com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void invalidate()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.datepicker.MaterialCalendar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.datepicker.MaterialCalendar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.datepicker.MaterialCalendar: void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.timepicker.MaterialTimePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.timepicker.MaterialTimePicker: void updateInputMode(com.google.android.material.button.MaterialButton)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void invalidate()>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.navigation.NavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.NavigationMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.slider.Slider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.datepicker.MaterialDatePicker: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.material.datepicker.MaterialDatePicker: void initHeaderToggle(android.content.Context)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context)>[]--><com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)>[]--><androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.timepicker.TimePickerClockPresenter: void onSelectionChanged(int)>[]--><com.google.android.material.timepicker.TimePickerClockPresenter: void setSelection(int,boolean)>[]--><com.google.android.material.timepicker.TimePickerView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>[]--><com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.bottomsheet.BottomSheetDialog: android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$yysi0 < 19
-$i0 < 29
Good road: <androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[$yysi0 < 19]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.RecyclerView$Recycler: void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: com.google.android.material.chip.Chip addChip(int,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.button.MaterialButtonToggleGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 19
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: void enableAccessibleClickableSpanSupport(android.view.View)>[[-$i0 < 19]]--><androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
containsStatic:true
containsTry:false
39call by main package
-----------------------------------------
#################################################
N 437 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>
#1.the call statck between class <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)> to <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>has compatibility isssues！
-----------------------------------------
crashApis:147
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 438 Potential Issue API: SDKCheck of <android.location.GnssStatus: int getSatelliteCount()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: int getSatelliteCount()>[]--><android.location.GnssStatus: int getSatelliteCount()>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: int getSatelliteCount()> to <android.location.GnssStatus: int getSatelliteCount()>has compatibility isssues！
-----------------------------------------
crashApis:148
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 439 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 440 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller.SessionParams: void setInstallReason(int)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[[-$i0 < 26]]--><android.content.pm.PackageInstaller.SessionParams: void setInstallReason(int)>
One road protect good!
1 Packageshead roads:
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[[-$i0 < 26]]--><android.content.pm.PackageInstaller.SessionParams: void setInstallReason(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 441 Potential Issue API: SDKCheck of <android.location.GnssStatus: float getCarrierFrequencyHz(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.location.GnssStatusWrapper: float getCarrierFrequencyHz(int)>[[-$i1 < 26]]--><android.location.GnssStatus: float getCarrierFrequencyHz(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 442 Potential Issue API: SDKCheck of <android.view.Display.Mode: int getPhysicalWidth()> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>[]--><android.view.Display.Mode: int getPhysicalWidth()>
#1.the call statck between class <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)> to <android.view.Display.Mode: int getPhysicalWidth()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23]][[$i0 >= 28]]
-$i0 < 23
$i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]--><android.view.Display.Mode: int getPhysicalWidth()>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>[]--><android.view.Display.Mode: int getPhysicalWidth()>
#3.the call statck between class <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)> to <android.view.Display.Mode: int getPhysicalWidth()>has compatibility isssues！
-----------------------------------------
crashApis:149
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 443 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[-$i0 < 28]]--><android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 444 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 445 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:150
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 446 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>has compatibility isssues！
-----------------------------------------
crashApis:151
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 447 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetLeft()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)>[]--><androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetLeft()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 448 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.datepicker.MaterialCalendar$5: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
-$i2 < 26
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[-$i2 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 449 Potential Issue API: SDKCheck of <android.util.FloatProperty: void setValue(java.lang.Object,float)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.dynamicanimation.animation.FloatPropertyCompat$1: void setValue(java.lang.Object,float)>[]--><android.util.FloatProperty: void setValue(java.lang.Object,float)>
#1.the call statck between class <androidx.dynamicanimation.animation.FloatPropertyCompat$1: void setValue(java.lang.Object,float)> to <android.util.FloatProperty: void setValue(java.lang.Object,float)>has compatibility isssues！
-----------------------------------------
crashApis:152
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 450 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[-$i0 < 24]]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
One road protect good!
$i0 < 24
!!!this api will crash on sdk 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[$i0 < 24]]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()>[]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)> to <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>has compatibility isssues！
-----------------------------------------
crashApis:153
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 451 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRateLimitingActive()> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: boolean isRateLimitingActive()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30]][[-$i1 < 25]][[$i1 > 29]]
$i1 < 30
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]--><android.content.pm.ShortcutManager: boolean isRateLimitingActive()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 452 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: int getRank()> is checking!!!
The life time of api is [25,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: int getRank()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: int getRank()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)>[]--><android.content.pm.ShortcutInfo: int getRank()>
#2.the call statck between class <androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)> to <android.content.pm.ShortcutInfo: int getRank()>has compatibility isssues！
-----------------------------------------
crashApis:154
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 453 Potential Issue API: SDKCheck of <android.app.Service: void stopForeground(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)>[[-$i1 < 24]]--><android.app.Service: void stopForeground(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 454 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.net.Uri getUri()> is checking!!!
The life time of api is [28,31]
23call roads:
1 Mainhead roads:
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
22 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$i0 < 24
-$i0 < 28
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i1 < 28
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
$i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 26
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 26
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 > 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-$i0 > 29]]--><androidx.core.content.pm.ShortcutManagerCompat: void convertUriIconsToBitmapIcons(android.content.Context,java.util.List)>[]--><androidx.core.content.pm.ShortcutManagerCompat: boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 > 29
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28]][[-$i1 < 23]][[$i1 < 29]][[$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 < 28
-$i1 < 23
$i1 < 29
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 > 29
-$i0 < 25
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 > 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 > 29]]--><androidx.core.content.pm.ShortcutManagerCompat: void convertUriIconsToBitmapIcons(android.content.Context,java.util.List)>[]--><androidx.core.content.pm.ShortcutManagerCompat: boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$i1 < 25
$i1 > 29
-$i0 < 29
$i0 < 30
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[$i0 < 30]]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i1 > 29
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 > 29]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
containsStatic:true
containsTry:true
23call by main package
-----------------------------------------
#################################################
N 455 Potential Issue API: SDKCheck of <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.settings.SettingsActivity dummyMainMethod_io_github_muntashirakon_AppManager_settings_SettingsActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity dummyMainMethod_io_github_muntashirakon_AppManager_oneclickops_OneClickOpsActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ManifestViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ManifestViewerActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.sharedpref.SharedPrefsActivity dummyMainMethod_io_github_muntashirakon_AppManager_sharedpref_SharedPrefsActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassViewerActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassViewerActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.ProfilesActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_ProfilesActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.ClassListingActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_ClassListingActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.details.AppDetailsActivity dummyMainMethod_io_github_muntashirakon_AppManager_details_AppDetailsActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.profiles.AppsProfileActivity dummyMainMethod_io_github_muntashirakon_AppManager_profiles_AppsProfileActivity(android.content.Intent)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
11 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>[]--><androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>[]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
#1.the call statck between class <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> to <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i2 < 29
Good road: <com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i2 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
crashApis:155
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 456 Potential Issue API: SDKCheck of <android.view.View: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>[[-$i0 < 28]]--><android.view.View: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 457 Potential Issue API: SDKCheck of <android.content.res.Configuration: void setLocales(android.os.LocaleList)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <io.github.muntashirakon.AppManager.BaseActivity: void attachBaseContext(android.content.Context)>[]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context attachBaseContext(android.content.Context)>[[-$i0 < 24]]--><io.github.muntashirakon.AppManager.utils.LangUtils: android.content.Context updateResources(android.content.Context)>[]--><android.content.res.Configuration: void setLocales(android.os.LocaleList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 458 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()> to <android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()>has compatibility isssues！
-----------------------------------------
crashApis:156
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 459 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetRight()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)>[]--><androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetRight()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 460 Potential Issue API: SDKCheck of <android.view.View: void setLeftTopRightBottom(int,int,int,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi22: void setLeftTopRightBottom(android.view.View,int,int,int,int)>[[try]]--><android.view.View: void setLeftTopRightBottom(int,int,int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setLeftTopRightBottom(android.view.View,int,int,int,int)>[]--><android.view.View: void setLeftTopRightBottom(int,int,int,int)>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: void setLeftTopRightBottom(android.view.View,int,int,int,int)> to <android.view.View: void setLeftTopRightBottom(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:157
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 461 Potential Issue API: SDKCheck of <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)> is checking!!!
The life time of api is [29,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#3.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#4.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#5.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#6.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#7.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[-$i0 < 29], [-$yysi0 >= 30]]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[-$i0 < 29]][[-$yysi0 >= 30]]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]
-$i0 < 29
-$yysi0 >= 30
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[]--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[-$i0 < 29], [-$yysi0 >= 30]]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
One road protect good!
crashApis:158
containsStatic:true
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 462 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>has compatibility isssues！
-----------------------------------------
crashApis:159
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 463 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 464 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean hasKeyFieldsOnly()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean hasKeyFieldsOnly()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean hasKeyFieldsOnly()>has compatibility isssues！
-----------------------------------------
crashApis:160
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 465 Potential Issue API: SDKCheck of <android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>[[try]]--><android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 466 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void reportShortcutUsed(java.lang.String)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void reportShortcutUsed(android.content.Context,java.lang.String)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void reportShortcutUsed(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 467 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats.Bucket: void <init>()> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats.Bucket: void <init>()>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 468 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)> is checking!!!
The life time of api is [23,31]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 469 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28], [$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[$i0 < 28]][[$i0 < 26]]
-$i0 < 24
$i0 < 28
$i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28], [$i0 < 26]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 470 Potential Issue API: SDKCheck of <android.graphics.Color: int getComponentCount()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: int getComponentCount()>
#1.the call statck between class <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: int getComponentCount()>has compatibility isssues！
-----------------------------------------
crashApis:161
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 471 Potential Issue API: SDKCheck of <android.content.pm.SigningInfo: boolean hasMultipleSigners()> is checking!!!
The life time of api is [28,31]
6call roads:
1 Mainhead roads:
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: boolean runRestore()>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void restoreSource()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
5 Packageshead roads:
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.lang.String[] getSigningCertSha256Checksum(android.content.pm.PackageInfo,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$000(io.github.muntashirakon.AppManager.main.MainViewModel,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForUid(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$100(io.github.muntashirakon.AppManager.main.MainViewModel,java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.utils.Utils: io.github.muntashirakon.AppManager.utils.Tuple getIssuerAndAlg(android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
-$i0 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$Iv_0L6-gFIWt618T3hONedO1Mww(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadSignatures()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: android.content.pm.Signature[] getSigningInfo(android.content.pm.PackageInfo,boolean)>[[-$i0 < 28]]--><android.content.pm.SigningInfo: boolean hasMultipleSigners()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 472 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextLocales(android.os.LocaleList)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 473 Potential Issue API: SDKCheck of <android.view.View: boolean hasExplicitFocusable()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean hasExplicitFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 474 Potential Issue API: SDKCheck of <android.app.Person: java.lang.CharSequence getName()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 475 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[$i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 476 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)>[]--><android.view.WindowInsets.Builder: void <init>()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>()>[]--><android.view.WindowInsets.Builder: void <init>()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>()> to <android.view.WindowInsets.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:162
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 477 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[-$i0 < 29]][[$i0 < 28]][[$i0 < 24]]
-$i0 < 20
$i1 < 23
-$i0 < 29
$i0 < 28
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[-$i0 < 29]][[$i0 < 28]][[$i0 < 24]]
-$i0 < 20
$i1 < 23
-$i0 < 29
$i0 < 28
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[-$i0 < 29]][[$i0 < 28]][[$i0 < 24]]
-$i0 < 20
$i1 < 23
-$i0 < 29
$i0 < 28
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[$i1 < 23]][[-$i0 < 29]][[$i0 < 28]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [$i1 < 23], [-$i0 < 29], [$i0 < 28], [$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 478 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:163
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 479 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-$i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[]--><android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 480 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 481 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setIsClippedToScreen(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 482 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 483 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>[]--><android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)> to <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>has compatibility isssues！
-----------------------------------------
crashApis:164
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 484 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>[[-$i2 < 23]]--><android.view.View: void setScrollIndicators(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 485 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 486 Potential Issue API: SDKCheck of <android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()>[[try]]--><android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 487 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setExitTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 488 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i4 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)>[[], [-$i4 < 26]]--><android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)> to <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:165
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 489 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
One road protect good!
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 490 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 491 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 492 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>[]--><android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)> to <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>has compatibility isssues！
-----------------------------------------
crashApis:166
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 493 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getHyphenationFrequency()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getHyphenationFrequency()>
#1.the call statck between class <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)> to <android.text.PrecomputedText.Params: int getHyphenationFrequency()>has compatibility isssues！
-----------------------------------------
crashApis:167
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 494 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets getRootWindowInsets()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>[]--><android.view.View: android.view.WindowInsets getRootWindowInsets()>
#1.the call statck between class <androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)> to <android.view.View: android.view.WindowInsets getRootWindowInsets()>has compatibility isssues！
-----------------------------------------
-$i0 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewAttachedToWindow(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.WindowInsets getRootWindowInsets()>
One road protect good!
crashApis:168
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 495 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>[[]]--><android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>has compatibility isssues！
-----------------------------------------
crashApis:169
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 496 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 497 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toLanguageTags()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>[]--><androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()>[]--><android.os.LocaleList: java.lang.String toLanguageTags()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()> to <android.os.LocaleList: java.lang.String toLanguageTags()>has compatibility isssues！
-----------------------------------------
crashApis:170
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 498 Potential Issue API: SDKCheck of <android.widget.AutoCompleteTextView: void setInputMethodMode(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 499 Potential Issue API: SDKCheck of <android.view.View: void setSystemGestureExclusionRects(java.util.List)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: void setSystemGestureExclusionRects(android.view.View,java.util.List)>[[-$i0 < 29]]--><android.view.View: void setSystemGestureExclusionRects(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 500 Potential Issue API: SDKCheck of <android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>[[-$i0 < 24]]--><android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 501 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)>has compatibility isssues！
-----------------------------------------
crashApis:171
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 502 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 503 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: void setDescription(java.lang.String)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26]][[-$i0 < 28]]
-$i0 < 26
$i0 >= 26
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26], [-$i0 < 28]]--><android.app.NotificationChannelGroup: void setDescription(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26]][[-$i0 < 28]]
$i0 >= 26
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat)>[]--><androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()>[[$i0 >= 26], [-$i0 < 28]]--><android.app.NotificationChannelGroup: void setDescription(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 504 Potential Issue API: SDKCheck of <android.widget.RemoteViews: void setChronometerCountDown(int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24], [$i0 >= 21], [$i3 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24]][[$i0 >= 21]][[$i3 < 21]]
-$i0 < 24
$i0 >= 21
$i3 < 21
Good road: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24], [$i0 >= 21], [$i3 < 21]]--><android.widget.RemoteViews: void setChronometerCountDown(int,boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 505 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
370call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 >= 20], [$i0 >= 21], [$i0 < 26], [-$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 >= 20]][[$i0 >= 21]][[$i0 < 26]][[-$i0 < 16]]
-$i0 >= 20
$i0 >= 21
$i0 < 26
-$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-$i0 >= 20], [$i0 >= 21], [$i0 < 26], [-$i0 < 16]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
369 Packageshead roads:
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#8.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:172
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 506 Potential Issue API: SDKCheck of <android.widget.ImageView: void animateTransform(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.transition.ChangeImageTransform$2: void set(android.widget.ImageView,android.graphics.Matrix)>[]--><androidx.transition.ImageViewUtils: void animateTransform(android.widget.ImageView,android.graphics.Matrix)>[[-$i0 < 29]]--><android.widget.ImageView: void animateTransform(android.graphics.Matrix)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 507 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()>[[-$i0 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 508 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setGroup(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setGroup(java.lang.String)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void setGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 509 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 510 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[]--><androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()>[]--><androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 511 Potential Issue API: SDKCheck of <android.app.Notification: android.graphics.drawable.Icon getSmallIcon()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 29
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[$yysi0 < 29]]--><android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>
#1.the call statck between class <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)> to <android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>has compatibility isssues！
-----------------------------------------
crashApis:173
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 512 Potential Issue API: SDKCheck of <android.app.Notification: int getBadgeIconType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getBadgeIconType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 513 Potential Issue API: SDKCheck of <android.app.NotificationManager: boolean areNotificationsEnabled()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()>[[-$i0 < 24]]--><android.app.NotificationManager: boolean areNotificationsEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 514 Potential Issue API: SDKCheck of <android.graphics.fonts.FontStyle: void <init>(int,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#1.the call statck between class <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
One road protect good!
crashApis:174
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 515 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])>[]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])> to <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>has compatibility isssues！
-----------------------------------------
$i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[$i0 >= 28]]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
One road protect good!
crashApis:175
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 516 Potential Issue API: SDKCheck of <android.content.LocusId: void <init>(java.lang.String)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.content.LocusIdCompat$Api29Impl: android.content.LocusId create(java.lang.String)>[]--><android.content.LocusId: void <init>(java.lang.String)>
#1.the call statck between class <androidx.core.content.LocusIdCompat$Api29Impl: android.content.LocusId create(java.lang.String)> to <android.content.LocusId: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:176
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 517 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 518 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])> is checking!!!
The life time of api is [25,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 519 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>[]--><android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()> to <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>has compatibility isssues！
-----------------------------------------
crashApis:177
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 520 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 521 Potential Issue API: SDKCheck of <android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>[[-$i1 < 28]]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 522 Potential Issue API: SDKCheck of <android.view.MenuItem: int getNumericModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getNumericModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getNumericModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:178
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 523 Potential Issue API: SDKCheck of <android.view.Window: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)>[[-$i0 < 28]]--><android.view.Window: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 524 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:179
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 525 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: void <init>(android.app.Service)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>[]--><android.app.job.JobServiceEngine: void <init>(android.app.Service)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)> to <android.app.job.JobServiceEngine: void <init>(android.app.Service)>has compatibility isssues！
-----------------------------------------
crashApis:180
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 526 Potential Issue API: SDKCheck of <android.view.View: void setPointerIcon(android.view.PointerIcon)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
-$i0 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 527 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
One road protect good!
crashApis:181
crashApisInMain:15
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 528 Potential Issue API: SDKCheck of <android.app.Activity: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>[[-$i0 < 28]]--><android.app.Activity: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 529 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 530 Potential Issue API: SDKCheck of <android.util.ArraySet: boolean isEmpty()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet remove(android.util.ArraySet,java.lang.Object)>[]--><android.util.ArraySet: boolean isEmpty()>
#1.the call statck between class <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet remove(android.util.ArraySet,java.lang.Object)> to <android.util.ArraySet: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:182
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 531 Potential Issue API: SDKCheck of <android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)>[[-$i0 < 23]]--><android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 532 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.os.LocaleList: boolean equals(java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>[]--><android.os.LocaleList: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)> to <android.os.LocaleList: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:183
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 533 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:184
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 534 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:185
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 535 Potential Issue API: SDKCheck of <android.view.View: void dispatchStartTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)>[[-$i0 < 24]]--><android.view.View: void dispatchStartTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 536 Potential Issue API: SDKCheck of <android.app.usage.StorageStats: long getAppBytes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26]][[try]][[-$yysi0 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]--><android.app.usage.StorageStats: long getAppBytes()>
One road protect good!
containsStatic:true
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 537 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#2.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#3.the call statck between class <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
crashApis:186
crashApisInMain:16
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 538 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
#1.the call statck between class <androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>has compatibility isssues！
-----------------------------------------
crashApis:187
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 539 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
One road protect good!
-$i1 >= 21
Good road: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 540 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 541 Potential Issue API: SDKCheck of <android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>[[-$i1 < 24]]--><android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 542 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <com.google.android.material.timepicker.ClockFaceView$2: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 543 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getChannelId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[]--><androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getChannelId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 544 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getWindowLayoutType()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)>[[-$i0 < 23]]--><android.widget.PopupWindow: int getWindowLayoutType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 545 Potential Issue API: SDKCheck of <android.view.View: void setNextClusterForwardId(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setNextClusterForwardId(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 546 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int captionBar()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int captionBar()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int captionBar()>has compatibility isssues！
-----------------------------------------
crashApis:188
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 547 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 548 Potential Issue API: SDKCheck of <android.util.ArraySet: void <init>()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)>[]--><android.util.ArraySet: void <init>()>
#1.the call statck between class <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)> to <android.util.ArraySet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:189
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 549 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.graphics.Region getRegionAt(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.graphics.Region getRegionAt(int)>[[-$i1 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.graphics.Region getRegionAt(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 550 Potential Issue API: SDKCheck of <android.view.Display.Mode: int getPhysicalHeight()> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>[]--><android.view.Display.Mode: int getPhysicalHeight()>
#1.the call statck between class <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)> to <android.view.Display.Mode: int getPhysicalHeight()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23]][[$i0 >= 28]]
-$i0 < 23
$i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-$i0 < 23], [$i0 >= 28]]--><android.view.Display.Mode: int getPhysicalHeight()>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>[]--><android.view.Display.Mode: int getPhysicalHeight()>
#3.the call statck between class <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)> to <android.view.Display.Mode: int getPhysicalHeight()>has compatibility isssues！
-----------------------------------------
crashApis:190
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 551 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:191
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 552 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 553 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isTextEntryKey()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextEntryKey()>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isTextEntryKey()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 554 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-$i0 < 28]]--><android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 555 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableVibration(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>[[-$i0 < 26]]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void enableVibration(boolean)>
One road protect good!
$i0 >= 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>[]--><androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()>[[$i0 >= 26]]--><android.app.NotificationChannel: void enableVibration(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 556 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 557 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()>has compatibility isssues！
-----------------------------------------
crashApis:192
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 558 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isEnabled()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isEnabled()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean isEnabled()>has compatibility isssues！
-----------------------------------------
crashApis:193
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 559 Potential Issue API: SDKCheck of <android.widget.TextView: void setLastBaselineToBottomHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 560 Potential Issue API: SDKCheck of <android.widget.TextView: boolean isHorizontallyScrollable()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 561 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
$i0 < 23
$i0 < 20
-$i0 < 24
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[-$i0 < 24]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [-$i0 < 24], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 562 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()>[]--><android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()> to <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>has compatibility isssues！
-----------------------------------------
crashApis:194
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 563 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
$z2 == 0
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[[$z2 == 0]]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-$i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:true
containsTry:true
30call by main package
-----------------------------------------
#################################################
N 564 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 >= 30
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()>[[-$yysi0 >= 30]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()>
#1.the call statck between class <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()> to <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getStateDescription()>has compatibility isssues！
-----------------------------------------
crashApis:195
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 565 Potential Issue API: SDKCheck of <android.content.res.Resources.Theme: void rebase()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)>[]--><android.content.res.Resources.Theme: void rebase()>
#1.the call statck between class <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)> to <android.content.res.Resources.Theme: void rebase()>has compatibility isssues！
-----------------------------------------
crashApis:196
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 566 Potential Issue API: SDKCheck of <android.view.DragAndDropPermissions: void release()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.DragAndDropPermissionsCompat: void release()>[[-$i0 < 24]]--><android.view.DragAndDropPermissions: void release()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 567 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30]][[-$i1 < 25]]
$i0 < 25
$i1 < 30
-$i1 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>[[$i0 < 25]]--><androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>[[$i1 < 30], [-$i1 < 25]]--><android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30]][[-$i1 < 25]][[$i1 > 29]]
$i1 < 30
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i1 < 30], [-$i1 < 25], [$i1 > 29]]--><android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 568 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
$i0 < 16
Good road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[$i0 < 16]]--><android.net.NetworkInfo: int getType()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.NetworkInfo: int getType()>
#2.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:197
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 569 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder addPerson(android.app.Person)> is checking!!!
The life time of api is [28,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(android.app.Person)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(android.app.Person)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(android.app.Person)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(android.app.Person)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 570 Potential Issue API: SDKCheck of <android.os.UserManager: boolean isUserUnlocked()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 571 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[[try]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 572 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat)>[]--><androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 573 Potential Issue API: SDKCheck of <android.view.View: void setImportantForAutofill(int)> is checking!!!
The life time of api is [26,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
-$i1 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <io.github.muntashirakon.AppManager.types.RecyclerViewWithEmptyView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 574 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int systemGestures()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int systemGestures()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int systemGestures()>has compatibility isssues！
-----------------------------------------
crashApis:198
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 575 Potential Issue API: SDKCheck of <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)>[]--><android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)> to <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>has compatibility isssues！
-----------------------------------------
crashApis:199
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 576 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 577 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 578 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 579 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-$i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 580 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23]][[try]][[$i0 < 29]]
-$i0 < 23
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 23], [try], [$i0 < 29]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 581 Potential Issue API: SDKCheck of <android.graphics.Paint: android.os.LocaleList getTextLocales()> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24]][[$i0 < 21]]
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>[]--><androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 24]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 582 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int navigationBars()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int navigationBars()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int navigationBars()>has compatibility isssues！
-----------------------------------------
crashApis:200
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 583 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getKey()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 584 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[-$i1 < 23]]
-$i0 < 20
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[-$i1 < 23]]
-$i0 < 20
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[-$i1 < 23]]
-$i0 < 20
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20]][[-$i1 < 23]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 20], [-$i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-$i0 < 23
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 585 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: boolean isDeclaredInManifest()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[[$i0 < 28]]--><android.content.pm.ShortcutInfo: boolean isDeclaredInManifest()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: boolean isDeclaredInManifest()>has compatibility isssues！
-----------------------------------------
crashApis:201
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 586 Potential Issue API: SDKCheck of <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()>[]--><android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
#1.the call statck between class <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()> to <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>has compatibility isssues！
-----------------------------------------
crashApis:202
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 587 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()>has compatibility isssues！
-----------------------------------------
crashApis:203
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 588 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>has compatibility isssues！
-----------------------------------------
crashApis:204
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 589 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setVisible(int,boolean)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setVisible(int,boolean)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setVisible(int,boolean)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setVisible(int,boolean)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setVisible(int,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:205
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 590 Potential Issue API: SDKCheck of <android.os.Trace: void beginAsyncSection(java.lang.String,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.os.TraceCompat: void beginAsyncSection(java.lang.String,int)>[[-$i1 < 29]]--><android.os.Trace: void beginAsyncSection(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 591 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean isEmpty()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: boolean isEmpty()>[]--><androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()>[]--><android.os.LocaleList: boolean isEmpty()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: boolean isEmpty()> to <android.os.LocaleList: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:206
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 592 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo getTouchDelegateInfo()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo getTouchDelegateInfo()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 593 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)> is checking!!!
The life time of api is [24,31]
3call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]][[-$i0 < 20]][[$i1 < 23]]
-$i0 < 24
-$i0 < 20
$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]][[-$i0 < 20]][[$i1 < 23]]
-$i0 < 24
-$i0 < 20
$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]][[-$i0 < 20]][[$i1 < 23]]
-$i0 < 24
-$i0 < 20
$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24]][[-$i0 < 20]][[$i1 < 23]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-$i0 < 24], [-$i0 < 20], [$i1 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23], [-$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23]][[-$i0 < 24]]
$i0 < 23
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23], [-$i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 594 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 >= 30
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[]--><androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>[[-$yysi0 >= 30]]--><android.view.DisplayCutout: void <init>(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)> to <android.view.DisplayCutout: void <init>(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:207
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 595 Potential Issue API: SDKCheck of <android.location.GnssStatus: boolean hasEphemerisData(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 
Error road: <androidx.core.location.GnssStatusWrapper: boolean hasEphemerisData(int)>[]--><android.location.GnssStatus: boolean hasEphemerisData(int)>
#1.the call statck between class <androidx.core.location.GnssStatusWrapper: boolean hasEphemerisData(int)> to <android.location.GnssStatus: boolean hasEphemerisData(int)>has compatibility isssues！
-----------------------------------------
crashApis:208
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 596 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
367call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity dummyMainMethod_io_github_muntashirakon_AppManager_runningapps_RunningAppsActivity(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onCreate(android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void <init>(io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean install(io.github.muntashirakon.AppManager.apk.ApkFile)>[[try]]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerShell: boolean abandon()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opForceStop()>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result runOpAndFetchResults()>[]--><io.github.muntashirakon.AppManager.runner.AdbShellRunner: io.github.muntashirakon.AppManager.runner.Runner$Result runCommand()>[]--><io.github.muntashirakon.AppManager.adb.AdbShell: io.github.muntashirakon.AppManager.adb.AdbShell$CommandResult run(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.ApiSupporter: io.github.muntashirakon.AppManager.server.common.Shell$Result runCommand(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
366 Packageshead roads:
-$i1 < 23
Good road: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAndroidDataDirs()>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void setComponentEnabledSetting(java.lang.String,java.lang.String,int,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: android.os.Parcelable onSaveInstanceState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.settings.MainPreferences: void lambda$null$10$MainPreferences()>[]--><io.github.muntashirakon.AppManager.rules.compontents.ComponentUtils: void removeAllRules(java.lang.String,int)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment$1: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.servermanager.ServerStatusChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.SpecialEffectsController$Operation: void complete()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-$i0 >= 21], [$i0 < 28]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-$i0 >= 21]][[$i0 < 28]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
-$i0 >= 21
$i0 < 28
-$i1 < 23
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-$i0 >= 21], [$i0 < 28]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><androidx.documentfile.provider.TreeDocumentFile: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long length()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long length(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$3$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.MainPreferences: boolean lambda$onCreatePreferences$6(androidx.preference.Preference,java.lang.Object)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void updateConfig(io.github.muntashirakon.AppManager.servermanager.LocalServer$Config)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$null$11$AppDetailsFragment$AppDetailsRecyclerAdapter(boolean,io.github.muntashirakon.AppManager.server.common.OpEntry,io.github.muntashirakon.AppManager.details.AppDetailsItem,int)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean setAppOp(int,int)>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getAppOpsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.shadow.ShadowDrawableWrapper: void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult disableAllPermission(java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean exists()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean exists(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService$1: void onReceive(android.content.Context,android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void dispatchRestoreInstanceState(android.util.SparseArray)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$2$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$getUserId$3$OpenPgpKeySelectionDialogFragment(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getName()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getName(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: long lastModified()>[]--><androidx.documentfile.provider.DocumentsContractApi19: long lastModified(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppCacheDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: void lambda$onCreate$2$MainActivity(android.view.View,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void checkAppUpdate()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$13$RunningAppsAdapter(android.content.pm.ApplicationInfo,android.view.MenuItem,androidx.appcompat.widget.PopupMenu)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getUsesPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$yysi0 < 29
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void onRefresh()>[[-$yysi0 < 29]]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void onCleared()>[]--><io.github.muntashirakon.AppManager.apk.ApkFile: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageActivity: void access$100(io.github.muntashirakon.AppManager.usage.AppUsageActivity)>[]--><io.github.muntashirakon.AppManager.usage.AppUsageActivity: void getAppUsage()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void lambda$onCreateDialog$2$OpenPgpKeySelectionDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.settings.OpenPgpKeySelectionDialogFragment: void chooseKey()>[]--><org.openintents.openpgp.util.OpenPgpServiceConnection: void bindToService()>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto$2: void onError(java.lang.Exception)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.main.MainActivity: boolean onMenuItemClick(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.main.MainActivity: void handleBatchOp(int)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void getPermissionsView(io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter$ViewHolder,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.WhatsNewDialogFragment$WhatsNewRecyclerAdapter: void onBindViewHolder(io.github.muntashirakon.AppManager.apk.whatsnew.WhatsNewDialogFragment$WhatsNewRecyclerAdapter$ViewHolder,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.ApiSupporter: void restartServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.recyclerview.widget.ItemTouchHelper$2: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$0$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbStream openShell(android.content.Context,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.adb.AdbConnectionManager: com.tananaev.adblib.AdbConnection connect(android.content.Context,java.lang.String,int)>[]--><com.tananaev.adblib.AdbConnection: void connect()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean openSession()>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: void cleanOldSessions()>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerNoRoot: boolean install(java.io.File[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.viewpager2.widget.ViewPager2: void restorePendingState()>[]--><androidx.viewpager2.adapter.FragmentStateAdapter: void restoreState(android.os.Parcelable)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: net.dongliu.apk.parser.bean.ApkMeta getMetaInfo(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)>[[try]]--><androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>[]--><androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void lambda$uEWG6j5IO7FMIMsoQq00MOTU06I(io.github.muntashirakon.AppManager.details.AppDetailsViewModel)>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: void loadAppOps()>[]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$27$OneClickOpsActivity(android.text.Editable,boolean)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: java.util.Collection getFilteredAppOps(java.lang.String,int[])>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: int checkOperation(int,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult checkOperation(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.usage.AppUsageDetailsDialogFragment$AppUsageDetailsAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean canRead()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canRead(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStorageAppFilesDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$8$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: java.util.List retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.servermanager.LocalServer: java.lang.String readProcess()>[[try]]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsActivity: void lambda$null$3$AppDetailsActivity(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean canWrite()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean canWrite(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.io.File,java.util.Locale)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <net.dongliu.apk.parser.ApkParsers: java.lang.String getManifestXml(java.lang.String)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: java.lang.String getType()>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isFile()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isFile(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isDirectory()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isDirectory(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.misc.OsEnvironment: io.github.muntashirakon.AppManager.types.PrivilegedFile[] buildExternalStoragePublicDirs(java.lang.String)>[]--><io.github.muntashirakon.AppManager.misc.OsEnvironment: void throwIfUserRequired()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void <init>()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.servermanager.LocalServer getInstance()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void <init>()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$10$RunningAppsAdapter(android.content.pm.ApplicationInfo)>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()>[]--><androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsAdapter: void lambda$null$4$RunningAppsAdapter()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.SingleDocumentFile: boolean isVirtual()>[]--><androidx.documentfile.provider.DocumentsContractApi19: boolean isVirtual(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>[]--><androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>[]--><androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkFile$Entry: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$onCreateDialog$4$BackupDialogFragment(android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void handleMode()>[]--><io.github.muntashirakon.AppManager.logs.Log: void e(java.lang.String,java.lang.String)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void onRefresh()>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppDetailsFragment: void lambda$onOptionsItemSelected$15$AppDetailsFragment()>[]--><io.github.muntashirakon.AppManager.details.AppDetailsViewModel: boolean ignoreDangerousAppOps()>[[try]]--><io.github.muntashirakon.AppManager.appops.AppOpsService: void setMode(int,int,java.lang.String,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult setOpsMode(java.lang.String,int,int)>[]--><io.github.muntashirakon.AppManager.servermanager.AppOpsManager: io.github.muntashirakon.AppManager.server.common.OpsResult wrapOps(io.github.muntashirakon.AppManager.server.common.OpsCommands$Builder)>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: io.github.muntashirakon.AppManager.server.common.CallerResult exec(io.github.muntashirakon.AppManager.server.common.Caller)>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServer: void checkConnect()>[[try]]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void start()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: io.github.muntashirakon.AppManager.servermanager.LocalServerManager$ClientSession getSession()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: void startServer()>[]--><io.github.muntashirakon.AppManager.servermanager.LocalServerManager: boolean useRootStartServer()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>[]--><androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>[]--><androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>[[try]]--><androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>[]--><androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>[]--><androidx.loader.app.LoaderManagerImpl: void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)>[]--><androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[[try]]--><androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)>[]--><androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>[[try]]--><net.dongliu.apk.parser.ApkParser: void close()>[[try]]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void close()>[]--><io.github.muntashirakon.AppManager.utils.IOUtils: void deleteSilently(java.io.File)>[]--><io.github.muntashirakon.AppManager.logs.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>[]--><io.github.muntashirakon.AppManager.logs.Log: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.runningapps.RunningAppsActivity: void refresh()>[]--><java.lang.Thread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$yW-UmmyfHEFTOThsPJ1TNfKjuF4': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity: void lambda$onCreate$0$ClassListingActivity(android.net.Uri)>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void run()>[]--><io.github.muntashirakon.AppManager.details.'-$$Lambda$ClassListingActivity$FillClassesNamesThread$ZttnyHNyGsTVki0TlOtVxU5Ncnk': void run()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$FillClassesNamesThread: void lambda$run$1$ClassListingActivity$FillClassesNamesThread()>[]--><io.github.muntashirakon.AppManager.details.ClassListingActivity$ClassListingAdapter: void <init>(android.app.Activity)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:true
containsTry:true
367call by main package
-----------------------------------------
#################################################
N 597 Potential Issue API: SDKCheck of <android.view.WindowInsets: int hashCode()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()>[]--><android.view.WindowInsets: int hashCode()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()> to <android.view.WindowInsets: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:209
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 598 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 28]][[$i0 < 29]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 28]][[$i0 < 29]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 28
$i0 < 29
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 28]][[$i0 < 29]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 28
$i0 < 29
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 28]][[$i0 < 29]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 28], [$i0 < 29], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 599 Potential Issue API: SDKCheck of <android.view.Menu: void setGroupDividerEnabled(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)>[[], [-$i0 < 28]]--><android.view.Menu: void setGroupDividerEnabled(boolean)>
#1.the call statck between class <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)> to <android.view.Menu: void setGroupDividerEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:210
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 600 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 601 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 602 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats.Bucket)> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats.Bucket)>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 603 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewAttachedToWindow(android.view.View)>[[-$i0 < 29]]--><android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()> to <android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>has compatibility isssues！
-----------------------------------------
crashApis:211
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 604 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setLocusId(android.content.LocusId)> is checking!!!
The life time of api is [29,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result performOp(int,java.util.List)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsManager: io.github.muntashirakon.AppManager.batchops.BatchOpsManager$Result opBackupRestore(int)>[]--><io.github.muntashirakon.AppManager.backup.BackupManager: boolean restore(java.lang.String[])>[]--><io.github.muntashirakon.AppManager.backup.BackupManager$RestoreOp: void <init>(io.github.muntashirakon.AppManager.backup.BackupManager,io.github.muntashirakon.AppManager.backup.BackupFiles$BackupFile,int)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean decrypt(java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean handleFiles(android.content.Intent,int,java.io.File[])>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocusId(android.content.LocusId)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocusId(android.content.LocusId)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
-$i0 < 29
$i0 < 17
$i0 < 28
$i0 < 26
$i0 < 16
$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocusId(android.content.LocusId)>
One road protect good!
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[-$i0 < 29]][[$i0 < 17]][[$i0 < 28]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [-$i0 < 29], [$i0 < 17], [$i0 < 28], [$i0 < 26], [$i0 < 16], [$i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocusId(android.content.LocusId)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 605 Potential Issue API: SDKCheck of <android.util.ArraySet: void <init>(android.util.ArraySet)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet cloneOrNull(android.util.ArraySet)>[]--><android.util.ArraySet: void <init>(android.util.ArraySet)>
#1.the call statck between class <io.github.muntashirakon.AppManager.utils.ArrayUtils: android.util.ArraySet cloneOrNull(android.util.ArraySet)> to <android.util.ArraySet: void <init>(android.util.ArraySet)>has compatibility isssues！
-----------------------------------------
crashApis:212
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 606 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 607 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:213
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 608 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 609 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 610 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 611 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 612 Potential Issue API: SDKCheck of <android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 613 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>[[-$i4 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 614 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 615 Potential Issue API: SDKCheck of <android.app.Person: boolean isBot()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
containsStatic:true
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 616 Potential Issue API: SDKCheck of <android.view.View: void setTransitionVisibility(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setTransitionVisibility(android.view.View,int)>[]--><android.view.View: void setTransitionVisibility(int)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setTransitionVisibility(android.view.View,int)> to <android.view.View: void setTransitionVisibility(int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try], [$i1 != 28]]
###Multi invoking in one method, need manual check!!!<androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try]][[$i1 != 28]]
try
Good road with try: <androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try], [$i1 != 28]]--><android.view.View: void setTransitionVisibility(int)>
One road protect good!
crashApis:214
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 617 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
366call roads:
1 Mainhead roads:
365 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void openInTermux()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runWithTermux(java.lang.String[])>[[try]]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runInTermux()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runWithTermux(java.lang.String[])>[[try]]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$9$OneClickOpsActivity(java.util.ArrayList,android.content.DialogInterface,int)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void access$000(io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerActivity: void launchInstallService()>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$23$OneClickOpsActivity(java.util.ArrayList,int[],android.content.DialogInterface,int)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$new$2$AppInfoFragment(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void openInTermux()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runWithTermux(java.lang.String[])>[[try]]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$6$BackupDialogFragment(java.lang.String[],boolean[],int,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$new$3$AppInfoFragment(java.lang.Boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runInTermux()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void runWithTermux(java.lang.String[])>[[try]]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$12$BackupDialogFragment(int,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$10$BackupDialogFragment(int,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$8$OneClickOpsActivity(java.util.ArrayList,android.content.DialogInterface,int)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$9$BackupDialogFragment(java.util.concurrent.atomic.AtomicInteger,int,java.lang.String[],android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.oneclickops.OneClickOpsActivity: void lambda$null$15$OneClickOpsActivity(java.util.ArrayList,java.lang.String[],android.content.DialogInterface,int)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$11$BackupDialogFragment(android.view.View,int,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void lambda$handleMode$7$BackupDialogFragment(int,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.backup.BackupDialogFragment: void startOperation(int,java.lang.String[])>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:true
containsTry:true
366call by main package
-----------------------------------------
#################################################
N 618 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 619 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 620 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[$i0 < 28]]
-$i0 < 24
$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [$i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 621 Potential Issue API: SDKCheck of <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)> to <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>has compatibility isssues！
-----------------------------------------
crashApis:215
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 622 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 30
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)>[[$i0 < 30]]--><androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 623 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets build()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets build()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()> to <android.view.WindowInsets.Builder: android.view.WindowInsets build()>has compatibility isssues！
-----------------------------------------
crashApis:216
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 624 Potential Issue API: SDKCheck of <android.widget.LinearLayout: void onRtlPropertiesChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)>[]--><android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)> to <android.widget.LinearLayout: void onRtlPropertiesChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:217
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 625 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person build()> is checking!!!
The life time of api is [28,31]
11call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 < 23
$i0 < 20
$i0 < 21
$i0 >= 21
$i0 < 19
$i0 < 17
$i0 < 26
$i0 < 16
$i0 < 24
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23]][[$i0 < 20]][[$i0 < 21]][[$i0 >= 21]][[$i0 < 19]][[$i0 < 17]][[$i0 < 26]][[$i0 < 16]][[$i0 < 24]][[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[$i0 < 23], [$i0 < 20], [$i0 < 21], [$i0 >= 21], [$i0 < 19], [$i0 < 17], [$i0 < 26], [$i0 < 16], [$i0 < 24], [-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()>[[-$i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i0 < 26
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-$i1 < 25
$i1 > 29
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
$i0 > 29
-$i0 < 25
-$i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-$i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 626 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 627 Potential Issue API: SDKCheck of <android.view.Display: android.view.Display.Mode[] getSupportedModes()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[[-$i0 < 23]]--><android.view.Display: android.view.Display.Mode[] getSupportedModes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 628 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)> is checking!!!
The life time of api is [23,31]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
$yysi0 < 21
-$z0 == 0
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-$yysi1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0]][[-$yysi1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
-$z0 == 0
-$yysi1 < 23
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-$yysi1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[$i1 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
$i0 < 21
$i1 < 21
-$i1 < 23
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)>[]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-$i1 < 23
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-$i1 < 23
Good road: <androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)>[]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]
$yysi0 < 21
-$z0 == 0
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-$z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: com.google.android.material.chip.Chip addChip(int,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence,int)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$16$AppInfoFragment(java.util.HashMap,boolean,boolean,boolean,boolean)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void addChip(java.lang.CharSequence)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-$i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
containsStatic:true
containsTry:false
32call by main package
-----------------------------------------
#################################################
N 629 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>[]--><androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>[]--><androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>[]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
-$i1 >= 21
try
Good road with try: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>[[-$i1 >= 21]]--><androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>[]--><androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 630 Potential Issue API: SDKCheck of <android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()>[]--><android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()> to <android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>has compatibility isssues！
-----------------------------------------
crashApis:218
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 631 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMaxTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMaxTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 632 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetTop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)>[]--><androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetTop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 633 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [24,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.EditShortcutDialogFragment: void lambda$onCreateDialog$2$EditShortcutDialogFragment(java.lang.String,java.lang.String[],androidx.fragment.app.FragmentActivity,android.content.DialogInterface,int)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
Good road: <io.github.muntashirakon.AppManager.details.AppDetailsFragment$AppDetailsRecyclerAdapter: void lambda$getActivityView$3$AppDetailsFragment$AppDetailsRecyclerAdapter(android.content.pm.ActivityInfo,android.view.View)>[]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void createLauncherIcon(android.content.Context,android.content.pm.ActivityInfo,java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>[[-$i0 < 26]]--><io.github.muntashirakon.AppManager.details.LauncherIconCreator: void doCreateShortcut(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent)>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25]][[$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
-$i1 < 25
$i1 > 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i1 < 25], [$i1 > 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29]][[-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]
$i0 > 29
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[$i0 > 29], [-$i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 634 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)>[[-$i1 < 23]]--><android.view.View: void setScrollIndicators(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 635 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getResId()> is checking!!!
The life time of api is [28,31]
13call roads:
1 Mainhead roads:
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.batchops.BatchOpsService dummyMainMethod_io_github_muntashirakon_AppManager_batchops_BatchOpsService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void onHandleIntent(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendResults(int,java.util.ArrayList)>[]--><io.github.muntashirakon.AppManager.batchops.BatchOpsService: void sendNotification(int,java.util.ArrayList)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_AMPackageInstallerBroadcastReceiver(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.AMPackageInstallerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService dummyMainMethod_io_github_muntashirakon_AppManager_apk_installer_PackageInstallerService(android.content.Intent)>[]--><io.github.muntashirakon.AppManager.apk.installer.PackageInstallerService: void onHandleIntent(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
12 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean access$200(io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto,android.content.Intent,int,boolean)>[]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: boolean doAction(android.content.Intent,int,boolean)>[[try]]--><io.github.muntashirakon.AppManager.crypto.OpenPGPCrypto: void handleResult(android.content.Intent)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
try
Good road with try: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[[try]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28]][[-$i1 < 23]][[$i1 < 29]][[$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
$i0 < 28
-$i1 < 23
$i1 < 29
$i0 < 24
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[$i0 < 28], [-$i1 < 23], [$i1 < 29], [$i0 < 24]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
$i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0]][[-$i1 < 28]][[$i2 < 21]][[-$yysi0 < 29]][[-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-$z0 == 0
-$i1 < 28
$i2 < 21
-$yysi0 < 29
-$z0 != 0
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>[[-$z0 == 0], [-$i1 < 28], [$i2 < 21], [-$yysi0 < 29], [-$z0 != 0]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 28
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>[[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
containsStatic:true
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 636 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 637 Potential Issue API: SDKCheck of <android.view.WindowInsets.Type: int tappableElement()> is checking!!!
The life time of api is [30,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 
Error road: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>[]--><android.view.WindowInsets.Type: int tappableElement()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)> to <android.view.WindowInsets.Type: int tappableElement()>has compatibility isssues！
-----------------------------------------
crashApis:219
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 638 Potential Issue API: SDKCheck of <android.app.usage.NetworkStats.Bucket: int getUid()> is checking!!!
The life time of api is [23,31]
354call roads:
1 Mainhead roads:
353 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23]][[try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setDataUsage()>[[-$i0 < 23], [try]]--><io.github.muntashirakon.AppManager.usage.AppUsageStatsManager: io.github.muntashirakon.AppManager.utils.Tuple getWifiMobileUsageForPackage(android.content.Context,java.lang.String,int)>[[try]]--><android.app.usage.NetworkStats.Bucket: int getUid()>
One road protect good!
containsStatic:true
containsTry:true
354call by main package
-----------------------------------------
#################################################
N 639 Potential Issue API: SDKCheck of <android.content.pm.PackageInfo: long getLongVersionCode()> is checking!!!
The life time of api is [28,31]
359call roads:
1 Mainhead roads:
358 Packageshead roads:
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setMoreInfo()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void lambda$loadApplicationItems$3$MainViewModel()>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$000(io.github.muntashirakon.AppManager.main.MainViewModel,int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForUid(int,java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
-$i1 < 28
Good road: <io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder: io.github.muntashirakon.AppManager.apk.whatsnew.ApkWhatsNewFinder$Change[][] getWhatsNew(android.content.pm.PackageInfo,android.content.pm.PackageInfo)>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.main.MainViewModel: void access$100(io.github.muntashirakon.AppManager.main.MainViewModel,java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void updateInfoForPackages(java.lang.String[],java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: void removePackageIfNoBackup(java.lang.String)>[]--><io.github.muntashirakon.AppManager.main.MainViewModel: io.github.muntashirakon.AppManager.main.ApplicationItem getNewApplicationItem(java.lang.String)>[[try]]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
-$i1 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$setHeaders$14$AppInfoFragment()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$onOptionsItemSelected$8$AppInfoFragment()>[[try]]--><io.github.muntashirakon.AppManager.apk.ApkUtils: java.io.File getSharableApkFile(android.content.pm.PackageInfo)>[[-$yysi0 < 26]]--><io.github.muntashirakon.AppManager.apk.splitapk.SplitApkExporter: void saveApks(android.content.pm.PackageInfo,java.io.File)>[[try]]--><io.github.muntashirakon.AppManager.apk.splitapk.ApksMetadata: void setupMetadata()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
-$i1 < 28
Good road: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$sAPGvirKKxPjgMPUIWfF96ufZSg(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setHorizontalActions()>[]--><io.github.muntashirakon.AppManager.utils.PackageUtils: long getVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
containsStatic:true
containsTry:true
359call by main package
-----------------------------------------
#################################################
N 640 Potential Issue API: SDKCheck of <android.view.View: java.util.List getSystemGestureExclusionRects()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: java.util.List getSystemGestureExclusionRects(android.view.View)>[[-$i0 < 29]]--><android.view.View: java.util.List getSystemGestureExclusionRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 641 Potential Issue API: SDKCheck of <android.text.Html: java.lang.String toHtml(android.text.Spanned,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>[[-$i1 < 24]]--><android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 642 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[$i2 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 643 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>[]--><android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)> to <android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>has compatibility isssues！
-----------------------------------------
crashApis:220
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 644 Potential Issue API: SDKCheck of <android.app.usage.StorageStats: long getDataBytes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]
###Multi invoking in one method, need manual check!!!--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26]][[try]][[-$yysi0 < 29]]
try
Good road with try: <io.github.muntashirakon.AppManager.details.AppInfoFragment: void lambda$iUZ5_WELWdb4Jr7X4jMSN-jiZa0(io.github.muntashirakon.AppManager.details.AppInfoFragment)>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void getPackageInfo()>[]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setVerticalView()>[[try]]--><io.github.muntashirakon.AppManager.details.AppInfoFragment: void setStorageAndCache()>[[$i0 >= 26], [try], [-$yysi0 < 29]]--><android.app.usage.StorageStats: long getDataBytes()>
One road protect good!
containsStatic:true
containsTry:true
2call by main package
-----------------------------------------
crashApis numbers:220
crashApis numbers in main road:16
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 20 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 21 this app may have error api use(at least): 212 and error api roads: 319
On Android Version 22 this app may have error api use(at least): 208 and error api roads: 303
On Android Version 23 this app may have error api use(at least): 175 and error api roads: 228
On Android Version 24 this app may have error api use(at least): 147 and error api roads: 191
On Android Version 25 this app may have error api use(at least): 123 and error api roads: 164
On Android Version 26 this app may have error api use(at least): 89 and error api roads: 129
On Android Version 27 this app may have error api use(at least): 90 and error api roads: 135
On Android Version 28 this app may have error api use(at least): 68 and error api roads: 112
On Android Version 29 this app may have error api use(at least): 25 and error api roads: 30
On Android Version 30 this app may have error api use(at least): 3 and error api roads: 8
On Android Version 31 this app may have error api use(at least): 7 and error api roads: 12
