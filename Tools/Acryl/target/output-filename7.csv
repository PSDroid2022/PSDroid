app	version	sdk_min	sdk_trg	method	fromLine	toLine	apis	alternative	ruleCheck	warning	message	confidence
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.TextViewCompat$OreoCallback.isSupportedActivity(Landroid/content/pm/ResolveInfo;Landroid/content/Context;)Z	-1	-1	android.content.Context.checkSelfPermission(Ljava/lang/String;)I		SDK_INT <= 22	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 22). Check the Android version before using them. "	12.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextClassifierHelper.getTextClassifier()Landroid/view/textclassifier/TextClassifier;	-1	-1	android.content.Context.getSystemService(Ljava/lang/Class;)Ljava/lang/Object;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getId()Ljava/lang/String;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getDisabledMessage()Ljava/lang/CharSequence;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getShortLabel()Ljava/lang/CharSequence;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getRank()I		SDK_INT <= 24	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 24). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getRank()I		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getActivity()Landroid/content/ComponentName;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat$Builder.<init>(Landroid/content/Context;Landroid/content/pm/ShortcutInfo;)V	-1	-1	android.content.pm.ShortcutInfo.getLongLabel()Ljava/lang/CharSequence;		SDK_INT <= 23	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 23). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.IconCompat.toIcon(Landroid/content/Context;)Landroid/graphics/drawable/Icon;	-1	-1	android.graphics.drawable.Icon.createWithBitmap(Landroid/graphics/Bitmap;)Landroid/graphics/drawable/Icon;		SDK_INT <= 22	BackwardCriticalBug	"[Critical] The APIs you are using must be used only in new Android versions (SDK_INT <= 22). Check the Android version before using them. "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask.doInBackground([Ljava/lang/Object;)Ljava/lang/Void;	-1	-1	android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;	android.content.ContentValues.<init>()V&android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Integer;)V&android.content.Context.getApplicationInfo()Landroid/content/pm/ApplicationInfo;&android.content.Context.getDatabasePath(Ljava/lang/String;)Ljava/io/File;&org.json.JSONArray.<init>(Ljava/util/Collection;)V&org.json.JSONObject.toString()Ljava/lang/String;&android.os.SystemClock.elapsedRealtime()J&android.content.ComponentName.<init>(Landroid/content/Context;Ljava/lang/Class;)V&android.util.SparseArray.<init>()V&android.database.sqlite.SQLiteOpenHelper.<init>(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V&android.content.Context.getApplicationContext()Landroid/content/Context;&android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;&android.os.BaseBundle.containsKey(Ljava/lang/String;)Z&org.json.JSONObject.<init>(Ljava/util/Map;)V&android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/String;)V&android.content.SharedPreferences$Editor.apply()V&android.content.Intent.setAction(Ljava/lang/String;)Landroid/content/Intent;&android.content.SharedPreferences$Editor.putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;&android.content.Intent.<init>(Ljava/lang/String;)V&android.content.SharedPreferences$Editor.clear()Landroid/content/SharedPreferences$Editor;&org.json.JSONObject.put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;&android.content.Context.getPackageManager()Landroid/content/pm/PackageManager;&android.content.SharedPreferences.edit()Landroid/content/SharedPreferences$Editor;&org.json.JSONObject.optString(Ljava/lang/String;)Ljava/lang/String;&android.os.Looper.getMainLooper()Landroid/os/Looper;&android.content.SharedPreferences$Editor.putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;&android.content.SharedPreferences$Editor.putInt(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;&android.content.Context.getNoBackupFilesDir()Ljava/io/File;&android.content.Intent.<init>(Ljava/lang/String;Landroid/net/Uri;)V&android.content.Context.getPackageName()Ljava/lang/String;&android.content.ContentValues.putNull(Ljava/lang/String;)V&android.content.SharedPreferences$Editor.remove(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;&android.content.pm.PackageManager.getServiceInfo(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;&android.content.Context.getFileStreamPath(Ljava/lang/String;)Ljava/io/File;&android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Boolean;)V&org.json.JSONObject.<init>(Ljava/lang/String;)V&android.util.SparseArray.get(I)Ljava/lang/Object;&android.text.TextUtils.isEmpty(Ljava/lang/CharSequence;)Z&android.content.pm.PackageManager.queryBroadcastReceivers(Landroid/content/Intent;I)Ljava/util/List;&org.json.JSONObject.keys()Ljava/util/Iterator;&android.os.Handler.<init>(Landroid/os/Looper;)V&android.content.SharedPreferences$Editor.putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;&android.os.BaseBundle.getInt(Ljava/lang/String;)I&android.net.Uri.parse(Ljava/lang/String;)Landroid/net/Uri;&android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V&android.os.ResultReceiver.<init>(Landroid/os/Handler;)V&org.json.JSONObject.<init>()V&android.content.Context.getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;	SDK_INT <= -1	ForwardImprovement	"[Info] You should use alternative APIs, since you do not support old Android versions (SDK_INT <= -1). Please, use: android.content.ContentValues.<init>()V --- android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Integer;)V --- android.content.Context.getApplicationInfo()Landroid/content/pm/ApplicationInfo; --- android.content.Context.getDatabasePath(Ljava/lang/String;)Ljava/io/File; --- org.json.JSONArray.<init>(Ljava/util/Collection;)V --- org.json.JSONObject.toString()Ljava/lang/String; --- android.os.SystemClock.elapsedRealtime()J --- android.content.ComponentName.<init>(Landroid/content/Context;Ljava/lang/Class;)V --- android.util.SparseArray.<init>()V --- android.database.sqlite.SQLiteOpenHelper.<init>(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V --- android.content.Context.getApplicationContext()Landroid/content/Context; --- android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream; --- android.os.BaseBundle.containsKey(Ljava/lang/String;)Z --- org.json.JSONObject.<init>(Ljava/util/Map;)V --- android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/String;)V --- android.content.SharedPreferences$Editor.apply()V --- android.content.Intent.setAction(Ljava/lang/String;)Landroid/content/Intent; --- android.content.SharedPreferences$Editor.putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor; --- android.content.Intent.<init>(Ljava/lang/String;)V --- android.content.SharedPreferences$Editor.clear()Landroid/content/SharedPreferences$Editor; --- org.json.JSONObject.put(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject; --- android.content.Context.getPackageManager()Landroid/content/pm/PackageManager; --- android.content.SharedPreferences.edit()Landroid/content/SharedPreferences$Editor; --- org.json.JSONObject.optString(Ljava/lang/String;)Ljava/lang/String; --- android.os.Looper.getMainLooper()Landroid/os/Looper; --- android.content.SharedPreferences$Editor.putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor; --- android.content.SharedPreferences$Editor.putInt(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor; --- android.content.Context.getNoBackupFilesDir()Ljava/io/File; --- android.content.Intent.<init>(Ljava/lang/String;Landroid/net/Uri;)V --- android.content.Context.getPackageName()Ljava/lang/String; --- android.content.ContentValues.putNull(Ljava/lang/String;)V --- android.content.SharedPreferences$Editor.remove(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor; --- android.content.pm.PackageManager.getServiceInfo(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo; --- android.content.Context.getFileStreamPath(Ljava/lang/String;)Ljava/io/File; --- android.content.ContentValues.put(Ljava/lang/String;Ljava/lang/Boolean;)V --- org.json.JSONObject.<init>(Ljava/lang/String;)V --- android.util.SparseArray.get(I)Ljava/lang/Object; --- android.text.TextUtils.isEmpty(Ljava/lang/CharSequence;)Z --- android.content.pm.PackageManager.queryBroadcastReceivers(Landroid/content/Intent;I)Ljava/util/List; --- org.json.JSONObject.keys()Ljava/util/Iterator; --- android.os.Handler.<init>(Landroid/os/Looper;)V --- android.content.SharedPreferences$Editor.putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor; --- android.os.BaseBundle.getInt(Ljava/lang/String;)I --- android.net.Uri.parse(Ljava/lang/String;)Landroid/net/Uri; --- android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V --- android.os.ResultReceiver.<init>(Landroid/os/Handler;)V --- org.json.JSONObject.<init>()V --- android.content.Context.getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;."	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setLayerType(Landroid/view/View;ILandroid/graphics/Paint;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable.run()V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.slidingpanelayout.widget.SlidingPaneLayout.dimChildView(Landroid/view/View;FI)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Fade$FadeAnimatorListener.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Fade$FadeAnimatorListener.onAnimationStart(Landroid/animation/Animator;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager.widget.ViewPager.enableLayers(Z)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14.onAnimationStart(Landroid/view/View;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.GhostViewPort.<init>(Landroid/view/View;)V	-1	-1	android.view.View.setLayerType(ILandroid/graphics/Paint;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	17.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.initialize(Landroidx/cardview/widget/CardViewDelegate;Landroid/content/Context;Landroid/content/res/ColorStateList;FFF)V	-1	-1	android.view.View.setElevation(F)V		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	8.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.setElevation(Landroidx/cardview/widget/CardViewDelegate;F)V	-1	-1	android.view.View.setElevation(F)V		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	8.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.ScrollerCompat.<init>(Landroid/content/Context;Landroid/view/animation/Interpolator;)V	-1	-1	android.widget.OverScroller.<init>(Landroid/content/Context;)V	android.widget.Scroller.<init>(Landroid/content/Context;)V	SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: android.widget.Scroller.<init>(Landroid/content/Context;)V"	6.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.init(Landroid/content/Context;)V	-1	-1	android.widget.OverScroller.<init>(Landroid/content/Context;)V	android.widget.Scroller.<init>(Landroid/content/Context;)V	SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: android.widget.Scroller.<init>(Landroid/content/Context;)V"	6.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.initScrollView()V	-1	-1	android.widget.OverScroller.<init>(Landroid/content/Context;)V	android.widget.Scroller.<init>(Landroid/content/Context;)V	SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: android.widget.Scroller.<init>(Landroid/content/Context;)V"	6.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.setupAnimatorToVisibility(IJ)Landroidx/core/view/ViewPropertyAnimatorCompat;	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ScrollingTabContainerView.animateToVisibility(I)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.makeRemovedFragmentsInvisible(Landroidx/collection/ArraySet;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.completeExecute(Landroidx/fragment/app/BackStackRecord;ZZZ)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.moveFragmentToExpectedState(Landroidx/fragment/app/Fragment;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$4.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doHide(Z)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsApi19.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$7.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateAdd(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	5.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(Z)V	-1	-1	android.widget.TextView.setAllCaps(Z)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	4.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.WrappedDrawableApi21.setTintList(Landroid/content/res/ColorStateList;)V	-1	-1	android.graphics.drawable.Drawable.setTintList(Landroid/content/res/ColorStateList;)V		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	4.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter.getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;	-1	-1	android.view.View.setActivated(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter.getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;	-1	-1	android.view.View.setActivated(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.net.TrafficStatsCompat.setThreadStatsTag(I)V	-1	-1	android.net.TrafficStats.setThreadStatsTag(I)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setActivated(Landroid/view/View;Z)V	-1	-1	android.view.View.setActivated(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setFitsSystemWindows(Landroid/view/View;Z)V	-1	-1	android.view.View.setFitsSystemWindows(Z)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextView.setCompoundDrawablesRelativeWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	-1	-1	android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	SDK_INT <= 16	BackwardImprovement	"If you want to support older versions (<= 16), add a check and handle using these APIs: android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V"	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.ActivityCompat.invalidateOptionsMenu(Landroid/app/Activity;)Z	-1	-1	android.app.Activity.invalidateOptionsMenu()V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.coordinatorlayout.widget.CoordinatorLayout.setFitsSystemWindows(Z)V	-1	-1	android.view.View.setFitsSystemWindows(Z)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentActivity.supportInvalidateOptionsMenu()V	-1	-1	android.app.Activity.invalidateOptionsMenu()V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	3.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AlertController$AlertParams.createListView(Landroidx/appcompat/app/AlertController;)V	-1	-1	android.widget.AbsListView.setChoiceMode(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AlertController$AlertParams.createListView(Landroidx/appcompat/app/AlertController;)V	-1	-1	android.widget.AbsListView.setChoiceMode(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.view.SupportMenuInflater$MenuState.setItem(Landroid/view/MenuItem;)V	-1	-1	android.view.MenuItem.setShowAsAction(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.setupAnimatorToVisibility(IJ)Landroidx/core/view/ViewPropertyAnimatorCompat;	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ScrollingTabContainerView.animateToVisibility(I)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.TooltipCompatHandler.onHover(Landroid/view/View;Landroid/view/MotionEvent;)Z	-1	-1	android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationManagerCompat.cancel(Ljava/lang/String;I)V	-1	-1	android.app.NotificationManager.cancel(Ljava/lang/String;I)V	android.app.NotificationManager.cancel(I)V	SDK_INT <= 4	BackwardImprovement	"If you want to support older versions (<= 4), add a check and handle using these APIs: android.app.NotificationManager.cancel(I)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationManagerCompat.notify(Ljava/lang/String;ILandroid/app/Notification;)V	-1	-1	android.app.NotificationManager.notify(Ljava/lang/String;ILandroid/app/Notification;)V	android.app.NotificationManager.notify(ILandroid/app/Notification;)V	SDK_INT <= 4	BackwardImprovement	"If you want to support older versions (<= 4), add a check and handle using these APIs: android.app.NotificationManager.notify(ILandroid/app/Notification;)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationManagerCompat.notify(Ljava/lang/String;ILandroid/app/Notification;)V	-1	-1	android.app.NotificationManager.cancel(Ljava/lang/String;I)V	android.app.NotificationManager.cancel(I)V	SDK_INT <= 4	BackwardImprovement	"If you want to support older versions (<= 4), add a check and handle using these APIs: android.app.NotificationManager.cancel(I)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.MenuCompat.setShowAsAction(Landroid/view/MenuItem;I)V	-1	-1	android.view.MenuItem.setShowAsAction(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.MenuItemCompat.setShowAsAction(Landroid/view/MenuItem;I)V	-1	-1	android.view.MenuItem.setShowAsAction(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.addAccessibilityPane(Landroid/view/View;)V	-1	-1	android.view.View.isAttachedToWindow()Z		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setTranslationY(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.tickleInvalidationFlag(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.tickleInvalidationFlag(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityManagerCompat.isTouchExplorationEnabled(Landroid/view/accessibility/AccessibilityManager;)Z	-1	-1	android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.ScrollerCompat.getCurrVelocity()F	-1	-1	android.widget.OverScroller.getCurrVelocity()F		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(Landroid/view/Menu;)V	-1	-1	android.view.MenuItem.setShowAsAction(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.makeRemovedFragmentsInvisible(Landroidx/collection/ArraySet;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.completeExecute(Landroidx/fragment/app/BackStackRecord;ZZZ)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.moveFragmentToExpectedState(Landroidx/fragment/app/Fragment;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$4.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$6.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$ViewFlinger.run()V	-1	-1	android.widget.OverScroller.getCurrVelocity()F		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TransitionUtils.createViewBitmap(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;Landroid/view/ViewGroup;)Landroid/graphics/Bitmap;	-1	-1	android.view.View.isAttachedToWindow()Z		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TransitionUtils.createViewBitmap(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;Landroid/view/ViewGroup;)Landroid/graphics/Bitmap;	-1	-1	android.view.View.isAttachedToWindow()Z		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator.createAnimation(Landroid/view/View;Landroidx/transition/TransitionValues;IIFFFFLandroid/animation/TimeInterpolator;Landroidx/transition/Transition;)Landroid/animation/Animator;	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	grmpl.mk.stepandheightcounter.SaveData.getDirectory()Ljava/io/File;	-1	-1	android.content.Context.getExternalFilesDir(Ljava/lang/String;)Ljava/io/File;	android.os.Environment.getExternalStorageDirectory()Ljava/io/File;	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.os.Environment.getExternalStorageDirectory()Ljava/io/File;"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doHide(Z)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.getElevation(Landroidx/cardview/widget/CardViewDelegate;)F	-1	-1	android.view.View.getElevation()F		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.initialize(Landroidx/cardview/widget/CardViewDelegate;Landroid/content/Context;Landroid/content/res/ColorStateList;FFF)V	-1	-1	android.view.View.setClipToOutline(Z)V		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ExploreByTouchHelper.requestAccessibilityFocus(I)Z	-1	-1	android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ExploreByTouchHelper.dispatchHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(Landroid/graphics/Canvas;Landroidx/recyclerview/widget/RecyclerView;Landroid/view/View;FFIZ)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform.setTransforms(Landroid/view/View;FFFFFFFF)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationPause(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationResume(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onTransitionEnd(Landroidx/transition/Transition;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsApi19.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager2.widget.MarginPageTransformer.transformPage(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.activity.ImmLeaksCleaner.onStateChanged(Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$Event;)V	-1	-1	android.view.View.isAttachedToWindow()Z		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$7.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.show(II)V	-1	-1	android.widget.AbsListView.setChoiceMode(I)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.WrappedDrawableApi21.setHotspot(FF)V	-1	-1	android.graphics.drawable.Drawable.setHotspot(FF)V		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateAdd(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V	android.view.animation.AlphaAnimation.<init>(FF)V&android.view.View.startAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.setFillAfter(Z)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.animation.AlphaAnimation.<init>(FF)V --- android.view.View.startAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.setFillAfter(Z)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.setActionBarHideOffset(I)V	-1	-1	android.view.View.setTranslationY(F)V	android.graphics.RectF.<init>()V&android.view.animation.Animation.setFillAfter(Z)V&android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V&android.view.View.getHeight()I&android.graphics.RectF.set(FFFF)V&android.view.View.getTop()I&android.graphics.Camera.rotateZ(F)V&android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z&android.view.View.invalidate(IIII)V&android.graphics.RectF.union(Landroid/graphics/RectF;)V&android.view.View.getAnimation()Landroid/view/animation/Animation;&android.view.View.getParent()Landroid/view/ViewParent;&android.graphics.Camera.restore()V&android.graphics.Matrix.<init>()V&android.graphics.Matrix.postTranslate(FF)Z&android.graphics.Matrix.reset()V&android.view.View.getLeft()I&android.graphics.Matrix.postScale(FF)Z&android.view.animation.Animation.setDuration(J)V&android.view.View.getWidth()I&android.graphics.Camera.rotateX(F)V&android.graphics.RectF.offset(FF)V&android.graphics.Camera.save()V&android.view.View.setAnimation(Landroid/view/animation/Animation;)V&android.view.animation.Animation.<init>()V&android.graphics.Camera.<init>()V&android.graphics.Matrix.preTranslate(FF)Z&android.graphics.Camera.rotateY(F)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.graphics.RectF.<init>()V --- android.view.animation.Animation.setFillAfter(Z)V --- android.graphics.Camera.getMatrix(Landroid/graphics/Matrix;)V --- android.view.View.getHeight()I --- android.graphics.RectF.set(FFFF)V --- android.view.View.getTop()I --- android.graphics.Camera.rotateZ(F)V --- android.graphics.Matrix.mapRect(Landroid/graphics/RectF;)Z --- android.view.View.invalidate(IIII)V --- android.graphics.RectF.union(Landroid/graphics/RectF;)V --- android.view.View.getAnimation()Landroid/view/animation/Animation; --- android.view.View.getParent()Landroid/view/ViewParent; --- android.graphics.Camera.restore()V --- android.graphics.Matrix.<init>()V --- android.graphics.Matrix.postTranslate(FF)Z --- android.graphics.Matrix.reset()V --- android.view.View.getLeft()I --- android.graphics.Matrix.postScale(FF)Z --- android.view.animation.Animation.setDuration(J)V --- android.view.View.getWidth()I --- android.graphics.Camera.rotateX(F)V --- android.graphics.RectF.offset(FF)V --- android.graphics.Camera.save()V --- android.view.View.setAnimation(Landroid/view/animation/Animation;)V --- android.view.animation.Animation.<init>()V --- android.graphics.Camera.<init>()V --- android.graphics.Matrix.preTranslate(FF)Z --- android.graphics.Camera.rotateY(F)V"	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.computeScroll()V	-1	-1	android.widget.OverScroller.getCurrVelocity()F		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.computeScroll()V	-1	-1	android.widget.OverScroller.getCurrVelocity()F		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	2.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.setActionBarDescription(Landroidx/appcompat/app/ActionBarDrawerToggleHoneycomb$SetIndicatorInfo;Landroid/app/Activity;I)Landroidx/appcompat/app/ActionBarDrawerToggleHoneycomb$SetIndicatorInfo;	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(Landroid/app/Activity;Landroid/graphics/drawable/Drawable;I)Landroidx/appcompat/app/ActionBarDrawerToggleHoneycomb$SetIndicatorInfo;	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AlertController.manageScrollIndicators(Landroid/view/View;Landroid/view/View;Landroid/view/View;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AlertController.manageScrollIndicators(Landroid/view/View;Landroid/view/View;Landroid/view/View;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6.run()V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.onConfigurationChanged(Landroid/content/res/Configuration;)V	-1	-1	android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V	android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.LinearLayout$LayoutParams.<init>(II)V&android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics;&android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V&android.view.ViewGroup.removeView(Landroid/view/View;)V&android.view.View.setEnabled(Z)V&android.widget.PopupWindow.dismiss()V&android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View;&android.view.View.post(Ljava/lang/Runnable;)Z&android.view.ViewTreeObserver.isAlive()Z&android.view.View.getParent()Landroid/view/ViewParent;&android.view.View.jumpDrawablesToCurrentState()V&android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V&android.view.View.setClickable(Z)V&android.view.View.setFocusable(Z)V&android.widget.PopupWindow.isShowing()Z&android.view.View.setPressed(Z)V&android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z&android.content.Context.getResources()Landroid/content/res/Resources;&android.widget.ImageView.setVisibility(I)V&android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V&android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater;&android.content.res.Resources.getDimensionPixelSize(I)I&android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V&android.view.ViewGroup.getChildCount()I&android.view.ViewGroup.addView(Landroid/view/View;I)V&android.view.ViewGroup.removeViewAt(I)V&android.widget.PopupWindow.setContentView(Landroid/view/View;)V&android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.LinearLayout$LayoutParams.<init>(II)V --- android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics; --- android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V --- android.view.ViewGroup.removeView(Landroid/view/View;)V --- android.view.View.setEnabled(Z)V --- android.widget.PopupWindow.dismiss()V --- android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View; --- android.view.View.post(Ljava/lang/Runnable;)Z --- android.view.ViewTreeObserver.isAlive()Z --- android.view.View.getParent()Landroid/view/ViewParent; --- android.view.View.jumpDrawablesToCurrentState()V --- android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V --- android.view.View.setClickable(Z)V --- android.view.View.setFocusable(Z)V --- android.widget.PopupWindow.isShowing()Z --- android.view.View.setPressed(Z)V --- android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z --- android.content.Context.getResources()Landroid/content/res/Resources; --- android.widget.ImageView.setVisibility(I)V --- android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V --- android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater; --- android.content.res.Resources.getDimensionPixelSize(I)I --- android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V --- android.view.ViewGroup.getChildCount()I --- android.view.ViewGroup.addView(Landroid/view/View;I)V --- android.view.ViewGroup.removeViewAt(I)V --- android.widget.PopupWindow.setContentView(Landroid/view/View;)V --- android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.onHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.onHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.View.onHoverEvent(Landroid/view/MotionEvent;)Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AbsActionBarView.setupAnimatorToVisibility(IJ)Landroidx/core/view/ViewPropertyAnimatorCompat;	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarContainer.onHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.View.onHoverEvent(Landroid/view/MotionEvent;)Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask.doInBackground([Ljava/lang/Object;)Ljava/lang/Void;	-1	-1	android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;	android.provider.Settings$System.canWrite(Landroid/content/Context;)Z&android.app.NotificationManager.isNotificationPolicyAccessGranted()Z&android.support.v4.content.ContextCompat.checkSelfPermission(Landroid/content/Context;Ljava/lang/String;)I&android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream;&android.telephony.PhoneNumberUtils.compare(Ljava/lang/String;Ljava/lang/String;)Z	SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: android.provider.Settings$System.canWrite(Landroid/content/Context;)Z --- android.app.NotificationManager.isNotificationPolicyAccessGranted()Z --- android.support.v4.content.ContextCompat.checkSelfPermission(Landroid/content/Context;Ljava/lang/String;)I --- android.content.Context.openFileOutput(Ljava/lang/String;I)Ljava/io/FileOutputStream; --- android.telephony.PhoneNumberUtils.compare(Ljava/lang/String;Ljava/lang/String;)Z"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserView$Callbacks.onClick(Landroid/view/View;)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActivityChooserView$Callbacks.onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatPopupWindow.<init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V	-1	-1	android.widget.PopupWindow.<init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V	android.view.ContextThemeWrapper.<init>(Landroid/content/Context;I)V&android.widget.PopupWindow.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.ContextThemeWrapper.<init>(Landroid/content/Context;I)V --- android.widget.PopupWindow.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(Z)V	-1	-1	android.widget.TextView.setAllCaps(Z)V	android.view.View.getContext()Landroid/content/Context;&android.support.v7.text.AllCapsTransformationMethod.<init>(Landroid/content/Context;)V&android.widget.TextView.setTransformationMethod(Landroid/text/method/TransformationMethod;)V	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getContext()Landroid/content/Context; --- android.support.v7.text.AllCapsTransformationMethod.<init>(Landroid/content/Context;)V --- android.widget.TextView.setTransformationMethod(Landroid/text/method/TransformationMethod;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(Z)V	-1	-1	android.widget.TextView.setAllCaps(Z)V	android.view.View.getContext()Landroid/content/Context;&android.content.res.Resources.getConfiguration()Landroid/content/res/Configuration;&android.widget.TextView.setTransformationMethod(Landroid/text/method/TransformationMethod;)V&android.content.Context.getResources()Landroid/content/res/Resources;	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getContext()Landroid/content/Context; --- android.content.res.Resources.getConfiguration()Landroid/content/res/Configuration; --- android.widget.TextView.setTransformationMethod(Landroid/text/method/TransformationMethod;)V --- android.content.Context.getResources()Landroid/content/res/Resources;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;II)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getIncludeFontPadding()Z		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;II)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getLineSpacingExtra()F		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuring(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;II)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getLineSpacingMultiplier()F		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuringPre23(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;I)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getLineSpacingExtra()F		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuringPre23(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;I)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getIncludeFontPadding()Z		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createStaticLayoutForMeasuringPre23(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;I)Landroid/text/StaticLayout;	-1	-1	android.widget.TextView.getLineSpacingMultiplier()F		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ButtonBarLayout.getMinimumHeight()I	-1	-1	android.view.View.getMinimumHeight()I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.DropDownListView.onForwardedEvent(Landroid/view/MotionEvent;I)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ForwardingListener.onTouchForwarded(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ForwardingListener.onTouchObserved(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.LinearLayoutCompat.onInitializeAccessibilityNodeInfo(Landroid/view/accessibility/AccessibilityNodeInfo;)V	-1	-1	android.view.accessibility.AccessibilityNodeInfo.setClassName(Ljava/lang/CharSequence;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ScrollingTabContainerView$TabView.onInitializeAccessibilityNodeInfo(Landroid/view/accessibility/AccessibilityNodeInfo;)V	-1	-1	android.view.accessibility.AccessibilityNodeInfo.setClassName(Ljava/lang/CharSequence;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ScrollingTabContainerView.animateToVisibility(I)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ScrollingTabContainerView.onConfigurationChanged(Landroid/content/res/Configuration;)V	-1	-1	android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V	android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.LinearLayout$LayoutParams.<init>(II)V&android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics;&android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V&android.view.ViewGroup.removeView(Landroid/view/View;)V&android.view.View.setEnabled(Z)V&android.widget.PopupWindow.dismiss()V&android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View;&android.view.View.post(Ljava/lang/Runnable;)Z&android.view.ViewTreeObserver.isAlive()Z&android.view.View.getParent()Landroid/view/ViewParent;&android.view.View.jumpDrawablesToCurrentState()V&android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V&android.view.View.setClickable(Z)V&android.view.View.setFocusable(Z)V&android.widget.PopupWindow.isShowing()Z&android.view.View.setPressed(Z)V&android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z&android.content.Context.getResources()Landroid/content/res/Resources;&android.widget.ImageView.setVisibility(I)V&android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V&android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater;&android.content.res.Resources.getDimensionPixelSize(I)I&android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V&android.view.ViewGroup.getChildCount()I&android.view.ViewGroup.addView(Landroid/view/View;I)V&android.view.ViewGroup.removeViewAt(I)V&android.widget.PopupWindow.setContentView(Landroid/view/View;)V&android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.LinearLayout$LayoutParams.<init>(II)V --- android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics; --- android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V --- android.view.ViewGroup.removeView(Landroid/view/View;)V --- android.view.View.setEnabled(Z)V --- android.widget.PopupWindow.dismiss()V --- android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View; --- android.view.View.post(Ljava/lang/Runnable;)Z --- android.view.ViewTreeObserver.isAlive()Z --- android.view.View.getParent()Landroid/view/ViewParent; --- android.view.View.jumpDrawablesToCurrentState()V --- android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V --- android.view.View.setClickable(Z)V --- android.view.View.setFocusable(Z)V --- android.widget.PopupWindow.isShowing()Z --- android.view.View.setPressed(Z)V --- android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z --- android.content.Context.getResources()Landroid/content/res/Resources; --- android.widget.ImageView.setVisibility(I)V --- android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V --- android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater; --- android.content.res.Resources.getDimensionPixelSize(I)I --- android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V --- android.view.ViewGroup.getChildCount()I --- android.view.ViewGroup.addView(Landroid/view/View;I)V --- android.view.ViewGroup.removeViewAt(I)V --- android.widget.PopupWindow.setContentView(Landroid/view/View;)V --- android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SwitchCompat.onInitializeAccessibilityNodeInfo(Landroid/view/accessibility/AccessibilityNodeInfo;)V	-1	-1	android.view.accessibility.AccessibilityNodeInfo.setClassName(Ljava/lang/CharSequence;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SwitchCompat.onPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V	-1	-1	android.view.View.onPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SwitchCompat.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.TintTypedArray.getChangingConfigurations()I	-1	-1	android.content.res.TypedArray.getChangingConfigurations()I		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.Toolbar.onHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.View.onHoverEvent(Landroid/view/MotionEvent;)Z		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.Toolbar.onHoverEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.Toolbar.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompatJellybean.getActionFromBundle(Landroid/os/Bundle;)Landroidx/core/app/NotificationCompat$Action;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompatJellybean.getActionFromBundle(Landroid/os/Bundle;)Landroidx/core/app/NotificationCompat$Action;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.ShareCompat$IntentBuilder.<init>(Landroid/content/Context;Landroid/content/ComponentName;)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.TaskStackBuilder.getIntents()[Landroid/content/Intent;	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.TaskStackBuilder.getPendingIntent(IILandroid/os/Bundle;)Landroid/app/PendingIntent;	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.TaskStackBuilder.startActivities(Landroid/os/Bundle;)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.TaskStackBuilder.startActivities(Landroid/os/Bundle;)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.content.pm.ShortcutInfoCompat.getPersonsFromExtra(Landroid/os/PersistableBundle;)[Landroidx/core/app/Person;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.provider.FontsContractCompat.getProvider(Landroid/content/pm/PackageManager;Landroidx/core/provider/FontRequest;Landroid/content/res/Resources;)Landroid/content/pm/ProviderInfo;	-1	-1	android.content.pm.PackageManager.getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.AccessibilityDelegateCompat.performAccessibilityAction(Landroid/view/View;ILandroid/os/Bundle;)Z	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.DragStartHelper.onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getButtonState()I		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.KeyEventDispatcher.activitySuperDispatchKeyEventPre28(Landroid/app/Activity;Landroid/view/KeyEvent;)Z	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.MotionEventCompat.getActionMasked(Landroid/view/MotionEvent;)I	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.MotionEventCompat.getButtonState(Landroid/view/MotionEvent;)I	-1	-1	android.view.MotionEvent.getButtonState()I		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.VelocityTrackerCompat.getXVelocity(Landroid/view/VelocityTracker;I)F	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.VelocityTrackerCompat.getYVelocity(Landroid/view/VelocityTracker;I)F	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.addAccessibilityPane(Landroid/view/View;)V	-1	-1	android.view.View.isAttachedToWindow()Z	android.view.View.getWindowToken()Landroid/os/IBinder;	SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: android.view.View.getWindowToken()Landroid/os/IBinder;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.canScrollVertically(Landroid/view/View;I)Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.getOverScrollMode(Landroid/view/View;)I	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.getTranslationX(Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.getTranslationY(Landroid/view/View;)F	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.onPopulateAccessibilityEvent(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V	-1	-1	android.view.View.onPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setRotation(Landroid/view/View;F)V	-1	-1	android.view.View.setRotation(F)V	android.view.View.invalidate()V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.invalidate()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setRotation(Landroid/view/View;F)V	-1	-1	android.view.View.setRotation(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setSaveFromParentEnabled(Landroid/view/View;Z)V	-1	-1	android.view.View.setSaveFromParentEnabled(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setTranslationX(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.setTranslationY(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.tickleInvalidationFlag(Landroid/view/View;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.tickleInvalidationFlag(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.ViewCompat.tickleInvalidationFlag(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getText()Ljava/lang/CharSequence;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(Ljava/lang/CharSequence;)V	-1	-1	android.view.accessibility.AccessibilityNodeInfo.setClassName(Ljava/lang/CharSequence;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.AutoScrollHelper.onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.releaseViewForPointerUp()V	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.releaseViewForPointerUp()V	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.canScroll(Landroid/view/View;ZIIII)Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.flingCapturedView(IIII)V	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.flingCapturedView(IIII)V	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.processTouchEvent(Landroid/view/MotionEvent;)V	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.settleCapturedViewAt(II)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.settleCapturedViewAt(II)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.customview.widget.ViewDragHelper.shouldInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.drawerlayout.widget.DrawerLayout$1.onApplyWindowInsets(Landroid/view/View;Landroid/view/WindowInsets;)Landroid/view/WindowInsets;	-1	-1	android.view.WindowInsets.getSystemWindowInsetTop()I		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.drawerlayout.widget.DrawerLayout.onInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentContainerView.setLayoutTransition(Landroid/animation/LayoutTransition;)V	-1	-1	android.view.ViewGroup.setLayoutTransition(Landroid/animation/LayoutTransition;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.makeRemovedFragmentsInvisible(Landroidx/collection/ArraySet;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.completeExecute(Landroidx/fragment/app/BackStackRecord;ZZZ)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentManager.moveFragmentToExpectedState(Landroidx/fragment/app/Fragment;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentStateManager.createView(Landroidx/fragment/app/FragmentContainer;)V	-1	-1	android.view.View.setSaveFromParentEnabled(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentStateManager.ensureInflatedView()V	-1	-1	android.view.View.setSaveFromParentEnabled(Z)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentStateManager.restoreState(Ljava/lang/ClassLoader;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.Preference.getPersistedStringSet(Ljava/util/Set;)Ljava/util/Set;	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.Preference.getPersistedStringSet(Ljava/util/Set;)Ljava/util/Set;	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;	android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&org.json.JSONObject.<init>(Ljava/lang/String;)V&org.json.JSONArray.getString(I)Ljava/lang/String;&org.json.JSONArray.<init>(Ljava/lang/String;)V&org.json.JSONArray.length()I&org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; --- org.json.JSONObject.<init>(Ljava/lang/String;)V --- org.json.JSONArray.getString(I)Ljava/lang/String; --- org.json.JSONArray.<init>(Ljava/lang/String;)V --- org.json.JSONArray.length()I --- org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.PreferenceDialogFragment.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$4.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$6.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$6.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$7.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator$8.onAnimationEnd(Landroid/animation/Animator;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.update()V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.update()V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityEvent(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;Landroid/view/accessibility/AccessibilityEvent;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityEvent(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;Landroid/view/accessibility/AccessibilityEvent;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.onInitializeAccessibilityNodeInfo(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;)V	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;ILandroid/os/Bundle;)Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$LayoutManager.performAccessibilityAction(Landroidx/recyclerview/widget/RecyclerView$Recycler;Landroidx/recyclerview/widget/RecyclerView$State;ILandroid/os/Bundle;)Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$ViewFlinger.run()V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView$ViewFlinger.run()V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.slidingpanelayout.widget.SlidingPaneLayout.onInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.slidingpanelayout.widget.SlidingPaneLayout.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform$Transforms.<init>(Landroid/view/View;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform$Transforms.<init>(Landroid/view/View;)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TransitionUtils.createViewBitmap(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;Landroid/view/ViewGroup;)Landroid/graphics/Bitmap;	-1	-1	android.view.View.isAttachedToWindow()Z	android.view.View.getWindowToken()Landroid/os/IBinder;	SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: android.view.View.getWindowToken()Landroid/os/IBinder;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TransitionUtils.createViewBitmap(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;Landroid/view/ViewGroup;)Landroid/graphics/Bitmap;	-1	-1	android.view.View.isAttachedToWindow()Z	android.view.View.getWindowToken()Landroid/os/IBinder;	SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: android.view.View.getWindowToken()Landroid/os/IBinder;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator.createAnimation(Landroid/view/View;Landroidx/transition/TransitionValues;IIFFFFLandroid/animation/TimeInterpolator;Landroidx/transition/Transition;)Landroid/animation/Animator;	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator.createAnimation(Landroid/view/View;Landroidx/transition/TransitionValues;IIFFFFLandroid/animation/TimeInterpolator;Landroidx/transition/Transition;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator.createAnimation(Landroid/view/View;Landroidx/transition/TransitionValues;IIFFFFLandroid/animation/TimeInterpolator;Landroidx/transition/Transition;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator.createAnimation(Landroid/view/View;Landroidx/transition/TransitionValues;IIFFFFLandroid/animation/TimeInterpolator;Landroidx/transition/Transition;)Landroid/animation/Animator;	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewGroupUtilsApi14.suppressLayout(Landroid/view/ViewGroup;Z)V	-1	-1	android.view.ViewGroup.setLayoutTransition(Landroid/animation/LayoutTransition;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewGroupUtilsApi14.suppressLayout(Landroid/view/ViewGroup;Z)V	-1	-1	android.view.ViewGroup.setLayoutTransition(Landroid/animation/LayoutTransition;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewGroupUtilsApi14.suppressLayout(Landroid/view/ViewGroup;Z)V	-1	-1	android.view.ViewGroup.setLayoutTransition(Landroid/animation/LayoutTransition;)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setRotation(F)V	android.view.View.invalidate()V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.invalidate()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setRotation(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setRotation(F)V	android.view.View.invalidate()V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.invalidate()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setRotation(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setAnimationMatrix(Landroid/view/View;Landroid/graphics/Matrix;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsBase.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager.widget.ViewPager.draw(Landroid/graphics/Canvas;)V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager.widget.ViewPager.endFakeDrag()V	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager.widget.ViewPager.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager2.widget.ViewPager2.canScrollVertically(I)Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager2.widget.ViewPager2.setLayoutDirection(I)V	-1	-1	android.view.View.setLayoutDirection(I)V		SDK_INT <= 16	BackwardImprovement	"If you want to support older versions (<= 16), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	grmpl.mk.stepandheightcounter.SensorService.getDetailSave(Ljava/lang/String;)Z	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	grmpl.mk.stepandheightcounter.SensorService.getDetailSave(Ljava/lang/String;)Z	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;	android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&org.json.JSONObject.<init>(Ljava/lang/String;)V&org.json.JSONArray.getString(I)Ljava/lang/String;&org.json.JSONArray.<init>(Ljava/lang/String;)V&org.json.JSONArray.length()I&org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; --- org.json.JSONObject.<init>(Ljava/lang/String;)V --- org.json.JSONArray.getString(I)Ljava/lang/String; --- org.json.JSONArray.<init>(Ljava/lang/String;)V --- org.json.JSONArray.length()I --- org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate.getActionBarThemedContext()Landroid/content/Context;	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate.isNavigationVisible()Z	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate.setActionBarUpIndicator(Landroid/graphics/drawable/Drawable;I)V	-1	-1	android.app.Activity.getActionBar()Landroid/app/ActionBar;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl.startSupportActionModeFromWindow(Landroidx/appcompat/view/ActionMode$Callback;)Landroidx/appcompat/view/ActionMode;	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doHide(Z)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar.doShow(Z)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.view.menu.MenuBuilder.restoreActionViewStates(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionMenuView.onConfigurationChanged(Landroid/content/res/Configuration;)V	-1	-1	android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V	android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.LinearLayout$LayoutParams.<init>(II)V&android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics;&android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V&android.view.ViewGroup.removeView(Landroid/view/View;)V&android.view.View.setEnabled(Z)V&android.widget.PopupWindow.dismiss()V&android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View;&android.view.View.post(Ljava/lang/Runnable;)Z&android.view.ViewTreeObserver.isAlive()Z&android.view.View.getParent()Landroid/view/ViewParent;&android.view.View.jumpDrawablesToCurrentState()V&android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V&android.view.View.setClickable(Z)V&android.view.View.setFocusable(Z)V&android.widget.PopupWindow.isShowing()Z&android.view.View.setPressed(Z)V&android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z&android.content.Context.getResources()Landroid/content/res/Resources;&android.widget.ImageView.setVisibility(I)V&android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V&android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater;&android.content.res.Resources.getDimensionPixelSize(I)I&android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V&android.view.ViewGroup.getChildCount()I&android.view.ViewGroup.addView(Landroid/view/View;I)V&android.view.ViewGroup.removeViewAt(I)V&android.widget.PopupWindow.setContentView(Landroid/view/View;)V&android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.LinearLayout$LayoutParams.<init>(II)V --- android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics; --- android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V --- android.view.ViewGroup.removeView(Landroid/view/View;)V --- android.view.View.setEnabled(Z)V --- android.widget.PopupWindow.dismiss()V --- android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View; --- android.view.View.post(Ljava/lang/Runnable;)Z --- android.view.ViewTreeObserver.isAlive()Z --- android.view.View.getParent()Landroid/view/ViewParent; --- android.view.View.jumpDrawablesToCurrentState()V --- android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V --- android.view.View.setClickable(Z)V --- android.view.View.setFocusable(Z)V --- android.widget.PopupWindow.isShowing()Z --- android.view.View.setPressed(Z)V --- android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z --- android.content.Context.getResources()Landroid/content/res/Resources; --- android.widget.ImageView.setVisibility(I)V --- android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V --- android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater; --- android.content.res.Resources.getDimensionPixelSize(I)I --- android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V --- android.view.ViewGroup.getChildCount()I --- android.view.ViewGroup.addView(Landroid/view/View;I)V --- android.view.ViewGroup.removeViewAt(I)V --- android.widget.PopupWindow.setContentView(Landroid/view/View;)V --- android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatButton.onInitializeAccessibilityNodeInfo(Landroid/view/accessibility/AccessibilityNodeInfo;)V	-1	-1	android.view.accessibility.AccessibilityNodeInfo.setClassName(Ljava/lang/CharSequence;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.AppCompatTextView.setCompoundDrawablesRelative(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	-1	-1	android.widget.TextView.setCompoundDrawablesRelative(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	android.widget.TextView.setCompoundDrawables(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V	SDK_INT <= 16	BackwardImprovement	"If you want to support older versions (<= 16), add a check and handle using these APIs: android.widget.TextView.setCompoundDrawables(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ListPopupWindow.setSelection(I)V	-1	-1	android.widget.AbsListView.getChoiceMode()I		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SearchView.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SearchView.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.SearchView.createIntent(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Landroid/content/Intent;	-1	-1	android.content.Intent.addFlags(I)Landroid/content/Intent;		SDK_INT <= 0	BackwardImprovement	"If you want to support older versions (<= 0), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.initialize(Landroidx/cardview/widget/CardViewDelegate;Landroid/content/Context;Landroid/content/res/ColorStateList;FFF)V	-1	-1	android.view.View.setElevation(F)V	android.support.v4.view.ViewCompat.setElevation(Landroid/view/View;F)V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.support.v4.view.ViewCompat.setElevation(Landroid/view/View;F)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.initialize(Landroidx/cardview/widget/CardViewDelegate;Landroid/content/Context;Landroid/content/res/ColorStateList;FFF)V	-1	-1	android.view.View.setElevation(F)V	android.view.View.invalidate()V&android.view.View.bringToFront()V&android.view.View.requestLayout()V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.view.View.invalidate()V --- android.view.View.bringToFront()V --- android.view.View.requestLayout()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.initialize(Landroidx/cardview/widget/CardViewDelegate;Landroid/content/Context;Landroid/content/res/ColorStateList;FFF)V	-1	-1	android.view.View.setElevation(F)V	android.view.View.requestLayout()V&android.graphics.drawable.Drawable.invalidateSelf()V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.view.View.requestLayout()V --- android.graphics.drawable.Drawable.invalidateSelf()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.setElevation(Landroidx/cardview/widget/CardViewDelegate;F)V	-1	-1	android.view.View.setElevation(F)V	android.support.v4.view.ViewCompat.setElevation(Landroid/view/View;F)V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.support.v4.view.ViewCompat.setElevation(Landroid/view/View;F)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.setElevation(Landroidx/cardview/widget/CardViewDelegate;F)V	-1	-1	android.view.View.setElevation(F)V	android.view.View.invalidate()V&android.view.View.bringToFront()V&android.view.View.requestLayout()V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.view.View.invalidate()V --- android.view.View.bringToFront()V --- android.view.View.requestLayout()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.cardview.widget.CardViewApi21Impl.setElevation(Landroidx/cardview/widget/CardViewDelegate;F)V	-1	-1	android.view.View.setElevation(F)V	android.view.View.requestLayout()V&android.graphics.drawable.Drawable.invalidateSelf()V	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.view.View.requestLayout()V --- android.graphics.drawable.Drawable.invalidateSelf()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$Action$WearableExtender.<init>(Landroidx/core/app/NotificationCompat$Action;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.app.NotificationCompat$WearableExtender.<init>(Landroid/app/Notification;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.RoundedBitmapDrawable21.gravityCompatApply(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V	-1	-1	android.view.Gravity.apply(IIILandroid/graphics/Rect;Landroid/graphics/Rect;I)V	android.view.Gravity.apply(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V	SDK_INT <= 16	BackwardImprovement	"If you want to support older versions (<= 16), add a check and handle using these APIs: android.view.Gravity.apply(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.WrappedDrawableApi14.isAutoMirrored()Z	-1	-1	android.graphics.drawable.Drawable.isAutoMirrored()Z	android.view.View.getContext()Landroid/content/Context;&android.content.Context.getApplicationInfo()Landroid/content/pm/ApplicationInfo;	SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: android.view.View.getContext()Landroid/content/Context; --- android.content.Context.getApplicationInfo()Landroid/content/pm/ApplicationInfo;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.WrappedDrawableApi14.setAutoMirrored(Z)V	-1	-1	android.graphics.drawable.Drawable.setAutoMirrored(Z)V		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.WindowInsetsCompat$Impl20.getSystemWindowInsets()Landroidx/core/graphics/Insets;	-1	-1	android.view.WindowInsets.getSystemWindowInsetLeft()I		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.WindowInsetsCompat$Impl20.getSystemWindowInsets()Landroidx/core/graphics/Insets;	-1	-1	android.view.WindowInsets.getSystemWindowInsetTop()I		SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments.getGranularity()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments.getX()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments.getY()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments.getColumn()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments.getRow()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments.getEnd()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments.getStart()I	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.ListPreferenceDialogFragment.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DividerItemDecoration.drawHorizontal(Landroid/graphics/Canvas;Landroidx/recyclerview/widget/RecyclerView;)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DividerItemDecoration.drawVertical(Landroid/graphics/Canvas;Landroidx/recyclerview/widget/RecyclerView;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper$2.onInterceptTouchEvent(Landroidx/recyclerview/widget/RecyclerView;Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper$2.onTouchEvent(Landroidx/recyclerview/widget/RecyclerView;Landroid/view/MotionEvent;)V	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.checkHorizontalSwipe(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;I)I	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.checkHorizontalSwipe(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;I)I	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.checkVerticalSwipe(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;I)I	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.checkVerticalSwipe(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;I)I	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.getSelectedDxDy([F)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchHelper.getSelectedDxDy([F)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(Landroid/graphics/Canvas;Landroidx/recyclerview/widget/RecyclerView;Landroid/view/View;FFIZ)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(Landroid/graphics/Canvas;Landroidx/recyclerview/widget/RecyclerView;Landroid/view/View;FFIZ)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.swiperefreshlayout.widget.SwipeRefreshLayout.canChildScrollUp()Z	-1	-1	android.view.View.canScrollVertically(I)Z	android.view.View.getPaddingTop()I&android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.AdapterView.getFirstVisiblePosition()I&android.view.View.getScrollY()I&android.view.ViewGroup.getChildCount()I&android.view.View.getTop()I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.view.View.getPaddingTop()I --- android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.AdapterView.getFirstVisiblePosition()I --- android.view.View.getScrollY()I --- android.view.ViewGroup.getChildCount()I --- android.view.View.getTop()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.swiperefreshlayout.widget.SwipeRefreshLayout.onInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.swiperefreshlayout.widget.SwipeRefreshLayout.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform.setTransforms(Landroid/view/View;FFFFFFFF)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform.setTransforms(Landroid/view/View;FFFFFFFF)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform.setTransforms(Landroid/view/View;FFFFFFFF)V	-1	-1	android.view.View.setRotation(F)V	android.view.View.invalidate()V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.invalidate()V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ChangeTransform.setTransforms(Landroid/view/View;FFFFFFFF)V	-1	-1	android.view.View.setRotation(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$CalculateSlideHorizontal.getGoneY(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$CalculateSlideVertical.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.<init>(Landroid/view/View;Landroid/view/View;IIFF)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.<init>(Landroid/view/View;Landroid/view/View;IIFF)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationCancel(Landroid/animation/Animator;)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationPause(Landroid/animation/Animator;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationPause(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationPause(Landroid/animation/Animator;)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationPause(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationResume(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onAnimationResume(Landroid/animation/Animator;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onTransitionEnd(Landroidx/transition/Transition;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.TranslationAnimationCreator$TransitionPositionListener.onTransitionEnd(Landroidx/transition/Transition;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.ViewUtilsApi19.setTransitionAlpha(Landroid/view/View;F)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.VisibilityPropagation.captureValues(Landroidx/transition/TransitionValues;)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.VisibilityPropagation.captureValues(Landroidx/transition/TransitionValues;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager2.widget.MarginPageTransformer.transformPage(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.viewpager2.widget.MarginPageTransformer.transformPage(Landroid/view/View;F)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.activity.ComponentActivity$2.onStateChanged(Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$Event;)V	-1	-1	android.view.View.cancelPendingInputEvents()V		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.activity.ImmLeaksCleaner.onStateChanged(Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$Event;)V	-1	-1	android.view.View.isAttachedToWindow()Z	android.view.View.getWindowToken()Landroid/os/IBinder;	SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: android.view.View.getWindowToken()Landroid/os/IBinder;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$6$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.AppCompatDelegateImpl$7.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.app.WindowDecorActionBar$1.onAnimationEnd(Landroid/view/View;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.IconCompat.createFromBundle(Landroid/os/Bundle;)Landroidx/core/graphics/drawable/IconCompat;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.IconCompat.createFromBundle(Landroid/os/Bundle;)Landroidx/core/graphics/drawable/IconCompat;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.IconCompat.createFromBundle(Landroid/os/Bundle;)Landroidx/core/graphics/drawable/IconCompat;	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.graphics.drawable.WrappedDrawableApi21.setTint(I)V	-1	-1	android.graphics.drawable.Drawable.setTint(I)V	android.support.v4.graphics.drawable.DrawableCompat.setTint(Landroid/graphics/drawable/Drawable;I)V&android.graphics.drawable.Drawable.mutate()Landroid/graphics/drawable/Drawable;&android.support.v4.graphics.drawable.DrawableCompat.wrap(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;	SDK_INT <= 20	BackwardImprovement	"If you want to support older versions (<= 20), add a check and handle using these APIs: android.support.v4.graphics.drawable.DrawableCompat.setTint(Landroid/graphics/drawable/Drawable;I)V --- android.graphics.drawable.Drawable.mutate()Landroid/graphics/drawable/Drawable; --- android.support.v4.graphics.drawable.DrawableCompat.wrap(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.Fragment$2.onStateChanged(Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$Event;)V	-1	-1	android.view.View.cancelPendingInputEvents()V		SDK_INT <= 18	BackwardImprovement	"If you want to support older versions (<= 18), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endChangeAnimationIfNecessary(Landroidx/recyclerview/widget/DefaultItemAnimator$ChangeInfo;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateAdd(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateChange(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;IIII)Z	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimation(Landroidx/recyclerview/widget/RecyclerView$ViewHolder;)V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setAlpha(F)V	android.view.View.setVisibility(I)V	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setVisibility(I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationX(F)V		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.CircularPropagation.getStartDelay(Landroid/view/ViewGroup;Landroidx/transition/Transition;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)J	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.CircularPropagation.getStartDelay(Landroid/view/ViewGroup;Landroidx/transition/Transition;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)J	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.calculateOut(Landroid/view/View;Landroid/graphics/Rect;[I)V	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.calculateOut(Landroid/view/View;Landroid/graphics/Rect;[I)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.onAppear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.onAppear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.onDisappear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Explode.onDisappear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.SidePropagation.getStartDelay(Landroid/view/ViewGroup;Landroidx/transition/Transition;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)J	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.SidePropagation.getStartDelay(Landroid/view/ViewGroup;Landroidx/transition/Transition;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)J	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$1.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$2.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$2.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$3.getGoneY(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$4.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$5.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$5.getGoneX(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide$6.getGoneY(Landroid/view/ViewGroup;Landroid/view/View;)F	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide.onAppear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide.onAppear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide.onDisappear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.transition.Slide.onDisappear(Landroid/view/ViewGroup;Landroid/view/View;Landroidx/transition/TransitionValues;Landroidx/transition/TransitionValues;)Landroid/animation/Animator;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.draw(Landroid/graphics/Canvas;)V	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.getActionBarHideOffset()I	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.onConfigurationChanged(Landroid/content/res/Configuration;)V	-1	-1	android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V	android.view.ViewGroup.getChildAt(I)Landroid/view/View;&android.widget.LinearLayout$LayoutParams.<init>(II)V&android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics;&android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V&android.view.ViewGroup.removeView(Landroid/view/View;)V&android.view.View.setEnabled(Z)V&android.widget.PopupWindow.dismiss()V&android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View;&android.view.View.post(Ljava/lang/Runnable;)Z&android.view.ViewTreeObserver.isAlive()Z&android.view.View.getParent()Landroid/view/ViewParent;&android.view.View.jumpDrawablesToCurrentState()V&android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V&android.view.View.setClickable(Z)V&android.view.View.setFocusable(Z)V&android.widget.PopupWindow.isShowing()Z&android.view.View.setPressed(Z)V&android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z&android.content.Context.getResources()Landroid/content/res/Resources;&android.widget.ImageView.setVisibility(I)V&android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V&android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater;&android.content.res.Resources.getDimensionPixelSize(I)I&android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V&android.view.ViewGroup.getChildCount()I&android.view.ViewGroup.addView(Landroid/view/View;I)V&android.view.ViewGroup.removeViewAt(I)V&android.widget.PopupWindow.setContentView(Landroid/view/View;)V&android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.ViewGroup.getChildAt(I)Landroid/view/View; --- android.widget.LinearLayout$LayoutParams.<init>(II)V --- android.content.res.Resources.getDisplayMetrics()Landroid/util/DisplayMetrics; --- android.view.View.onConfigurationChanged(Landroid/content/res/Configuration;)V --- android.view.ViewGroup.removeView(Landroid/view/View;)V --- android.view.View.setEnabled(Z)V --- android.widget.PopupWindow.dismiss()V --- android.view.LayoutInflater.inflate(ILandroid/view/ViewGroup;Z)Landroid/view/View; --- android.view.View.post(Ljava/lang/Runnable;)Z --- android.view.ViewTreeObserver.isAlive()Z --- android.view.View.getParent()Landroid/view/ViewParent; --- android.view.View.jumpDrawablesToCurrentState()V --- android.widget.ImageButton.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V --- android.view.View.setClickable(Z)V --- android.view.View.setFocusable(Z)V --- android.widget.PopupWindow.isShowing()Z --- android.view.View.setPressed(Z)V --- android.view.View.removeCallbacks(Ljava/lang/Runnable;)Z --- android.content.Context.getResources()Landroid/content/res/Resources; --- android.widget.ImageView.setVisibility(I)V --- android.view.ViewGroup.addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V --- android.view.LayoutInflater.from(Landroid/content/Context;)Landroid/view/LayoutInflater; --- android.content.res.Resources.getDimensionPixelSize(I)I --- android.os.Handler.removeCallbacks(Ljava/lang/Runnable;)V --- android.view.ViewGroup.getChildCount()I --- android.view.ViewGroup.addView(Landroid/view/View;I)V --- android.view.ViewGroup.removeViewAt(I)V --- android.widget.PopupWindow.setContentView(Landroid/view/View;)V --- android.view.ViewTreeObserver.removeOnScrollChangedListener(Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.appcompat.widget.ActionBarOverlayLayout.setActionBarHideOffset(I)V	-1	-1	android.view.View.setTranslationY(F)V	android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V&android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.view.View.setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V --- android.view.View.getLayoutParams()Landroid/view/ViewGroup$LayoutParams;"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.coordinatorlayout.widget.CoordinatorLayout.performIntercept(Landroid/view/MotionEvent;I)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.coordinatorlayout.widget.CoordinatorLayout.onInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.coordinatorlayout.widget.CoordinatorLayout.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.ensureGlows()V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.computeScroll()V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.core.widget.NestedScrollView.overScrollByCompat(IIIIIIIIZ)Z	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.DialogFragment.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.DialogFragment.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.DialogFragment.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentActivity.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;)I		SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentActivity.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V	-1	-1	android.app.Activity.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V	android.content.Context.startActivity(Landroid/content/Intent;)V	SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: android.content.Context.startActivity(Landroid/content/Intent;)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.fragment.app.FragmentActivity.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V	-1	-1	android.app.Activity.startActivityForResult(Landroid/content/Intent;ILandroid/os/Bundle;)V	android.app.Activity.startActivityForResult(Landroid/content/Intent;I)V	SDK_INT <= 15	BackwardImprovement	"If you want to support older versions (<= 15), add a check and handle using these APIs: android.app.Activity.startActivityForResult(Landroid/content/Intent;I)V"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.<init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.dispatchPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)Z	-1	-1	android.view.View.onPopulateAccessibilityEvent(Landroid/view/accessibility/AccessibilityEvent;)V		SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.findChildViewUnder(FF)Landroid/view/View;	-1	-1	android.view.View.getTranslationY()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.findChildViewUnder(FF)Landroid/view/View;	-1	-1	android.view.View.getTranslationX()F		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.onInterceptTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getXVelocity(I)F	android.view.VelocityTracker.getXVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getXVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.VelocityTracker.getYVelocity(I)F	android.view.VelocityTracker.getYVelocity()F	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.VelocityTracker.getYVelocity()F"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.onTouchEvent(Landroid/view/MotionEvent;)Z	-1	-1	android.view.MotionEvent.getActionMasked()I	android.view.MotionEvent.getAction()I	SDK_INT <= 7	BackwardImprovement	"If you want to support older versions (<= 7), add a check and handle using these APIs: android.view.MotionEvent.getAction()I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.removeItemDecoration(Landroidx/recyclerview/widget/RecyclerView$ItemDecoration;)V	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.recyclerview.widget.RecyclerView.scrollByInternal(IILandroid/view/MotionEvent;)Z	-1	-1	android.view.View.getOverScrollMode()I		SDK_INT <= 8	BackwardImprovement	"If you want to support older versions (<= 8), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.PreferenceDialogFragmentCompat.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	androidx.preference.ListPreferenceDialogFragmentCompat.onCreate(Landroid/os/Bundle;)V	-1	-1	android.os.BaseBundle.getInt(Ljava/lang/String;I)I	android.os.BaseBundle.getInt(Ljava/lang/String;)I	SDK_INT <= 13	BackwardImprovement	"If you want to support older versions (<= 13), add a check and handle using these APIs: android.os.BaseBundle.getInt(Ljava/lang/String;)I"	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	grmpl.mk.stepandheightcounter.MainActivity.getDetailSave(Ljava/lang/String;)Z	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;		SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: "	1.0
grmpl.mk.stepandheightcounter	1.30	21	30	grmpl.mk.stepandheightcounter.MainActivity.getDetailSave(Ljava/lang/String;)Z	-1	-1	android.content.SharedPreferences.getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;	android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&org.json.JSONObject.<init>(Ljava/lang/String;)V&org.json.JSONArray.getString(I)Ljava/lang/String;&org.json.JSONArray.<init>(Ljava/lang/String;)V&org.json.JSONArray.length()I&org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;	SDK_INT <= 10	BackwardImprovement	"If you want to support older versions (<= 10), add a check and handle using these APIs: android.content.SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; --- org.json.JSONObject.<init>(Ljava/lang/String;)V --- org.json.JSONArray.getString(I)Ljava/lang/String; --- org.json.JSONArray.<init>(Ljava/lang/String;)V --- org.json.JSONArray.length()I --- org.json.JSONObject.getString(Ljava/lang/String;)Ljava/lang/String;"	1.0
