<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord...)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int...)>
<android.widget.ArrayAdapter: void addAll(T...)>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.Iterable,java.lang.Object...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(T,android.util.Property,int...)>
<android.os.AsyncTask: void onProgressUpdate(Progress...)>
<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object...)>
<java.util.stream.Collectors: java.util.stream.DoubleStream of(double...)>
<java.util.EnumSet: java.util.EnumSet of(E,E...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addInvoke(android.renderscript.Script.InvokeID,java.lang.Object...)>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float...)>
<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int...)>
<android.content.Context: java.lang.String getString(int,java.lang.Object...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int...)>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe...)>
<java.util.Arrays: java.util.List asList(T...)>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setEncryptionPaddings(java.lang.String...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addKernel(android.renderscript.Script.KernelID,android.renderscript.Type,java.lang.Object...)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object...)>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair...)>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setBlockModes(java.lang.String...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder...)>
<java.util.regex.PatternSyntaxException: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.stream.Collector.Characteristics...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object...)>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,android.app.Activity...)>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence...)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float...)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class...)>
<android.icu.text.AlphabeticIndex: android.icu.text.AlphabeticIndex addLabels(java.util.Locale...)>
<android.telecom.Connection: void removeExtras(java.lang.String...)>
<android.os.AsyncTask: android.os.AsyncTask execute(Params...)>
<android.view.InputDevice: boolean[] hasKeys(int...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setSignaturePaddings(java.lang.String...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(T,android.util.Property,int...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(T,android.util.Property,float...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.telecom.Conference: void removeExtras(java.lang.String...)>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object...)>
<android.animation.PropertyValuesHolder: void setIntValues(int...)>
<java.io.PrintStream: java.io.PrintStream printf(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.icu.text.Collator: void setReorderCodes(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int...)>
<android.icu.text.UnicodeSet: android.icu.text.UnicodeSet addAll(T...)>
<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition...)>
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class...)>
<android.icu.text.LocaleDisplayNames: android.icu.text.LocaleDisplayNames getInstance(android.icu.util.ULocale,android.icu.text.DisplayContext...)>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)>
<android.icu.text.AlphabeticIndex: android.icu.text.AlphabeticIndex addLabels(android.icu.util.ULocale...)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setDigests(java.lang.String...)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture allOf(java.util.concurrent.CompletableFuture...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(T,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object...)>
<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int...)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.os.LocaleList: void <init>(java.util.Locale...)>
<java.util.concurrent.ForkJoinTask: void invokeAll(java.util.concurrent.ForkJoinTask...)>
<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String...)>
<android.animation.ValueAnimator: void setFloatValues(float...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup create(java.lang.String,android.renderscript.ScriptGroup.Future...)>
<android.animation.PropertyValuesHolder: void setFloatValues(float...)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object...)>
<android.icu.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object...)>
<android.test.InstrumentationTestCase: void sendKeys(int...)>
<android.os.AsyncTask: void publishProgress(Progress...)>
<android.icu.text.UnicodeSet: void <init>(int...)>
<android.os.AsyncTask: Result doInBackground(Params...)>
<android.transition.Transition: void setMatchOrder(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<java.util.Objects: int hash(java.lang.Object...)>
<android.util.EventLog: int writeEvent(int,java.lang.Object...)>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder...)>
<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int...)>
<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object...)>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object...)>
<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object...)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String...)>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includePackages(java.lang.String...)>
<android.icu.text.LocaleDisplayNames: android.icu.text.LocaleDisplayNames getInstance(java.util.Locale,android.icu.text.DisplayContext...)>
<java.util.regex.PatternSyntaxException: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector.Characteristics...)>
<android.app.Notification.Builder: android.app.Notification.Builder setActions(android.app.Notification.Action...)>
<android.icu.text.MeasureFormat: java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,android.icu.util.Measure...)>
<java.io.Console: java.io.Console printf(java.lang.String,java.lang.Object...)>
<android.telecom.Call: void removeExtras(java.lang.String...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object...)>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object...)>
<android.app.DownloadManager: int remove(long...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object...)>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(com.android.internal.util.Predicate...)>
<junit.framework.TestSuite: void <init>(java.lang.Class...)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe...)>
<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object...)>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.Iterable,java.lang.Object...)>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,Params...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder excludePackages(java.lang.String...)>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String...)>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object...)>
<java.util.stream.Collectors: java.util.stream.LongStream of(long...)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,V...)>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String...)>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.String,java.lang.Iterable,java.lang.Object...)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setDigests(java.lang.String...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float...)>
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object...)>
<android.animation.ValueAnimator: void setIntValues(int...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setSignaturePaddings(java.lang.String...)>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.String,java.lang.Iterable,java.lang.Object...)>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int...)>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int...)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class...)>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object...)>
<java.lang.reflect.Constructor: T newInstance(java.lang.Object...)>
<java.util.stream.Collectors: java.util.stream.Stream of(T...)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity...)>
<android.icu.text.MeasureFormat: java.lang.String formatMeasures(android.icu.util.Measure...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float...)>
<android.renderscript.ScriptGroup: java.lang.Object[] execute(java.lang.Object...)>
<java.lang.ProcessBuilder: void <init>(java.lang.String...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe...)>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator...)>
<java.util.stream.Collectors: java.util.stream.IntStream of(int...)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class...)>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(T,android.util.Property,android.animation.TypeEvaluator,V...)>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence...)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object...)>
<java.util.Collections: boolean addAll(java.util.Collection,T...)>