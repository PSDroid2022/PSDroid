<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSample(int,int,int,int)>
<android.text.BoringLayout: int getLineDescent(int)>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getDatabasePath(java.lang.String)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: int getCharCount()>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,float[],int)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>
<javax.imageio.spi.ImageInputStreamSpi: boolean canUseCacheFile()>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<java.awt.font.GlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>
<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(char[],int,int,java.awt.font.FontRenderContext)>
<android.content.IntentFilter: int countCategories()>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(java.lang.Object)>
<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.view.MenuItem: int getGroupId()>
<java.awt.font.GlyphMetrics: boolean isStandard()>
<android.server.BluetoothService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>
<android.view.LayoutInflater: void <init>(android.content.Context)>
<android.pim.vcard.VCardInterpreterCollection: java.util.Collection getCollection()>
<com.google.android.mms.pdu.ReadRecInd: long getDate()>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.widget.PopupWindow: void <init>(int,int)>
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)>
<java.awt.image.ConvolveOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<android.database.sqlite.SQLiteClosable: void acquireReference()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSamples(int,int,int,int,int,int[])>
<javax.imageio.ImageReader: javax.imageio.ImageTypeSpecifier getRawImageType(int)>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.text.StaticLayout: int getEllipsisCount(int)>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValues(com.google.android.mms.pdu.EncodedStringValue[],int)>
<java.awt.image.Raster: java.awt.image.Raster createRaster(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<com.google.android.gles_jni.GLImpl: void glDepthFunc(int)>
<android.graphics.RectF: void inset(float,float)>
<android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.harmony.awt.gl.font.AndroidFont: void initAndroidFont()>
<android.content.pm.LabeledIntent: int getIconResource()>
<android.os.DropBoxManager.Entry: int getFlags()>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.server.DevicePolicyManagerService: void systemReady()>
<android.content.res.Resources.Theme: void finalize()>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.text.format.Time: long setJulianDay(int)>
<android.view.ViewStub: void <init>(android.content.Context,int)>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
<android.webkit.WebView: void clearSslPreferences()>
<org.apache.harmony.awt.wtk.NativeWindow: void placeAfter(org.apache.harmony.awt.wtk.NativeWindow)>
<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
<java.awt.geom.QuadCurve2D: double getCtrlX()>
<android.widget.AbsListView: boolean isFastScrollEnabled()>
<java.awt.Component: boolean mouseExit(java.awt.Event,int,int)>
<org.apache.harmony.awt.wtk.NativeWindow: void setAlwaysOnTop(boolean)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getPrefix()>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>
<java.awt.image.SampleModel: int getSample(int,int,int,java.awt.image.DataBuffer)>
<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>
<com.android.server.am.BatteryStatsService: void notePhoneSignalStrength(android.telephony.SignalStrength)>
<android.app.ActivityManagerProxy: int getProcessLimit()>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String)>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<java.awt.geom.Ellipse2D: boolean contains(double,double)>
<javax.imageio.stream.ImageInputStream: void readFully(int[],int,int)>
<android.text.LoginFilter.PasswordFilterGMail: void <init>(boolean)>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setComposite(java.awt.Composite)>
<com.android.server.InputMethodManagerService: void finishInput(com.android.internal.view.IInputMethodClient)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>
<javax.imageio.stream.MemoryCacheImageOutputStream: void flushBefore(long)>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addBooleanAttribute(java.lang.String,java.lang.String,boolean,boolean)>
<java.awt.Graphics2D: void draw(java.awt.Shape)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>
<android.location.GpsSatellite: int getPrn()>
<android.view.Window: void takeKeyEvents(boolean)>
<android.graphics.drawable.AnimationDrawable: void <init>()>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<java.awt.font.TextLayout: int getCharacterCount()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerDesc(java.lang.String)>
<android.widget.TextView: int getTopPaddingOffset()>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.location.Address: int describeContents()>
<android.graphics.Matrix: void setRotate(float)>
<java.awt.image.LookupTable: int getNumComponents()>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<android.view.ViewGroup: void setDescendantFocusability(int)>
<android.database.CursorWrapper: android.os.Bundle getExtras()>
<android.os.Parcel: int readInt()>
<android.pim.ICalendar.Component: void addProperty(android.pim.ICalendar.Property)>
<com.google.android.mms.pdu.PduParser: byte[] parseContentType(java.io.ByteArrayInputStream,java.util.HashMap)>
<java.awt.image.BandedSampleModel: int[] getSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.content.res.TypedArray: float getFloat(int,float)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>
<java.awt.image.WritableRaster: void setPixels(int,int,int,int,double[])>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>
<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>
<java.awt.image.MultiPixelPackedSampleModel: void <init>(int,int,int,int,int,int)>
<android.pim.vcard.VCardComposer: boolean createOneEntry()>
<java.awt.image.SampleModel: int getNumBands()>
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>
<android.net.Credentials: void <init>(int,int,int)>
<java.awt.geom.QuadCurve2D: double getX2()>
<android.database.ContentObserver: boolean deliverSelfNotifications()>
<android.pim.vcard.VCardInterpreterCollection: void propertyParamValue(java.lang.String)>
<java.awt.image.MemoryImageSource: void newPixels(int[],java.awt.image.ColorModel,int,int)>
<com.android.server.KeyInputQueue: int nativeGetKeycodeState(int,int)>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getAttributeDataType(java.lang.String,java.lang.String)>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.media.AudioManager: void setParameters(java.lang.String)>
<javax.imageio.spi.ImageReaderSpi: javax.imageio.ImageReader createReaderInstance(java.lang.Object)>
<android.text.style.BackgroundColorSpan: void <init>(int)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>
<android.renderscript.Script.Builder: android.renderscript.Script.Invokable addInvokable(java.lang.String)>
<android.webkit.CacheManager.CacheResult: long getExpires()>
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>
<org.apache.harmony.awt.wtk.NativeEvent: java.awt.Point getLocalPos()>
<android.location.Criteria: int getPowerRequirement()>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>
<android.app.Dialog: android.view.View getCurrentFocus()>
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>
<javax.imageio.plugins.bmp.BMPImageWriteParam: boolean isTopDown()>
<android.provider.MediaStore.Audio.Playlists.Members: android.net.Uri getContentUri(java.lang.String,long)>
<java.awt.geom.AffineTransform: double getScaleY()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSuperscriptSizeX()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getNamespaceCount(int)>
<android.pim.ICalendar.FormatException: void <init>()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>
<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.hardware.SensorManager: int getSensors()>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>
<android.view.View: java.util.ArrayList getFocusables(int)>
<android.app.ActivityManagerProxy: void moveTaskToBack(int)>
<android.app.ProgressDialog: void onStart()>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<javax.imageio.stream.ImageInputStreamImpl: void reset()>
<java.awt.Component: void printAll(java.awt.Graphics)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,int[],int)>
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.geom.AffineTransform getTransform()>
<android.widget.ViewFlipper: void onDetachedFromWindow()>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>
<android.webkit.WebView: boolean canGoForward()>
<java.awt.geom.Area: boolean intersects(java.awt.geom.Rectangle2D)>
<javax.imageio.ImageReader: void processWarningOccurred(java.lang.String)>
<android.graphics.drawable.ClipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<android.net.TrafficStats: long getMobileRxPackets()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: float[] getGlyphPositions(int,int,float[])>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>
<java.awt.Component: void repaint()>
<android.graphics.Canvas: int save()>
<com.google.android.mms.pdu.NotifyRespInd: void setStatus(int)>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceHierarchyChange(android.preference.Preference)>
<android.speech.tts.TextToSpeech: int stop()>
<android.telephony.gsm.SmsMessage: long getTimestampMillis()>
<org.apache.harmony.awt.gl.render.Blitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.database.AbstractCursor: void checkPosition()>
<java.awt.image.DataBufferDouble: int getElem(int,int)>
<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,int[],boolean,boolean,int,int)>
<javax.imageio.IIOParam: boolean activateController()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>
<com.android.tools.layoutlib.create.OverrideMethod: float invokeF(java.lang.String,boolean,java.lang.Object)>
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeFloat(float)>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<java.awt.geom.Line2D.Double: double getX2()>
<java.awt.Component: java.awt.image.VolatileImage createVolatileImage(int,int,java.awt.ImageCapabilities)>
<com.android.film.FilmView: void <init>(android.content.Context)>
<com.google.android.mms.pdu.EncodedStringValue: void <init>(int,byte[])>
<android.media.RingtoneManager: void setType(int)>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout,boolean,boolean,java.awt.geom.Rectangle2D)>
<javax.imageio.stream.ImageOutputStream: void writeUTF(java.lang.String)>
<android.pim.vcard.VCardEntryConstructor: void addEntryHandler(android.pim.vcard.VCardEntryHandler)>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>
<com.android.layoutlib.bridge.LayoutResult: java.lang.String getErrorMessage()>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.view.MenuItem: java.lang.CharSequence getTitle()>
<java.awt.geom.Ellipse2D.Float: double getY()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: int getHeight(int)>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>
<javax.imageio.stream.ImageOutputStream: void writeFloats(float[],int,int)>
<android.view.ViewDebug: void stopHierarchyTracing()>
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.app.ActivityThread.PackageInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.server.AttributeCache: com.android.server.AttributeCache.Entry get(java.lang.String,int,int[])>
<org.apache.harmony.awt.gl.Crossing: int crossPath(java.awt.geom.PathIterator,double,double)>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>
<java.awt.geom.CubicCurve2D.Float: void <init>(float,float,float,float,float,float,float,float)>
<android.database.CursorWindow: boolean isLong(int,int)>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.layoutlib.bridge.BridgeTypedArray: float getFloat(int,float)>
<android.os.Looper: void loop()>
<android.net.Uri: java.lang.String getEncodedPath()>
<android.widget.BaseAdapter: int getItemViewType(int)>
<android.provider.Calendar.CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>
<java.beans.PropertyEditorSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<android.app.SearchableInfo: int getVoicePromptTextId()>
<android.widget.ProgressBar: int getMax()>
<android.hardware.Camera.Parameters: java.lang.String getFocusMode()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.image.BandedSampleModel: void setSample(int,int,int,double,java.awt.image.DataBuffer)>
<android.media.MediaPlayer: void start()>
<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.webkit.WebView: void invokeZoomPicker()>
<android.text.style.UnderlineSpan: void <init>()>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>
<com.android.server.status.ExpandedView: int getSuggestedMinimumHeight()>
<android.security.Sha1MessageDigest: byte[] digest(byte[])>
<android.widget.PopupWindow: void setContentView(android.view.View)>
<java.awt.geom.QuadCurve2D: double getY2()>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>
<java.awt.event.ContainerListener: void componentAdded(java.awt.event.ContainerEvent)>
<java.awt.image.Raster: java.lang.Object getDataElements(int,int,int,int,java.lang.Object)>
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(android.webkit.UrlInterceptHandler)>
<android.widget.ListView: void addHeaderView(android.view.View)>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>
<com.android.server.status.ExpandedView: void onFinishInflate()>
<com.android.common.ArrayListCursor: java.lang.String getString(int)>
<android.app.backup.BackupManager: void <init>(android.content.Context)>
<android.renderscript.ProgramRaster.Builder: void setLineSmoothEnable(boolean)>
<java.awt.Component.FlipBufferStrategy: java.awt.Graphics getDrawGraphics()>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>
<com.android.layoutlib.bridge.BridgeContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>
<android.util.Pair: boolean equals(java.lang.Object)>
<com.google.android.mms.pdu.RetrieveConf: int getDeliveryReport()>
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>
<java.beans.PropertyDescriptor: java.beans.PropertyEditor createPropertyEditor(java.lang.Object)>
<android.graphics.Bitmap: int getRowBytes()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)>
<java.awt.Component: void paint(java.awt.Graphics)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: java.util.Iterator getImageTypes(int)>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.app.LocalActivityManager: void dispatchResume()>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>
<android.server.BluetoothService.BondState: void loadBondState()>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.os.RemoteException: void <init>()>
<org.apache.harmony.awt.gl.image.DecodingImageSource: void load()>
<java.awt.event.FocusListener: void focusGained(java.awt.event.FocusEvent)>
<android.server.BluetoothService: java.lang.String getName()>
<android.database.MergeCursor: boolean onMove(int,int)>
<org.apache.harmony.awt.wtk.CursorFactory: org.apache.harmony.awt.wtk.NativeCursor createCustomCursor(java.awt.Image,int,int)>
<android.content.pm.PackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.google.android.util.SmileyParser: void <init>(java.lang.String,com.google.android.util.SmileyResources)>
<android.view.Surface: void show()>
<android.text.TextPaint: void <init>(int)>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>
<javax.imageio.ImageWriter: void removeIIOWriteProgressListener(javax.imageio.event.IIOWriteProgressListener)>
<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<com.google.android.gles_jni.GLImpl: void glLogicOp(int)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>
<javax.imageio.ImageIO: java.util.Iterator getImageWriters(javax.imageio.ImageTypeSpecifier,java.lang.String)>
<java.awt.im.InputMethodRequests: java.text.AttributedCharacterIterator cancelLatestCommittedText(java.text.AttributedCharacterIterator.Attribute[])>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TabHost.TabSpec: java.lang.String getTag()>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<java.awt.Component: java.awt.event.ComponentListener[] getComponentListeners()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>
<com.android.server.am.BatteryStatsService: boolean isOnBattery()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<java.awt.Component: boolean action(java.awt.Event,java.lang.Object)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebView: void setBackgroundColor(int)>
<javax.imageio.spi.IIOServiceProvider: void onRegistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<java.awt.image.ColorModel: int getDataElement(float[],int)>
<java.awt.geom.CubicCurve2D: void <init>()>
<javax.imageio.stream.ImageOutputStreamImpl: void write(byte[],int,int)>
<com.google.android.mms.pdu.GenericPdu: void setMmsVersion(int)>
<java.awt.geom.Line2D: double ptLineDistSq(java.awt.geom.Point2D)>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.widget.AbsListView: void requestLayout()>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>
<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>
<android.telephony.SignalStrength: boolean isGsm()>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>
<android.graphics.drawable.GradientDrawable: void setColor(int)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: void releaseData(java.awt.image.DataBuffer)>
<android.view.View: boolean isSelected()>
<android.widget.ViewAnimator: void <init>(android.content.Context)>
<com.android.server.status.IconMerger: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.image.ComponentColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>
<java.awt.geom.AffineTransform: double getShearY()>
<android.server.BluetoothService.BondState: void readAutoPairingData()>
<android.graphics.Path: boolean isEmpty()>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
<java.awt.font.LineBreakMeasurer: java.awt.font.TextLayout nextLayout(float)>
<java.awt.Component: boolean hasFocus()>
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>
<android.sax.RootElement: void <init>(java.lang.String)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<android.widget.TextView: void setImeOptions(int)>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>
<org.apache.harmony.awt.gl.font.AndroidFont: java.lang.String getFontName(java.util.Locale)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>
<android.webkit.WebView: int computeHorizontalScrollRange()>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getFontName()>
<android.os.Bundle: void putIntArray(java.lang.String,int[])>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>
<java.awt.image.DirectColorModel: void <init>(int,int,int,int,int)>
<android.widget.TextView: int getTotalPaddingLeft()>
<android.widget.ImageView: void clearColorFilter()>
<android.widget.TableLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<java.awt.Color: float[] getRGBComponents(float[])>
<android.widget.TabWidget: void focusCurrentTab(int)>
<java.awt.geom.Rectangle2D: int outcode(java.awt.geom.Point2D)>
<android.database.MergeCursor: java.lang.String getString(int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvx(int,int,int)>
<java.awt.Rectangle: void move(int,int)>
<android.content.ComponentName: java.lang.String flattenToShortString()>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,java.nio.FloatBuffer)>
<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,com.android.server.am.HistoryRecord,com.android.server.am.HistoryRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport.CrashInfo)>
<com.google.android.gles_jni.GLImpl: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<javax.imageio.stream.FileImageOutputStream: int read(byte[],int,int)>
<android.os.Debug: int getLoadedClassCount()>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<java.beans.PropertyEditorSupport: void setAsText(java.lang.String)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixels(int,int,int,int,double[])>
<android.webkit.WebView: boolean canGoBackOrForward(int)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<javax.microedition.khronos.opengles.GL10: void glNormal3f(float,float,float)>
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView.RecyclerListener)>
<java.awt.Adjustable: void setValue(int)>
<android.graphics.drawable.BitmapDrawable: void <init>()>
<android.opengl.GLES10: void glNormal3x(int,int,int)>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.Toast: void setText(java.lang.CharSequence)>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>
<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOn()>
<com.android.tools.layoutlib.create.RenameClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newInsert(android.net.Uri)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
<javax.imageio.stream.IIOByteBuffer: void setData(byte[])>
<android.media.AudioManager: void setStreamVolume(int,int,int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.awt.geom.Rectangle2D getMaxCharBounds(java.awt.font.FontRenderContext)>
<javax.imageio.IIOImage: void setThumbnails(java.util.List)>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>
<java.awt.im.InputContext: boolean isCompositionEnabled()>
<android.widget.ListView: void setSelectionAfterHeaderView()>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>
<android.view.MotionEvent: void setLocation(float,float)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.util.FloatMath: float ceil(float)>
<java.awt.Rectangle: void resize(int,int)>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>
<java.awt.image.BufferedImageOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.widget.ViewSwitcher: android.view.View getNextView()>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.font.GlyphVector: int[] getGlyphCharIndices(int,int,int[])>
<java.awt.geom.Point2D: double distanceSq(double,double)>
<javax.imageio.stream.ImageInputStreamImpl: int read(byte[],int,int)>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,float[],int)>
<android.os.Debug: int getGlobalFreedCount()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<android.content.IntentFilter: void addDataType(java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphOutline(int)>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>
<com.google.android.mms.ContentType: boolean isSupportedVideoType(java.lang.String)>
<java.awt.geom.QuadCurve2D: double getFlatnessSq(double,double,double,double,double,double)>
<android.net.Downloads.ById: android.os.ParcelFileDescriptor openDownload(android.content.Context,long,java.lang.String)>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>
<org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: java.lang.String getDescription(java.util.Locale)>
<android.widget.CursorFilter.CursorFilterClient: void changeCursor(android.database.Cursor)>
<org.apache.harmony.awt.wtk.GraphicsFactory: org.apache.harmony.awt.gl.font.FontManager getFontManager()>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.view.KeyEvent: char getMatch(char[])>
<javax.imageio.metadata.IIOMetadataFormatImpl: void removeAttribute(java.lang.String,java.lang.String)>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>
<android.text.TextUtils.SimpleStringSplitter: java.lang.String next()>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>
<android.media.AudioTrack: int getNotificationMarkerPosition()>
<java.awt.geom.RoundRectangle2D.Double: double getArcHeight()>
<java.awt.event.InvocationEvent: java.lang.String paramString()>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>
<javax.imageio.ImageReader: int getMinIndex()>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float)>
<android.opengl.GLES20: void glHint(int,int)>
<android.pim.vcard.VCardBuilder: void appendAndroidSpecificProperty(java.lang.String,android.content.ContentValues)>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.app.Instrumentation: void endPerformanceSnapshot()>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.PackageItemInfo)>
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>
<android.content.res.TypedArray: int getIndex(int)>
<android.graphics.Paint: float getTextSize()>
<com.android.film.FilmRS: void <init>()>
<android.content.res.TypedArray: android.content.res.Resources getResources()>
<android.os.Bundle: void <init>(android.os.Bundle)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getAscent()>
<android.os.Binder: boolean pingBinder()>
<java.awt.Rectangle: void reshape(int,int,int,int)>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitTypeInsn(int,java.lang.String)>
<android.os.Debug: void printLoadedClasses(int)>
<android.app.AlertDialog: void setIcon(int)>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>
<android.app.Activity: void showDialog(int)>
<com.google.android.gles_jni.GLImpl: void glTexGenf(int,int,float)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int)>
<android.app.backup.BackupAgent: void onCreate()>
<org.apache.harmony.awt.wtk.NativeIM: void endComposition()>
<android.pim.ContactsAsyncHelper.ImageTracker: int getPhotoState()>
<android.widget.AbsListView: void setFilterText(java.lang.String)>
<android.location.GpsStatus.NmeaListener: void onNmeaReceived(long,java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillPolygon(int[],int[],int)>
<java.awt.font.GlyphMetrics: float getRSB()>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getSharedPrefsFile(java.lang.String)>
<android.os.storage.StorageManager: void enableUsbMassStorage()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<javax.imageio.ImageWriteParam: java.util.Locale getLocale()>
<java.awt.Component: java.awt.Dimension getMinimumSize()>
<android.renderscript.ProgramFragment.ShaderBuilder: void <init>(android.renderscript.RenderScript)>
<android.content.ContentValues: void <init>(int)>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.widget.ScrollView: int getMaxScrollAmount()>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>
<android.opengl.GLES10: void glScalef(float,float,float)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setDimensions(int,int)>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>
<android.provider.Calendar.Calendars: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.view.View: android.os.IBinder getWindowToken()>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>
<android.accounts.AccountManagerService.AuthTokenKey: boolean equals(java.lang.Object)>
<android.view.OrientationListener: void enable()>
<android.opengl.GLES20: void glReleaseShaderCompiler()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isMedia()>
<android.os.BatteryStats.Uid: void noteWifiTurnedOnLocked()>
<javax.imageio.stream.ImageInputStream: int getBitOffset()>
<android.widget.AdapterView: void addView(android.view.View)>
<java.awt.geom.QuadCurve2D: int solveQuadratic(double[],double[])>
<android.widget.TextView: void setHeight(int)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<java.awt.ComponentOrientation: java.awt.ComponentOrientation getOrientation(java.util.Locale)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,int[],int)>
<android.view.KeyEvent: int getScanCode()>
<java.awt.geom.RectangularShape: java.awt.geom.Rectangle2D getFrame()>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>
<java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo)>
<android.view.animation.AnimationSet: long getDuration()>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: int getFaceIndex(java.lang.String)>
<java.awt.font.LineBreakMeasurer: void deleteChar(java.text.AttributedCharacterIterator,int)>
<android.view.inputmethod.CompletionInfo: int getPosition()>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<java.awt.image.MultiPixelPackedSampleModel: int getPixelBitStride()>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<java.awt.geom.Rectangle2D: boolean contains(double,double)>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>
<java.awt.Component: void processFocusEvent(java.awt.event.FocusEvent)>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>
<android.view.MotionEvent: int getActionMasked()>
<java.awt.font.LineBreakMeasurer: java.awt.font.TextLayout nextLayout(float,int,boolean)>
<android.net.DhcpInfo: void <init>()>
<android.graphics.Path: void rewind()>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>
<android.widget.ExpandableListAdapter: int getGroupCount()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,int[],int)>
<android.widget.TableLayout: void setShrinkAllColumns(boolean)>
<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>
<org.apache.harmony.awt.wtk.NativeMouseInfo: int getNumberOfButtons()>
<android.view.View: boolean performLongClick()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getObjectValueType(java.lang.String)>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>
<javax.imageio.ImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()>
<com.android.server.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int)>
<javax.imageio.ImageWriteParam: boolean isCompressionLossless()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void mark(int)>
<android.widget.TableLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.state.MenuState: java.awt.Point getLocation()>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String toHtml(boolean)>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>
<javax.imageio.event.IIOWriteProgressListener: void thumbnailComplete(javax.imageio.ImageWriter)>
<android.content.pm.ActivityInfo: int describeContents()>
<android.os.Looper: void prepareMainLooper()>
<java.awt.HeadlessToolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>
<java.awt.font.TextLayout: float getVisibleAdvance()>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>
<android.content.ContentProvider: boolean isTemporary()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.widget.AdapterView.OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,float[],int)>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.webkit.CacheManager.CacheResult: java.lang.String getMimeType()>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>
<android.accounts.AuthenticatorException: void <init>()>
<android.app.IActivityManager.WaitResult: int describeContents()>
<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int)>
<java.beans.PropertyEditorSupport: boolean supportsCustomEditor()>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<android.view.View: float getRightFadingEdgeStrength()>
<android.opengl.GLES10: void glLoadIdentity()>
<android.graphics.drawable.Animatable: void start()>
<android.graphics.Bitmap: void <init>(java.io.InputStream)>
<android.pim.vcard.VCardEntry: java.lang.String getPhoneticGivenName()>
<android.graphics.Region: boolean quickReject(int,int,int,int)>
<android.view.View: int getDrawingCacheQuality()>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.pim.vcard.VCardParser_V21: java.lang.String getLine()>
<android.app.SearchDialog.SearchAutoComplete: void onWindowFocusChanged(boolean)>
<java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>
<java.awt.event.ComponentAdapter: void componentShown(java.awt.event.ComponentEvent)>
<android.app.IntentService: void setIntentRedelivery(boolean)>
<org.apache.harmony.awt.gl.font.CompositeFont: boolean canDisplay(char)>
<com.android.tools.layoutlib.create.OverrideMethod: void setMethodListener(java.lang.String,com.android.tools.layoutlib.create.MethodListener)>
<java.awt.image.RescaleOp: float[] getOffsets(float[])>
<android.graphics.Path: void offset(float,float)>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>
<com.google.android.gles_jni.GLImpl: void glColor4x(int,int,int,int)>
<android.widget.TextView: void setSingleLine(boolean)>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<org.apache.harmony.awt.gl.font.CompositeFont: org.apache.harmony.awt.gl.font.Glyph getGlyph(char)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void setPriority(int)>
<java.awt.image.LookupOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<android.os.PowerManager: boolean isScreenOn()>
<org.apache.harmony.x.imageio.spi.InputStreamIISSpi: boolean canUseCacheFile()>
<android.app.Dialog: void setCancelMessage(android.os.Message)>
<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.content.IntentFilter: int countDataPaths()>
<android.os.Parcel: void writeException(java.lang.Exception)>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>
<android.database.Cursor: long getLong(int)>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<com.android.server.am.BatteryStatsService: void noteStopAudio(int)>
<java.awt.event.KeyListener: void keyTyped(java.awt.event.KeyEvent)>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>
<android.widget.LinearLayout: void setVerticalGravity(int)>
<android.widget.TextView: void setEms(int)>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>
<android.content.pm.ProviderInfo: java.lang.String toString()>
<com.android.server.ClipboardService: java.lang.CharSequence getClipboardText()>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>
<android.app.Activity: void finishFromChild(android.app.Activity)>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>
<java.awt.GraphicsDevice: void setDisplayMode(java.awt.DisplayMode)>
<java.awt.Component: int getHeight()>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>
<android.os.Debug.MemoryInfo: void <init>()>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>
<java.awt.event.MouseWheelEvent: int getWheelRotation()>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void clipRect(int,int,int,int)>
<android.util.SparseArray: void <init>()>
<com.android.server.status.IconData: java.lang.String toString()>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>
<android.view.View: boolean performHapticFeedback(int,int)>
<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.webkit.WebView: int getContentHeight()>
<android.app.Activity: boolean hasWindowFocus()>
<android.util.TimingLogger: void reset(java.lang.String,java.lang.String)>
<android.media.AudioService.VolumeStreamState: void setVolumeIndexSettingName(java.lang.String)>
<android.location.GpsStatus.Listener: void onGpsStatusChanged(int)>
<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog.Monitor)>
<com.google.android.mms.pdu.DeliveryInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.graphics.DiscretePathEffect: void <init>(float,float)>
<android.hardware.Sensor: float getPower()>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>
<com.google.android.mms.ContentType: boolean isImageType(java.lang.String)>
<android.app.WallpaperInfo: int describeContents()>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>
<android.util.SparseArray: void clear()>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
<com.google.android.gles_jni.GLImpl: void glScissor(int,int,int,int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>
<com.google.android.gles_jni.GLImpl: void glFrontFace(int)>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>
<java.awt.event.AdjustmentEvent: void <init>(java.awt.Adjustable,int,int,int)>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>
<android.server.BluetoothService: int getScanMode()>
<android.view.View: void postInvalidateDelayed(long)>
<java.awt.image.BufferedImage: java.util.Vector getSources()>
<com.android.server.InputMethodManagerService: void windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,boolean,boolean,int,boolean,int)>
<android.util.DisplayMetrics: java.lang.String toString()>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>
<com.google.android.util.AbstractMessageParser.Token: boolean controlCaps()>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.Graphics2D getGraphics2D(org.apache.harmony.awt.wtk.NativeWindow,int,int,int,int)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: android.graphics.Bitmap getBitmap()>
<java.awt.font.GlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.inputmethodservice.KeyboardView: void closing()>
<android.opengl.GLES10: void glDisable(int)>
<java.awt.FontMetrics: int getAscent()>
<android.media.MediaPlayer: void release()>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>
<android.speech.SpeechRecognizer: void cancel()>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<java.awt.geom.Point2D.Double: java.lang.String toString()>
<android.location.Address: java.lang.String getFeatureName()>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.geom.RoundRectangle2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>
<java.awt.geom.FlatteningPathIterator: int currentSegment(float[])>
<android.database.MergeCursor: byte[] getBlob(int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>
<org.apache.harmony.awt.gl.render.JavaLineRasterizer.LineDasher: void <init>(float[],float)>
<android.graphics.Color: int green(int)>
<javax.imageio.stream.FileImageInputStream: void close()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>
<java.awt.image.IndexColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
<org.apache.harmony.awt.state.State: boolean isBackgroundSet()>
<org.apache.harmony.awt.gl.image.OffscreenImage: int getWidth(java.awt.image.ImageObserver)>
<java.awt.im.InputMethodHighlight: void <init>(boolean,int,int,java.util.Map)>
<android.pim.RecurrenceSet: boolean populateComponent(android.database.Cursor,android.pim.ICalendar.Component)>
<com.android.layoutlib.bridge.BridgeContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.pim.vcard.VCardParser_V21: java.lang.String maybeUnescapeText(java.lang.String)>
<android.webkit.WebView: void clearFormData()>
<android.renderscript.Allocation.Adapter2D: void subData(int,int,int,int,int[])>
<android.content.res.Configuration: void <init>()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
<com.google.android.mms.pdu.PduPersister: void release()>
<javax.imageio.metadata.IIOMetadataNode: void setUserObject(java.lang.Object)>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>
<java.awt.Point: void <init>()>
<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context)>
<java.awt.Component: java.awt.Component getComponentAt(java.awt.Point)>
<android.webkit.CacheManager.CacheResult: void setEncoding(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.status.StatusBarService)>
<android.graphics.drawable.Drawable: void setDither(boolean)>
<android.hardware.Camera.ErrorCallback: void onError(int,android.hardware.Camera)>
<android.server.BluetoothService: void <init>(android.content.Context)>
<android.os.Debug: int getBinderLocalObjectCount()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void imageComplete(int)>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>
<java.awt.Component: void removeMouseListener(java.awt.event.MouseListener)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: void <init>()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: int getWidth(int)>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.XmlResourceParser getXml(int)>
<android.graphics.Matrix: boolean invert()>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<android.preference.CheckBoxPreference: void setSummaryOn(int)>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<java.awt.image.RescaleOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<java.awt.GradientPaint: int getTransparency()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitEnd()>
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>
<java.awt.image.ComponentColorModel: java.lang.Object getDataElements(int[],int,java.lang.Object)>
<android.graphics.Paint: boolean isDither()>
<java.awt.im.InputMethodRequests: java.awt.font.TextHitInfo getLocationOffset(int,int)>
<java.awt.geom.Line2D: boolean intersectsLine(double,double,double,double)>
<android.widget.CursorTreeAdapter: long getGroupId(int)>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>
<android.webkit.PluginList: void pluginClicked(android.content.Context,int)>
<java.awt.geom.CubicCurve2D: double getY2()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addObjectValue(java.lang.String,java.lang.Class,boolean,java.lang.Object)>
<android.pim.ContactsAsyncHelper.ImageTracker: void <init>()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>
<android.content.res.Configuration: int describeContents()>
<android.content.pm.PackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>
<android.graphics.Matrix: void setSkew(float,float)>
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>
<android.app.admin.DeviceAdminInfo: int describeContents()>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.google.android.mms.pdu.PduParser: boolean parsePartHeaders(java.io.ByteArrayInputStream,com.google.android.mms.pdu.PduPart,int)>
<android.widget.AbsSeekBar: int getThumbOffset()>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>
<java.awt.geom.AffineTransform: void setToRotation(double)>
<org.apache.harmony.awt.gl.render.NativeImageBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeDoubles(double[],int,int)>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.util.MonthDisplayHelper: int getRowOf(int)>
<javax.microedition.khronos.opengles.GL10: void glLightx(int,int,int)>
<com.android.server.NetStatService: long getMobileRxBytes()>
<android.widget.TextView: float getTextScaleX()>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>
<android.database.MatrixCursor: int getCount()>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>
<android.database.sqlite.SQLiteCursor: int getCount()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<javax.imageio.IIOParam: void setController(javax.imageio.IIOParamController)>
<java.awt.DisplayMode: void <init>(int,int,int,int)>
<java.awt.geom.Point2D: double distance(double,double,double,double)>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitTypeVariable(java.lang.String)>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getExternalCacheDir()>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>
<android.content.ContentUris: long parseId(android.net.Uri)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>
<android.location.Location: int describeContents()>
<android.media.AudioTrack: int getChannelConfiguration()>
<java.awt.image.BufferedImage: java.awt.image.Raster getData()>
<com.google.android.mms.pdu.PduHeaders: long getLongInteger(int)>
<com.android.server.ProcessStats: int getLastSystemTime()>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>
<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,int[])>
<com.android.server.am.ActivityManagerService: boolean willActivityBeVisible(android.os.IBinder)>
<android.widget.Gallery: void setAnimationDuration(int)>
<org.apache.harmony.awt.gl.font.Glyph: int getPointHeight()>
<java.awt.image.ConvolveOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.view.Gravity: boolean isHorizontal(int)>
<java.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int,float,float)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void pushSegments(int,int)>
<java.awt.geom.Dimension2D: void setSize(double,double)>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<java.awt.Component: void <init>()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(java.lang.String,java.awt.font.FontRenderContext,java.awt.Font)>
<java.awt.AlphaComposite: float getAlpha()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void draw(java.awt.Shape)>
<android.widget.TextView: int getExtendedPaddingTop()>
<android.text.style.UnderlineSpan: int describeContents()>
<android.preference.Preference: void setIntent(android.content.Intent)>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>
<android.view.KeyEvent: int getKeyCode()>
<java.awt.Insets: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,int[],int)>
<android.widget.AdapterView.OnItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<java.awt.Component: void deliverEvent(java.awt.Event)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.graphics.Paint: float measureText(char[],int,int)>
<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPictureSize()>
<android.webkit.WebView: android.graphics.Picture capturePicture()>
<com.android.server.KeyInputQueue: int getTrackballKeycodeState(int)>
<android.net.http.SslError: boolean addError(int)>
<android.location.Address: java.lang.String getUrl()>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>
<javax.imageio.metadata.IIOMetadataFormat: int getChildPolicy(java.lang.String)>
<android.telephony.ServiceState: boolean getIsManualSelection()>
<java.awt.image.BufferedImage: boolean hasTileWriters()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>
<android.database.CursorWindow: void clear()>
<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>
<java.awt.Component: void addMouseWheelListener(java.awt.event.MouseWheelListener)>
<android.server.search.Searchables: java.util.ArrayList getSearchablesList()>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(char,int)>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<android.media.MediaRecorder: void setVideoSource(int)>
<android.app.SearchManager.OnCancelListener: void onCancel()>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<java.awt.event.WindowEvent: java.lang.String paramString()>
<javax.imageio.stream.FileImageOutputStream: void close()>
<java.awt.event.MouseMotionListener: void mouseMoved(java.awt.event.MouseEvent)>
<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<android.ddm.DdmHandleHeap: void register()>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.renderable.RenderableImageOp: java.lang.String[] getPropertyNames()>
<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>
<android.app.Dialog: void closeOptionsMenu()>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
<android.widget.TextView: void setMinHeight(int)>
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.opengl.GLES20: void glAttachShader(int,int)>
<java.awt.Component: java.awt.Rectangle bounds()>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<org.apache.harmony.awt.gl.font.FontManager: java.awt.peer.FontPeer createPhysicalFontPeer(java.lang.String,int,int)>
<org.apache.harmony.awt.gl.MultiRectArea.RectCash: void addRectCashed(int,int,int,int)>
<android.pim.vcard.VCardParser_V21: void parseVCardFile()>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.android.layoutlib.bridge.BridgeTypedArray: int getDimensionPixelSize(int,int)>
<android.renderscript.ScriptC.Builder: void addDefine(java.lang.String,float)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>
<android.widget.DatePicker: void <init>(android.content.Context)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String[] getChildNames(java.lang.String)>
<android.graphics.ColorMatrix: void reset()>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>
<android.hardware.Camera.Parameters: java.util.List getSupportedFocusModes()>
<java.awt.geom.QuadCurve2D: double getFlatnessSq()>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<java.awt.geom.Ellipse2D: boolean intersects(double,double,double,double)>
<java.awt.Color: java.lang.String toString()>
<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>
<com.android.layoutlib.bridge.ResourceHelper: android.graphics.drawable.Drawable getDrawable(com.android.layoutlib.api.IResourceValue,com.android.layoutlib.bridge.BridgeContext,boolean)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<java.awt.Point: boolean equals(java.lang.Object)>
<com.android.layoutlib.bridge.BridgeContext: void setTheme(int)>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
<android.widget.Adapter: boolean hasStableIds()>
<android.webkit.WebSettings: int getCacheMode()>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>
<android.net.wifi.WifiManager: int getWifiState()>
<com.android.tools.layoutlib.create.Main: void main(java.lang.String[])>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>
<com.google.android.mms.util.PduCacheEntry: long getThreadId()>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>
<javax.imageio.ImageTypeSpecifier: int getBufferedImageType()>
<java.awt.BasicStroke: void <init>(float,int,int,float)>
<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>
<android.graphics.Rect: void union(int,int,int,int)>
<android.app.SearchManager: void stopSearch()>
<android.text.method.ScrollingMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<java.awt.AWTPermission: void <init>(java.lang.String)>
<android.webkit.WebView: java.lang.String getTitle()>
<javax.microedition.khronos.egl.EGL10: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<javax.imageio.metadata.IIOMetadataFormat: int getAttributeListMaxLength(java.lang.String,java.lang.String)>
<com.google.android.gles_jni.EGLImpl: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.os.IBinder: boolean isBinderAlive()>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<android.os.BatteryStats.Uid.Pkg.Serv: long getStartTime(long,int)>
<android.app.Dialog: boolean onSearchRequested()>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.app.Dialog: void <init>(android.content.Context)>
<android.app.PendingIntent: int describeContents()>
<java.awt.color.ColorSpace: float getMaxValue(int)>
<java.awt.Graphics2D: java.awt.Stroke getStroke()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>
<javax.imageio.ImageWriter: javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<com.android.server.status.TrackingView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<java.awt.geom.QuadCurve2D: boolean contains(double,double,double,double)>
<android.accounts.Account: java.lang.String toString()>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>
<android.widget.AbsListView: int getTranscriptMode()>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>
<android.app.SearchDialog.SearchAutoComplete: boolean enoughToFilter()>
<android.hardware.GeomagneticField: float getFieldStrength()>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>
<java.awt.image.renderable.RenderableImageProducer: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>
<org.apache.harmony.awt.state.State: void setDefaultMinimumSize(java.awt.Dimension)>
<android.webkit.CookieManager: boolean acceptCookie()>
<android.app.ApplicationThreadProxy: void processInBackground()>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>
<javax.imageio.stream.FileImageInputStream: void <init>(java.io.File)>
<javax.imageio.metadata.IIOMetadataController: boolean activate(javax.imageio.metadata.IIOMetadata)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGrouping()>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>
<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>
<org.apache.harmony.awt.gl.color.LUTColorConverter: void <init>()>
<android.graphics.Matrix: boolean postSkew(float,float)>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>
<org.apache.harmony.awt.gl.Crossing: int crossShape(java.awt.Shape,double,double)>
<java.awt.Font: java.awt.Font deriveFont(float)>
<android.content.pm.FeatureInfo: int describeContents()>
<android.widget.TextView: void setAutoLinkMask(int)>
<android.util.MonthDisplayHelper: boolean isWithinCurrentMonth(int,int)>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>
<com.android.server.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName)>
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>
<java.awt.BufferCapabilities: boolean isMultiBufferAvailable()>
<javax.microedition.khronos.opengles.GL11: void glTexEnvi(int,int,int)>
<org.apache.harmony.awt.state.State: long getWindowId()>
<java.awt.image.LookupOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<com.android.server.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName)>
<java.awt.Toolkit: boolean isDynamicLayoutSet()>
<android.util.EventLog.Event: int getTag()>
<java.awt.geom.Arc2D.Double: void <init>()>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.os.Debug: void changeDebugPort(int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.android.layoutlib.bridge.BridgeContext: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.view.animation.Animation: boolean getDetachWallpaper()>
<android.widget.ListView: void setDividerHeight(int)>
<org.apache.harmony.awt.gl.MultiRectArea: boolean intersects(java.awt.geom.Rectangle2D)>
<android.text.DynamicLayout: int getLineDescent(int)>
<android.content.SearchRecentSuggestionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.widget.TabWidget: void setRightStripDrawable(int)>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.Telephony.Sms: boolean isOutgoingFolder(int)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>
<java.awt.image.DirectColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>
<android.graphics.Paint: float ascent()>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>
<android.telephony.SmsMessage: byte[] getUserData()>
<android.widget.ListView: void setSelection(int)>
<android.provider.Telephony.Mms: java.lang.String extractAddrSpec(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmCloseProfile(long)>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>
<android.content.ComponentName: void <init>(android.os.Parcel)>
<java.awt.event.FocusAdapter: void <init>()>
<android.graphics.Color: void colorToHSV(int,float[])>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(byte)>
<java.awt.geom.Point2D.Float: double getX()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation build()>
<android.bluetooth.BluetoothDevice: int hashCode()>
<android.widget.ImageView: void setSelected(boolean)>
<android.graphics.Paint: float getFontMetrics()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerNames(java.lang.String[])>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>
<android.graphics.Path: void moveTo(float,float)>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>
<android.graphics.drawable.ShapeDrawable: void <init>()>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>
<android.view.Surface: void setAlpha(float)>
<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<java.awt.image.Kernel: java.lang.Object clone()>
<android.database.Cursor: void close()>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<java.awt.event.ComponentListener: void componentShown(java.awt.event.ComponentEvent)>
<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.webkit.WebView: int findAll(java.lang.String)>
<android.widget.AdapterView: android.view.View getEmptyView()>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
<org.apache.harmony.awt.ClipRegion: boolean isEmpty()>
<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>
<com.android.server.ThrottleService: void <init>(android.content.Context)>
<android.view.ViewConfiguration: int getTouchSlop()>
<java.awt.geom.Arc2D: boolean containsAngle(double)>
<android.provider.MediaStore.Audio.Artists.Albums: android.net.Uri getContentUri(java.lang.String,long)>
<java.awt.Color: void <init>(int,int,int)>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.DialerFilter: int getMode()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>
<com.android.server.status.ExpandedView: void onLayout(boolean,int,int,int,int)>
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus.NmeaListener)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquation(int)>
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>
<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>
<android.drm.mobile1.DrmRawContent: java.lang.String getContentType()>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph[] getGlyphs(char[])>
<android.app.Dialog: android.app.Activity getOwnerActivity()>
<android.view.MotionEvent: int describeContents()>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>
<android.widget.MediaController: void hide()>
<android.os.Parcel: android.os.IBinder readStrongBinder()>
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>
<android.opengl.GLES20: void glDisable(int)>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>
<android.widget.Toast: void setGravity(int,int,int)>
<android.server.BluetoothService: int getRemoteClass(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: int getRemovedCount()>
<java.awt.RenderingHints: boolean containsValue(java.lang.Object)>
<java.awt.Component: void removeMouseWheelListener(java.awt.event.MouseWheelListener)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart removePart(int)>
<java.awt.geom.Point2D.Float: double getY()>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>
<android.graphics.Point: java.lang.String toString()>
<android.widget.RatingBar: void setMax(int)>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>
<java.awt.image.SinglePixelPackedSampleModel: void setSample(int,int,int,int,java.awt.image.DataBuffer)>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>
<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>
<org.apache.harmony.awt.gl.color.ICC_Transform: void <init>(java.awt.color.ICC_Profile[],int[])>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(int[],int,int)>
<java.awt.image.RescaleOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>
<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)>
<android.net.Downloads.ById: android.net.Downloads.StatusInfo getStatus(android.content.Context,long)>
<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)>
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void performDefaultLayout()>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>
<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.view.MotionEvent: float getHistoricalSize(int)>
<java.awt.geom.Line2D: java.awt.Rectangle getBounds()>
<android.widget.TableLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.ScaleDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.google.android.mms.util.AbstractCache: java.lang.Object get(java.lang.Object)>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.server.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName)>
<com.android.providers.settings.SettingsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
<java.awt.color.ColorSpace: java.lang.String getName(int)>
<android.text.AndroidCharacter: char getMirror(char)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: void addDataBufferListener(java.awt.image.DataBuffer,org.apache.harmony.awt.gl.image.DataBufferListener)>
<android.widget.LinearLayout: void setGravity(int)>
<android.location.Address: double getLatitude()>
<android.widget.ListView: boolean isItemChecked(int)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.app.ActivityThread.PackageInfo: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)>
<java.awt.Component: void list(java.io.PrintStream)>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>
<android.view.animation.Animation: void setZAdjustment(int)>
<android.pim.vcard.VCardUtils: int getPhoneNumberFormat(int)>
<android.app.Activity: void openContextMenu(android.view.View)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void <init>(java.awt.image.ImageProducer)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>
<org.apache.harmony.awt.im.InputMethodContext: java.awt.Component getClient()>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>
<android.app.ApplicationErrorReport.CrashInfo: void dump(android.util.Printer,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>
<android.text.Layout: int getLineTop(int)>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>
<android.widget.VideoView: void stopPlayback()>
<java.awt.image.ImageProducer: void removeConsumer(java.awt.image.ImageConsumer)>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>
<android.os.BatteryStats.Uid: void noteWifiTurnedOffLocked()>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>
<android.widget.CheckedTextView: void setChecked(boolean)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo hitTestChar(float,float)>
<android.webkit.UrlInterceptHandler: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glRenderbufferStorageOES(int,int,int,int)>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>
<android.view.View: int getHorizontalScrollbarHeight()>
<java.awt.image.BufferedImage: int getType()>
<android.app.ActivityGroup: void <init>(boolean)>
<org.apache.harmony.awt.gl.Surface: boolean isCaheValid(java.lang.Object)>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<android.text.style.TypefaceSpan: void <init>(java.lang.String)>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReaderSpi: void <init>()>
<java.awt.geom.RoundRectangle2D.Double: void setRoundRect(double,double,double,double,double,double)>
<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>
<android.telephony.gsm.SmsMessage.SubmitPdu: void <init>()>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.graphics.Bitmap: void recycle()>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
<javax.imageio.ImageIO: javax.imageio.ImageReader getImageReader(javax.imageio.ImageWriter)>
<android.view.KeyEvent: int getAction()>
<org.apache.harmony.awt.gl.font.TextRunSegmentImpl.TextRunSegmentCommon: java.lang.Object clone()>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>
<org.apache.harmony.x.imageio.spi.FileIOSSpi: java.lang.String getDescription(java.util.Locale)>
<android.widget.DialerFilter: void onModeChange(int,int)>
<java.awt.Cursor: java.awt.Cursor getSystemCustomCursor(java.lang.String)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getNamespaceURI()>
<java.awt.font.ShapeGraphicAttribute: void <init>(java.awt.Shape,int,boolean)>
<android.webkit.WebView: int computeVerticalScrollOffset()>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>
<java.awt.BufferCapabilities: void <init>(java.awt.ImageCapabilities,java.awt.ImageCapabilities,java.awt.BufferCapabilities.FlipContents)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<android.widget.CompoundButton: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.awt.geom.CubicCurve2D.Float: java.awt.geom.Point2D getP2()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: int getBaseLevel()>
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.widget.DoubleDigitManager.CallBack: void singleDigitFinal(int)>
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int)>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>
<com.android.layoutlib.bridge.Bridge: void clearCaches(java.lang.Object)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>
<java.awt.image.Raster: float getSampleFloat(int,int,int)>
<android.telephony.TelephonyManager: int getNetworkType()>
<java.awt.image.ColorConvertOp: void <init>(java.awt.RenderingHints)>
<android.view.Display: int getOrientation()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>
<org.apache.harmony.awt.gl.Crossing: int intersectShape(java.awt.Shape,double,double,double,double)>
<java.awt.geom.CubicCurve2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>
<android.database.CursorWrapper: boolean moveToPosition(int)>
<java.awt.image.ByteLookupTable: void <init>(int,byte[][])>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>
<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>
<java.awt.MenuComponent: java.lang.String getName()>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>
<android.net.Uri: java.lang.String getEncodedUserInfo()>
<android.location.Location: void reset()>
<org.apache.harmony.awt.ContextStorage: java.lang.Object getContextLock()>
<android.pim.vcard.VCardEntryConstructor: void startEntry()>
<android.webkit.WebView: void debugDump()>
<java.awt.geom.RoundRectangle2D: boolean contains(double,double,double,double)>
<java.awt.GraphicsConfiguration: java.awt.Rectangle getBounds()>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node getLastChild()>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.Shape getLogicalHighlightShape(int,int,java.awt.geom.Rectangle2D,java.awt.font.TextLayout)>
<java.awt.CompositeContext: void dispose()>
<com.android.server.status.UsbStorageActivity: void onCancel(android.content.DialogInterface)>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<java.awt.image.BufferedImage: int getTileHeight()>
<javax.imageio.stream.ImageOutputStream: void writeInts(int[],int,int)>
<android.speech.srec.Recognizer: java.lang.String getConfigDir(java.util.Locale)>
<java.awt.image.IndexColorModel: int getTransparency()>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.apache.harmony.awt.gl.font.CompositeFont: float getItalicAngle()>
<java.awt.font.GlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>
<org.apache.harmony.awt.gl.ImageSurface: long lock()>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addAttribute(java.lang.String,java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<android.graphics.Matrix: float mapRadius(float)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>
<android.content.pm.PackageParser.Package: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.image.PngDecoderJava: java.awt.image.BufferedImage decode(java.io.InputStream)>
<com.android.server.ClipboardService: boolean hasClipboardText()>
<android.os.StatFs: void restat(java.lang.String)>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>
<android.server.BluetoothService: boolean enable(boolean)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterParam: boolean getInterlace()>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<android.pim.vcard.VCardParser_V30: void <init>(int)>
<android.os.Handler: void <init>()>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.widget.ViewAnimator: void removeView(android.view.View)>
<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.telephony.TelephonyManager: boolean hasIccCard()>
<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>
<java.awt.MenuComponent: java.lang.String paramString()>
<com.android.common.OperationScheduler: boolean setMoratoriumTimeHttp(java.lang.String)>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>
<org.apache.harmony.awt.gl.image.DataBufferListener: void dataChanged()>
<android.widget.AbsListView: long pointToRowId(int,int)>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo)>
<java.awt.event.PaintEvent: java.lang.String paramString()>
<org.apache.harmony.x.imageio.spi.InputStreamIISSpi: void <init>()>
<com.android.commands.svc.DataCommand: java.lang.String shortHelp()>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>
<android.widget.AlphabetIndexer: int compare(java.lang.String,java.lang.String)>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>
<android.database.CharArrayBuffer: void <init>(char[])>
<org.apache.harmony.awt.gl.font.CompositeFont: void <init>(java.lang.String,java.lang.String,int,int,org.apache.harmony.awt.gl.font.FontProperty[],org.apache.harmony.awt.gl.font.FontPeerImpl[])>
<org.apache.harmony.awt.gl.font.BasicMetrics: float getAscent()>
<android.graphics.GradientShader.GradientPaint: void precomputeGradientColors()>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>
<android.app.SearchableInfo: int describeContents()>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ListView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.webkit.WebSettings: boolean supportZoom()>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void analyze()>
<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<java.awt.im.spi.InputMethod: void dispose()>
<android.provider.Telephony.Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.database.Cursor: short getShort(int)>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>
<android.os.BatteryStats.Uid: java.util.Map getWakelockStats()>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
<android.database.Cursor: boolean isClosed()>
<android.view.AbsSavedState: int describeContents()>
<org.apache.harmony.awt.gl.render.NullBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.graphics.Matrix: void setScale(float,float)>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.text.style.QuoteSpan: void <init>(int)>
<android.media.ToneGenerator: void <init>(int,int)>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>
<java.awt.ComponentBehavior: boolean isDisplayable()>
<android.net.Uri: boolean equals(java.lang.Object)>
<android.content.Intent: java.lang.String getPackage()>
<java.awt.Font: float getSize2D()>
<android.preference.PreferenceGroup: void setEnabled(boolean)>
<android.media.AudioRecord: void release()>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.apache.harmony.awt.wtk.Synchronizer: void unlock()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvf(int,int,float)>
<android.text.style.ScaleXSpan: void <init>(float)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>
<android.net.LocalSocket: java.io.InputStream getInputStream()>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>()>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>
<java.awt.geom.Dimension2D: java.lang.Object clone()>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.app.backup.BackupDataInput: boolean readNextHeader()>
<android.view.View: void setBackgroundColor(int)>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<java.awt.image.IndexColorModel: java.lang.String toString()>
<android.app.Activity: void closeContextMenu()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: void onRegistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<android.pim.vcard.VCardParser_V30: void handleType(java.lang.String)>
<android.database.Observable: void unregisterObserver(java.lang.Object)>
<java.awt.MenuComponent: void setName(java.lang.String)>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>
<com.google.android.mms.pdu.PduPart: void setDataUri(android.net.Uri)>
<android.database.AbstractCursor: int getCount()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getLineNumber()>
<com.android.server.status.StatusBarView: void onFinishInflate()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String nextText()>
<android.webkit.WebView: boolean canGoBack()>
<android.hardware.Camera.Parameters: java.util.List getSupportedJpegThumbnailSizes()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: org.apache.harmony.awt.gl.AwtImageBackdoorAccessor getInstance()>
<com.android.server.am.BatteryStatsService: void noteStartWakelock(int,java.lang.String,int)>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>
<android.os.PowerManager.WakeLock: void acquire(long)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>
<android.speech.RecognitionListener: void onEvent(int,android.os.Bundle)>
<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<java.awt.image.MultiPixelPackedSampleModel: int getNumDataElements()>
<android.util.SparseBooleanArray: boolean valueAt(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.os.PatternMatcher: java.lang.String toString()>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStroke(char)>
<java.awt.geom.CubicCurve2D: java.awt.geom.Point2D getCtrlP1()>
<android.preference.Preference: boolean getShouldDisableView()>
<java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Composite getComposite()>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<java.awt.image.IndexColorModel: void finalize()>
<javax.imageio.spi.ImageTranscoderSpi: java.lang.String getWriterServiceProviderName()>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>
<java.awt.geom.AffineTransform: java.awt.geom.Point2D inverseTransform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>()>
<java.awt.geom.Dimension2D: void setSize(java.awt.geom.Dimension2D)>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.google.android.mms.pdu.NotifyRespInd: void <init>(int,byte[],int)>
<android.pim.vcard.VCardParser_V21: java.lang.String getVersionString()>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.database.BulkCursorProxy: void onMove(int)>
<java.awt.Toolkit: java.awt.image.ColorModel getColorModel()>
<android.content.res.Resources.Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<com.android.server.connectivity.Tethering: java.lang.String[] getUpstreamIfaceRegexs()>
<android.pim.vcard.VCardConfig: boolean onlyOneNoteFieldIsAvailable(int)>
<org.apache.harmony.x.imageio.spi.RAFIOSSpi: java.lang.String getDescription(java.util.Locale)>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.text.style.AlignmentSpan.Standard: android.text.Layout.Alignment getAlignment()>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,float[],int)>
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>
<com.android.server.status.StatusBarService: java.lang.String viewInfo(android.view.View)>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>
<android.os.Parcel: java.lang.String[] createStringArray()>
<com.android.tools.layoutlib.create.LogAbortException: void <init>(java.lang.String,java.lang.Object[])>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,java.nio.Buffer)>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<android.location.Address: java.lang.String getAdminArea()>
<android.content.IntentFilter: void addDataPath(java.lang.String,int)>
<android.os.FileObserver: void onEvent(int,java.lang.String)>
<android.pim.vcard.VCardEntry.ImData: boolean equals(java.lang.Object)>
<android.widget.SimpleAdapter.ViewBinder: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>
<java.awt.geom.QuadCurve2D.Double: void <init>(double,double,double,double,double,double)>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>
<java.awt.GraphicsConfiguration: java.awt.image.BufferedImage createCompatibleImage(int,int,int)>
<java.awt.image.DataBuffer: void setElemFloat(int,int,float)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void imageComplete(int)>
<android.view.Menu: boolean performIdentifierAction(int,int)>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>
<android.os.storage.StorageManager: void registerListener(android.os.storage.StorageEventListener)>
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.harmony.awt.wtk.ShutdownThread: void <init>()>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>
<javax.imageio.spi.ServiceRegistry: java.util.Iterator getCategories()>
<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean)>
<android.database.Cursor: java.lang.String getString(int)>
<android.graphics.Interpolator: void finalize()>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>
<android.widget.TableLayout: void requestLayout()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.view.View: android.view.View findFocus()>
<java.awt.font.TextLayout: int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<javax.imageio.metadata.IIOMetadataFormat: int getElementMaxChildren(java.lang.String)>
<javax.imageio.stream.FileImageInputStream: void seek(long)>
<android.widget.TextView: android.text.InputFilter[] getFilters()>
<android.webkit.Plugin: void setFileName(java.lang.String)>
<com.android.server.status.CloseDragHandle: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>
<javax.imageio.stream.FileCacheImageInputStream: int read(byte[],int,int)>
<android.util.TypedValue: float getFloat()>
<java.awt.GraphicsConfiguration: java.awt.image.BufferedImage createCompatibleImage(int,int)>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>
<android.graphics.Canvas: void scale(float,float,float,float)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setPaintMode()>
<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>
<android.net.SSLCertificateSocketFactory: void <init>(int)>
<android.util.Base64OutputStream: void write(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>
<android.graphics.Paint: void setTextScaleX(float)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setLogicalHeight(int)>
<android.pim.vcard.VCardEntryConstructor: void endEntry()>
<java.awt.AWTEvent: java.lang.String paramString()>
<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener: void onUtteranceCompleted(java.lang.String)>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>
<android.opengl.GLES20: void glCompileShader(int)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.view.View: int getPaddingLeft()>
<java.awt.image.BufferedImage: java.awt.image.WritableRaster getWritableTile(int,int)>
<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],byte[])>
<android.widget.SlidingDrawer: void animateClose()>
<android.hardware.Camera.Parameters: java.lang.String getSceneMode()>
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<java.awt.Color: int getRed()>
<javax.imageio.event.IIOReadUpdateListener: void thumbnailPassComplete(javax.imageio.ImageReader,java.awt.image.BufferedImage)>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>
<android.pim.vcard.VCardInterpreterCollection: void <init>(java.util.Collection)>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>
<java.awt.font.GlyphVector: int[] getGlyphCodes(int,int,int[])>
<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>
<javax.imageio.ImageReader: int getTileHeight(int)>
<android.app.Activity: void onStop()>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
<android.renderscript.SimpleMesh.Builder: void setIndexType(android.renderscript.Element,int)>
<android.view.View: int getWidth()>
<android.widget.EditText: android.text.Editable getText()>
<com.google.android.maps.MapView: void onRestoreInstanceState(android.os.Bundle)>
<java.awt.BasicStroke: int getLineJoin()>
<android.widget.ExpandableListView.OnGroupClickListener: boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long)>
<android.app.ListActivity: android.widget.ListView getListView()>
<android.webkit.CacheManager.CacheResult: int getHttpStatusCode()>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.view.Menu: void removeItem(int)>
<javax.imageio.stream.ImageOutputStream: void writeLongs(long[],int,int)>
<java.awt.font.OpenType: int getVersion()>
<android.os.ParcelUuid: int hashCode()>
<android.util.AttributeSet: java.lang.String getIdAttribute()>
<org.apache.harmony.awt.state.State: java.awt.Rectangle getBounds()>
<android.location.Address: void setFeatureName(java.lang.String)>
<org.apache.harmony.awt.state.State: boolean isFocused()>
<android.graphics.Region: boolean contains(int,int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean isLTR()>
<com.android.layoutlib.bridge.BridgeContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>
<android.text.Editable.Factory: android.text.Editable newEditable(java.lang.CharSequence)>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.content.pm.ApplicationInfo: int describeContents()>
<android.os.Debug: void resetThreadGcInvocationCount()>
<android.widget.TextView: void setHighlightColor(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>
<com.android.server.KeyInputQueue: boolean getAbsoluteInfo(int,int,com.android.server.InputDevice.AbsoluteInfo)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<com.google.android.mms.pdu.PduPersister: void updateParts(android.net.Uri,com.google.android.mms.pdu.PduBody)>
<android.widget.AbsSeekBar: int getKeyProgressIncrement()>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>
<android.opengl.GLES10: void glDepthFunc(int)>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<java.awt.geom.Ellipse2D.Float: void setFrame(float,float,float,float)>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>
<android.os.CountDownTimer: void onTick(long)>
<android.webkit.SslErrorHandler: void cancel()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.database.MatrixCursor: short getShort(int)>
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getBcc()>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>
<android.widget.PopupWindow: void <init>(android.content.Context)>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>
<com.android.server.InputMethodManagerService: void systemReady()>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>
<android.widget.Scroller: int getCurrX()>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>
<com.android.layoutlib.bridge.BridgeContentResolver: void <init>(android.content.Context)>
<android.app.FullBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.server.status.UsbStorageActivity: void onPause()>
<java.awt.event.KeyListener: void keyReleased(java.awt.event.KeyEvent)>
<android.text.SpannableStringBuilder: int length()>
<javax.imageio.metadata.IIOMetadataNode: java.lang.Object getUserData(java.lang.String)>
<android.text.StaticLayout: android.text.Layout.Directions getLineDirections(int)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<javax.imageio.stream.ImageInputStreamImpl: long getStreamPosition()>
<java.awt.geom.QuadCurve2D.Float: void <init>()>
<android.view.WindowManagerPolicy.WindowState: boolean isDisplayedLw()>
<android.net.LocalSocket: int getSendBufferSize()>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.awt.RenderingHints.Key: boolean equals(java.lang.Object)>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>
<com.android.layoutlib.bridge.BridgeContext: int checkPermission(java.lang.String,int,int)>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>
<android.content.pm.PackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
<android.view.View: void onDisplayHint(int)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
<android.renderscript.Light.Builder: android.renderscript.Light create()>
<android.gesture.GestureOverlayView: long getFadeOffset()>
<android.net.Uri: java.lang.String getQuery()>
<java.awt.image.ColorModel: int getPixelSize()>
<android.text.method.TextKeyListener: int getInputType()>
<android.database.Cursor: android.os.Bundle getExtras()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFormats()>
<android.media.JetPlayer: java.lang.Object clone()>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>
<java.awt.geom.AffineTransform: void getMatrix(double[])>
<android.preference.GenericInflater.Factory: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>
<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>
<java.awt.Graphics: java.awt.Shape getClip()>
<android.provider.Telephony.Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean)>
<java.awt.color.ICC_ColorSpace: float[] toRGB(float[])>
<android.provider.Telephony.Sms.Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>
<android.widget.RelativeLayout: int getBaseline()>
<android.pim.vcard.VCardEntry: java.util.List getPhotoList()>
<android.view.Window.Callback: boolean onSearchRequested()>
<java.awt.Component.FlipBufferStrategy: java.awt.Image getBackBuffer()>
<android.app.ActivityManager.MemoryInfo: void <init>()>
<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>
<java.awt.Component: boolean contains(java.awt.Point)>
<java.awt.image.ComponentColorModel: float[] getNormalizedComponents(java.lang.Object,float[],int)>
<android.widget.CursorTreeAdapter: int getGroupCount()>
<android.telephony.SmsMessage: int getProtocolIdentifier()>
<android.telephony.ServiceState: void setStateOutOfService()>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void close()>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>
<javax.imageio.IIOParam: java.awt.Rectangle getSourceRegion()>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.content.SyncResult: java.lang.String toDebugString()>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.graphics.Paint: void setTextSkewX(float)>
<android.widget.Gallery: void <init>(android.content.Context)>
<android.app.Dialog: void setDismissMessage(android.os.Message)>
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.view.View: boolean onCheckIsTextEditor()>
<android.view.WindowManager.BadTokenException: void <init>()>
<android.os.Binder: int getCallingPid()>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>
<android.widget.RelativeLayout: void onMeasure(int,int)>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>
<javax.imageio.stream.ImageInputStream: void setBitOffset(int)>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>
<android.gesture.GestureStore: void setOrientationStyle(int)>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.google.android.util.AbstractMessageParser.Smiley: void <init>(java.lang.String)>
<org.apache.harmony.awt.state.MenuState: int getItemCount()>
<com.google.android.mms.pdu.SendConf: byte[] getTransactionId()>
<android.opengl.GLES20: void glUniform2i(int,int,int)>
<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<android.renderscript.Allocation.Adapter2D: void setConstraint(android.renderscript.Dimension,int)>
<android.media.SoundPool: void autoPause()>
<android.database.AbstractWindowedCursor: boolean isString(int)>
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>
<com.google.android.mms.pdu.PduPart: void setName(byte[])>
<java.awt.Polygon: void <init>()>
<java.beans.PropertyVetoException: java.beans.PropertyChangeEvent getPropertyChangeEvent()>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,int[],int)>
<javax.microedition.khronos.egl.EGL10: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: com.google.android.util.AbstractMessageParser.FlickrPhoto matchURL(java.lang.String,java.lang.String)>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
<javax.imageio.ImageIO: java.util.Iterator getImageReaders(java.lang.Object)>
<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
<android.ddm.DdmHandleExit: void disconnected()>
<java.awt.geom.RoundRectangle2D.Double: double getArcWidth()>
<android.view.Menu: android.view.MenuItem findItem(int)>
<android.content.pm.PackageItemInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.server.BluetoothService: boolean setScanMode(int,int)>
<org.apache.harmony.awt.gl.MultiRectArea: int getRectCount()>
<org.apache.harmony.awt.state.MenuItemState: java.awt.Rectangle getShortcutBounds()>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>
<java.awt.image.PixelGrabber: int getWidth()>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getUnderlineOffset()>
<org.apache.harmony.awt.gl.image.PNGData: void <init>()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<java.awt.Component.BltBufferStrategy: void revalidate()>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.text.HtmlToSpannedConverter: void <init>(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler,org.ccil.cowan.tagsoup.Parser)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>
<java.awt.event.WindowStateListener: void windowStateChanged(java.awt.event.WindowEvent)>
<android.opengl.GLES10: void glDepthRangex(int,int)>
<android.os.Messenger: android.os.IBinder getBinder()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>
<android.opengl.Matrix: float length(float,float,float)>
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)>
<java.awt.event.InputMethodEvent: void consume()>
<android.text.Selection: void selectAll(android.text.Spannable)>
<android.app.Application: void onTerminate()>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>
<javax.imageio.ImageWriter: void reset()>
<android.telephony.ServiceState: void setRoaming(boolean)>
<android.provider.Telephony.Mms: boolean isEmailAddress(java.lang.String)>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>
<android.graphics.Camera: float dotWithNormal(float,float,float)>
<javax.imageio.stream.FileCacheImageOutputStream: int read()>
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>
<java.awt.geom.Rectangle2D.Double: void setRect(double,double,double,double)>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>
<android.view.View: void dispatchWindowVisibilityChanged(int)>
<javax.imageio.IIOException: void <init>(java.lang.String,java.lang.Throwable)>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.os.Debug: int getBinderReceivedTransactions()>
<android.util.EventLogTags: void <init>(java.io.BufferedReader)>
<android.os.Debug: void resetGlobalAllocCount()>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>
<java.awt.MenuContainer: void remove(java.awt.MenuComponent)>
<java.awt.Color: int getGreen()>
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>
<android.database.sqlite.SQLiteProgram: void native_compile(java.lang.String)>
<android.content.IntentSender: int hashCode()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.content.SyncResult: boolean hasSoftError()>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>
<java.awt.event.KeyEvent: int getKeyLocation()>
<android.preference.Preference: void setSelectable(boolean)>
<org.apache.harmony.awt.state.State: java.awt.Dimension getDefaultMinimumSize()>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,boolean[],int)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)>
<android.widget.TableRow: int getVirtualChildCount()>
<java.awt.image.MultiPixelPackedSampleModel: int[] getSampleSize()>
<android.view.MotionEvent: float getY()>
<java.beans.PropertyEditorSupport: java.lang.Object getValue()>
<java.awt.geom.GeneralPath: void lineTo(float,float)>
<java.awt.ComponentOrientation: java.awt.ComponentOrientation getOrientation(java.util.ResourceBundle)>
<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.app.backup.BackupManager: void dataChanged()>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>
<android.pim.RecurrenceSet: boolean hasRecurrence()>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.view.View: void setFocusableInTouchMode(boolean)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>
<android.widget.RelativeLayout: void setVerticalGravity(int)>
<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>
<android.widget.VideoView: void resume()>
<java.awt.geom.RoundRectangle2D: void setRoundRect(java.awt.geom.RoundRectangle2D)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
<java.awt.geom.CubicCurve2D: java.lang.Object clone()>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<java.awt.image.DataBufferUShort: short[][] getBankData()>
<org.apache.harmony.awt.gl.ICompositeContext: void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)>
<java.awt.Component: boolean mouseDrag(java.awt.Event,int,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.Comparable getObjectMaxValue(java.lang.String)>
<java.awt.geom.Arc2D: void setAngleStart(java.awt.geom.Point2D)>
<android.pim.vcard.VCardBuilder: void appendPhotoLine(java.lang.String,java.lang.String)>
<android.widget.AbsListView: boolean hasTextFilter()>
<android.content.EntityIterator: void reset()>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>
<java.awt.image.DirectColorModel: int getRed(int)>
<java.awt.Shape: boolean contains(java.awt.geom.Point2D)>
<java.awt.image.ColorModel: float[] getNormalizedComponents(int[],int,float[],int)>
<android.widget.AbsSpinner: void <init>(android.content.Context)>
<android.location.Address: double getLongitude()>
<android.opengl.GLES10: void glBlendFunc(int,int)>
<android.database.BulkCursorProxy: android.os.IBinder asBinder()>
<android.view.ScaleGestureDetector: float getCurrentSpan()>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>
<android.text.SpannableStringBuilder: void clear()>
<android.graphics.Bitmap: int getScaledHeight(int)>
<java.awt.event.MouseAdapter: void mouseClicked(java.awt.event.MouseEvent)>
<org.apache.harmony.awt.gl.image.PNGData: short getInterlace()>
<javax.imageio.stream.ImageOutputStream: void write(byte[],int,int)>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(int[],int)>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>
<com.android.server.am.ActivityManagerService: int getProcessLimit()>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawLine(int,int,int,int)>
<android.pim.vcard.VCardUtils: java.lang.String toHalfWidthString(java.lang.String)>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,java.lang.CharSequence,int)>
<android.util.SparseIntArray: void delete(int)>
<android.location.Criteria: boolean isAltitudeRequired()>
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>
<android.pim.vcard.VCardEntryConstructor: void clear()>
<java.awt.image.ColorModel: java.lang.Object getDataElements(int,java.lang.Object)>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>
<android.content.ContentValues: boolean containsKey(java.lang.String)>
<javax.imageio.ImageWriter: void removeIIOWriteWarningListener(javax.imageio.event.IIOWriteWarningListener)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>()>
<java.awt.font.LineMetrics: int getNumChars()>
<java.awt.image.renderable.ParameterBlock: void <init>(java.util.Vector)>
<android.text.method.ArrowKeyMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ComponentInfo)>
<javax.imageio.plugins.jpeg.JPEGHuffmanTable: short[] getLengths()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUser()>
<javax.imageio.IIOImage: java.awt.image.Raster getRaster()>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>
<java.awt.geom.QuadCurve2D.Float: double getX1()>
<java.awt.BasicStroke: float getMiterLimit()>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.color.NativeCMM: int cmmGetProfileElementSize(long,int)>
<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,int[],int)>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>
<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.inputmethodservice.Keyboard.Row)>
<java.awt.Graphics2D: void setBackground(java.awt.Color)>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>
<com.android.layoutlib.bridge.MockView: void onDraw(android.graphics.Canvas)>
<android.os.Looper: void quit()>
<javax.imageio.ImageIO: java.util.Iterator getImageReadersByFormatName(java.lang.String)>
<android.net.NetworkInfo: int getSubtype()>
<android.graphics.Path: void moveTo(float,float)>
<android.view.animation.Transformation: void setAlpha(float)>
<java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<android.media.MediaRecorder: void <init>()>
<android.provider.Calendar.CalendarAlerts: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.server.BluetoothService: boolean createBond(java.lang.String)>
<java.awt.geom.Line2D: double ptLineDistSq(double,double,double,double,double,double)>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>
<android.pim.vcard.VCardParser: void <init>()>
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>
<java.awt.font.TextHitInfo: int hashCode()>
<android.content.pm.PackageParser.Provider: void setPackageName(java.lang.String)>
<android.view.ScaleGestureDetector: boolean isInProgress()>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>
<android.graphics.Paint: void setDither(boolean)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>
<android.content.res.TypedArray: void recycle()>
<android.drm.mobile1.DrmConstraintInfo: int getCount()>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.awt.geom.Arc2D: void setArc(java.awt.geom.Point2D,java.awt.geom.Dimension2D,double,double,int)>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>
<android.graphics.Bitmap: void eraseColor(int)>
<com.android.common.OperationScheduler: void onTransientError()>
<java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>
<android.hardware.Camera.ShutterCallback: void onShutter()>
<java.awt.event.FocusListener: void focusLost(java.awt.event.FocusEvent)>
<android.preference.Preference: void <init>(android.content.Context)>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>
<org.apache.harmony.awt.gl.image.PNGData: short getFilter()>
<android.text.BoringLayout: boolean getLineContainsTab(int)>
<android.view.View: void setWillNotDraw(boolean)>
<com.google.android.gles_jni.GLImpl: void glTranslatex(int,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiRunning()>
<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>
<android.widget.TextView: int getAutoLinkMask()>
<java.awt.image.SampleModel: float getSampleFloat(int,int,int,java.awt.image.DataBuffer)>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<java.awt.image.DirectColorModel: java.lang.Object getDataElements(int,java.lang.Object)>
<com.google.android.mms.InvalidHeaderValueException: void <init>()>
<java.awt.image.AffineTransformOp: java.awt.RenderingHints getRenderingHints()>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.speech.tts.TextToSpeech: void shutdown()>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>
<android.view.animation.Animation: boolean getFillAfter()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: char getGlyphChar(int)>
<javax.imageio.spi.ImageReaderWriterSpi: javax.imageio.metadata.IIOMetadataFormat getImageMetadataFormat(java.lang.String)>
<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>
<com.android.server.status.StatusBarService: android.os.IBinder addIcon(com.android.server.status.IconData,com.android.server.status.NotificationData)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawRoundRect(int,int,int,int,int,int)>
<com.android.layoutlib.bridge.BridgeContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<android.widget.TextView: int getCompoundDrawablePadding()>
<javax.imageio.stream.MemoryCacheImageInputStream: boolean isCachedFile()>
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.renderable.ParameterBlock: void setSources(java.util.Vector)>
<android.widget.LinearLayout: void setWeightSum(float)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<android.view.View: android.view.View focusSearch(int)>
<org.apache.harmony.awt.gl.font.BasicMetrics: float getLeading()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Bundle: char getChar(java.lang.String,char)>
<org.apache.harmony.awt.gl.render.JavaArcRasterizer: org.apache.harmony.awt.gl.MultiRectArea rasterize(int,int,int,int,double,double,org.apache.harmony.awt.gl.MultiRectArea)>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>
<android.widget.PopupWindow: void update(android.view.View,int,int)>
<java.awt.Graphics: java.awt.Graphics create()>
<org.apache.harmony.awt.gl.image.PNGData: long getWidth()>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>
<org.apache.harmony.awt.state.MenuItemState: boolean isChecked()>
<javax.imageio.spi.ServiceRegistry: java.util.Iterator lookupProviders(java.lang.Class)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<android.widget.PopupWindow: boolean isClippingEnabled()>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
<android.widget.ListView: void onFinishInflate()>
<java.awt.geom.Arc2D.Float: double getAngleExtent()>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>
<java.awt.image.DataBufferByte: byte[][] getBankData()>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>
<javax.imageio.ImageReader: void processImageStarted(int)>
<android.os.Bundle: char[] getCharArray(java.lang.String)>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<java.awt.image.DirectColorModel: int[] getComponents(int,int[],int)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<java.awt.Font: java.lang.String getFamily()>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.FontExtraMetrics getExtraMetrics()>
<android.database.AbstractCursor: java.lang.String getString(int)>
<android.location.Address: java.lang.String getPhone()>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>
<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>
<android.opengl.GLES20: void glPixelStorei(int,int)>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.pim.vcard.VCardUtils: boolean containsOnlyAlphaDigitHyphen(java.lang.String[])>
<android.widget.AbsListView: void layoutChildren()>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>
<java.awt.image.DataBufferFloat: void setElemDouble(int,int,double)>
<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>
<java.awt.Graphics: boolean hitClip(int,int,int,int)>
<org.apache.harmony.awt.wtk.WindowFactory: java.awt.Dimension getWindowSizeById(long)>
<android.widget.ArrayAdapter: void clear()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void dispose()>
<java.awt.image.IndexColorModel: void <init>(int,int,int[],int,boolean,int,int)>
<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedWriteMethod()>
<android.webkit.WebSettings: boolean getNavDump()>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>
<java.awt.GradientPaint: java.awt.Color getColor2()>
<java.awt.event.WindowAdapter: void windowOpened(java.awt.event.WindowEvent)>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>
<java.awt.AWTKeyStroke: int getModifiers()>
<android.util.EventLogTags: android.util.EventLogTags.Description get(int)>
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>
<android.os.PatternMatcher: java.lang.String getPath()>
<android.widget.ScrollView: void <init>(android.content.Context)>
<android.pim.vcard.VCardEntryCounter: void endEntry()>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleLw()>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>
<android.widget.TextView: void setSingleLine()>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>
<android.os.Bundle: double getDouble(java.lang.String,double)>
<javax.imageio.ImageReadParam: void setDestination(java.awt.image.BufferedImage)>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>
<android.view.ScaleGestureDetector: long getTimeDelta()>
<android.view.View: void clearAnimation()>
<android.widget.Spinner: void <init>(android.content.Context)>
<android.location.Location: float getAccuracy()>
<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<java.awt.Color: float[] getComponents(float[])>
<android.util.TimingLogger: void dumpToLog()>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.ImageReader: void processImageUpdate(java.awt.image.BufferedImage,int,int,int,int,int,int,int[])>
<android.text.LoginFilter: boolean isAllowed(char)>
<java.awt.font.OpenType: byte[] getFontTable(int)>
<android.app.DatePickerDialog: void updateDate(int,int,int)>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.widget.ExpandableListView: boolean expandGroup(int)>
<android.content.AsyncQueryHandler: void onUpdateComplete(int,java.lang.Object,int)>
<android.text.LoginFilter: void onStop()>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,int)>
<android.pim.vcard.VCardEntry: java.lang.String getSuffix()>
<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>
<android.graphics.drawable.ClipDrawable: boolean isStateful()>
<android.view.View: int getPaddingBottom()>
<java.awt.image.ColorConvertOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>
<android.security.Md5MessageDigest: byte[] digest()>
<android.os.Bundle: byte getByte(java.lang.String)>
<com.android.layoutlib.bridge.BridgeResources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<java.awt.geom.FlatteningPathIterator: double getFlatness()>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmDeleteTransform(long)>
<java.awt.Graphics: void setFont(java.awt.Font)>
<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>
<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeEndSnapshot(android.os.Bundle)>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>
<java.awt.font.GlyphMetrics: boolean isComponent()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getAttributeListMinLength(java.lang.String,java.lang.String)>
<android.net.Downloads.StatusInfo: boolean isSuccessful()>
<android.content.res.Resources.Theme: void dump(int,java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.create.Log: void setVerbose(boolean)>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>
<java.awt.geom.AffineTransform: double getShearX()>
<android.webkit.WebView: void stopLoading()>
<com.android.layoutlib.bridge.BridgeContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.pim.RecurrenceSet: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.FontMetrics: void <init>(java.awt.Font)>
<java.awt.geom.Rectangle2D.Float: void <init>()>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<java.awt.geom.RectangularShape: void setFrame(java.awt.geom.Point2D,java.awt.geom.Dimension2D)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<java.awt.Shape: boolean contains(java.awt.geom.Rectangle2D)>
<android.view.ViewGroup: boolean hasFocus()>
<android.content.AsyncQueryHandler: void cancelOperation(int)>
<java.awt.event.AWTEventListenerProxy: void eventDispatched(java.awt.AWTEvent)>
<java.awt.image.RGBImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<android.graphics.Matrix: boolean preConcat()>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getMaxAscent()>
<android.app.AlertDialog: void <init>(android.content.Context)>
<java.awt.Image: java.lang.Object getProperty(java.lang.String,java.awt.image.ImageObserver)>
<java.awt.image.DataBuffer: int getNumBanks()>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>
<android.app.Activity: int getTaskId()>
<java.awt.image.DataBufferShort: short[][] getBankData()>
<android.widget.Chronometer: void setFormat(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glColorPointer(int,int,int,int)>
<android.view.animation.LayoutAnimationController: int getOrder()>
<java.awt.geom.AffineTransform: void setToIdentity()>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.net.SSLSessionCache: void <init>(java.io.File)>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<com.google.android.mms.pdu.PduBody: boolean addPart(com.google.android.mms.pdu.PduPart)>
<android.webkit.PluginData: int getStatusCode()>
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>
<android.text.style.RelativeSizeSpan: void <init>(float)>
<android.os.Parcel: void readStringList(java.util.List)>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
<javax.imageio.ImageReader: void processImageComplete()>
<android.view.ViewGroup: void startLayoutAnimation()>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getNamespace()>
<java.beans.FeatureDescriptor: void setName(java.lang.String)>
<android.widget.TableLayout: boolean isShrinkAllColumns()>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>
<android.util.Base64InputStream: int available()>
<com.google.android.util.AbstractMessageParser.TrieNode: boolean exists()>
<android.net.Downloads.ByUri: int getProgressColumnTotalBytes()>
<android.os.Parcel: int dataSize()>
<java.awt.Toolkit: java.awt.EventQueue getSystemEventQueueImpl()>
<android.widget.ExpandableListAdapter: java.lang.Object getGroup(int)>
<java.awt.BasicStroke: float getDashPhase()>
<android.net.Downloads.ByUri: android.net.Downloads.StatusInfo getStatus(android.content.Context,java.lang.String,long)>
<android.view.View: int getNextFocusLeftId()>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.webkit.Plugin: void setDescription(java.lang.String)>
<android.graphics.drawable.RotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>
<android.util.SparseBooleanArray: void delete(int)>
<java.awt.Component: java.awt.Dimension getPreferredSize()>
<android.pim.vcard.VCardInterpreter: void startEntry()>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<java.awt.color.ICC_ProfileRGB: float getGamma(int)>
<java.beans.PropertyEditorSupport: void <init>(java.lang.Object)>
<android.view.View: int getPaddingTop()>
<android.graphics.Paint: float descent()>
<java.awt.Font: int getStyle()>
<java.awt.Component: void repaint(int,int,int,int)>
<com.android.server.InputMethodManagerService: void removeClient(com.android.internal.view.IInputMethodClient)>
<android.database.MergeCursor: int getInt(int)>
<android.text.Layout: int getLineAscent(int)>
<android.app.SearchManager.OnDismissListener: void onDismiss()>
<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>
<android.webkit.WebView: void freeMemory()>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.font.CompositeFont: int getCharFontIndex(char,int)>
<org.apache.harmony.awt.wtk.NativeEventQueue: long getJavaWindow()>
<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>
<android.pim.vcard.VCardParser_V30: void <init>()>
<android.net.Uri: java.lang.String getUserInfo()>
<android.widget.ImageSwitcher: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>
<android.graphics.Path: boolean isEmpty()>
<android.renderscript.Light.Builder: void lightSetIsMono(boolean)>
<org.apache.harmony.awt.gl.font.FontManager: java.io.File getTempFontFile()>
<java.awt.geom.CubicCurve2D: boolean contains(double,double)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>
<android.renderscript.ProgramFragment.ShaderBuilder: android.renderscript.ProgramFragment create()>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.widget.Chronometer: long getBase()>
<android.gesture.GestureStore: boolean hasChanged()>
<javax.microedition.khronos.opengles.GL10: void glClearColorx(int,int,int,int)>
<java.awt.geom.RectangularShape: void setFrameFromCenter(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<java.awt.font.GlyphMetrics: float getLSB()>
<android.os.Message: android.os.Bundle peekData()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: java.lang.Object clone()>
<java.awt.Component: void firePropertyChange(java.lang.String,byte,byte)>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.graphics.Typeface: int getStyle()>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<java.beans.FeatureDescriptor: java.lang.String getName()>
<android.util.StateSet: java.lang.String dump(int[])>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler)>
<android.widget.AbsListView: void drawableStateChanged()>
<org.apache.harmony.awt.gl.MultiRectArea.RectCash: void addRectCashed(int[],int,int)>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.providers.settings.DatabaseHelper: boolean isValidTable(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Part: com.google.android.util.AbstractMessageParser.Token getMediaToken()>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.HeaderViewListAdapter: boolean hasStableIds()>
<android.view.OrientationEventListener: void disable()>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>
<android.util.AttributeSet: int getIdAttributeResourceValue(int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void <init>(org.objectweb.asm.signature.SignatureVisitor)>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getDrawable()>
<android.webkit.WebView: void requestImageRef(android.os.Message)>
<android.os.Parcel: void readBinderList(java.util.List)>
<org.apache.harmony.awt.wtk.NativeWindow: void toFront()>
<com.google.android.mms.pdu.PduPart: void setContentType(byte[])>
<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>
<android.view.View: void setId(int)>
<com.android.tools.layoutlib.create.MethodListener: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<java.awt.image.ImageFilter: void imageComplete(int)>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>
<java.awt.geom.CubicCurve2D.Float: double getCtrlX2()>
<java.awt.Color: void <init>(int,boolean)>
<android.util.TypedValue: float getFraction(float,float)>
<java.beans.FeatureDescriptor: boolean isPreferred()>
<com.google.android.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>
<javax.imageio.ImageWriteParam: int getTileGridYOffset()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>
<java.awt.FontMetrics: java.awt.font.LineMetrics getLineMetrics(java.text.CharacterIterator,int,int,java.awt.Graphics)>
<android.text.style.StyleSpan: int getSpanTypeId()>
<javax.imageio.IIOImage: javax.imageio.metadata.IIOMetadata getMetadata()>
<java.awt.geom.Line2D: double ptSegDistSq(double,double)>
<android.text.Layout: float getLineMax(int)>
<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>
<com.google.android.mms.pdu.SendReq: void setExpiry(long)>
<android.view.View: boolean isPaddingOffsetRequired()>
<javax.microedition.khronos.opengles.GL10: void glClearStencil(int)>
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>
<com.android.tools.layoutlib.create.MethodAdapter: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<org.apache.harmony.awt.gl.font.CompositeFont: int charWidth(int)>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(boolean)>
<java.awt.Component: void removeFocusListener(java.awt.event.FocusListener)>
<java.awt.Component: void setPreferredSize(java.awt.Dimension)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<java.awt.Adjustable: int getBlockIncrement()>
<java.awt.image.renderable.RenderableImageProducer: void removeConsumer(java.awt.image.ImageConsumer)>
<android.view.MotionEvent: float getY(int)>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>
<java.awt.RenderingHints.Key: int intKey()>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>
<android.app.Dialog: void onAttachedToWindow()>
<android.view.SurfaceView: void setVisibility(int)>
<java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>
<android.app.Instrumentation: void setInTouchMode(boolean)>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>
<android.gesture.GestureLibrary: boolean load()>
<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: int appendData(java.io.InputStream,int)>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>
<java.awt.image.WritableRaster: void setSamples(int,int,int,int,int,int[])>
<com.google.android.mms.pdu.GenericPdu: void setMessageType(int)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.Ringtone: int getStreamType()>
<android.database.sqlite.SQLiteQuery: void bindDouble(int,double)>
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera.ErrorCallback)>
<android.app.ApplicationErrorReport: int describeContents()>
<android.opengl.GLES20: void glGenerateMipmap(int)>
<android.pim.vcard.exception.VCardVersionException: void <init>()>
<android.graphics.Canvas: void rotate(float,float,float)>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<android.widget.TabWidget: int getTabCount()>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>
<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>
<android.graphics.Paint: void setSubpixelText(boolean)>
<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>
<android.os.Parcel: float readFloat()>
<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport.CrashInfo)>
<java.awt.Color: void <init>(int)>
<android.widget.ScrollView: void fling(int)>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>
<android.graphics.Rect: java.lang.String toString()>
<com.android.server.status.StatusBarPolicy: void installIcons(android.content.Context,com.android.server.status.StatusBarService)>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>
<android.app.ActivityManager: boolean isUserAMonkey()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getLayoutFlags()>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.google.android.mms.pdu.NotificationInd: byte[] getMessageClass()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.os.Parcel: byte[] marshall()>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>
<java.awt.image.DataBufferShort: int getElem(int,int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributeNamespace(int)>
<org.apache.harmony.awt.gl.image.OffscreenImage: org.apache.harmony.awt.gl.ImageSurface getImageSurface()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>
<org.apache.harmony.x.imageio.spi.RAFIOSSpi: void <init>()>
<java.awt.Polygon: boolean contains(java.awt.Point)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: char[] getGlyphs()>
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>
<com.android.server.am.ActivityManagerService: void requestPss(java.lang.Runnable)>
<android.view.Window: void setTitle(java.lang.CharSequence)>
<javax.imageio.spi.ImageOutputStreamSpi: void <init>()>
<android.widget.ZoomButton: void setZoomSpeed(long)>
<android.widget.TextView: boolean performLongClick()>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>
<android.content.Context: android.content.res.Resources getResources()>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>
<android.content.pm.PackageParser.Package: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glRotatex(int,int,int,int)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void <init>()>
<android.view.View: int getRightPaddingOffset()>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getRssUrl(java.lang.String)>
<java.awt.geom.Line2D.Double: double getX1()>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>
<java.awt.image.VolatileImage: int getWidth()>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.String createLogicalFace(java.lang.String,int)>
<android.graphics.PointF: float length(float,float)>
<java.awt.geom.AffineTransform: void scale(double,double)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
<android.net.Downloads.ByUri: android.database.Cursor getProgressCursor(android.content.Context,long)>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.os.BatteryStats.Counter: int getCountLocked(int)>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
<java.awt.geom.Line2D: boolean contains(double,double)>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>
<java.awt.image.LookupOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<javax.imageio.stream.ImageInputStreamImpl: void checkClosed()>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
<android.view.animation.Animation: void setRepeatCount(int)>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.graphics.GradientShader.GradientPaint: int getTransparency()>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>
<android.graphics.Paint: void setLinearText(boolean)>
<android.widget.ViewAnimator: int getBaseline()>
<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.speech.RecognitionService.Callback: void partialResults(android.os.Bundle)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext,float,float)>
<android.content.IntentFilter: boolean matchAction(java.lang.String)>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void putData(byte[],int,int,long)>
<android.opengl.GLES10: void glClear(int)>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void <init>(java.awt.image.BufferedImage,java.util.Hashtable)>
<android.text.format.Time: void set(long)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>
<android.provider.Calendar.Calendars: int delete(android.content.ContentResolver,java.lang.String,java.lang.String[])>
<android.widget.ExpandableListView: void <init>(android.content.Context)>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<java.awt.image.ComponentSampleModel: void setPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>
<android.widget.AdapterView: android.view.View getSelectedView()>
<java.awt.image.renderable.ParameterBlock: double getDoubleParameter(int)>
<android.widget.FrameLayout: void onMeasure(int,int)>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(int[],int)>
<android.telephony.SmsMessage: boolean isMWISetMessage()>
<java.awt.image.IndexColorModel: int getTransparentPixel()>
<android.graphics.RectF: boolean contains(float,float)>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>
<java.awt.image.SinglePixelPackedSampleModel: int hashCode()>
<javax.imageio.ImageReadParam: void setDestinationType(javax.imageio.ImageTypeSpecifier)>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getLogicalHeight()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,java.nio.IntBuffer)>
<javax.imageio.spi.IIOServiceProvider: java.lang.String getDescription(java.util.Locale)>
<com.android.server.PackageManagerBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>
<android.widget.TextView: void setText(char[],int,int)>
<android.pim.vcard.VCardEntry.PhotoData: boolean equals(java.lang.Object)>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<java.awt.image.SampleModel: int getHeight()>
<com.google.android.gles_jni.GLImpl: void glCurrentPaletteMatrixOES(int)>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>
<android.webkit.WebView: void setInitialScale(int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>
<javax.imageio.plugins.jpeg.JPEGHuffmanTable: java.lang.String toString()>
<android.widget.TabWidget: void setLeftStripDrawable(int)>
<com.android.layoutlib.bridge.BridgeContext: android.graphics.drawable.Drawable getWallpaper()>
<android.graphics.Path: void lineTo(float,float)>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>
<com.android.layoutlib.bridge.BridgeContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: java.awt.image.WritableRaster getWritableParent()>
<java.awt.geom.AffineTransform: void setToScale(double,double)>
<java.awt.geom.Line2D: double ptLineDist(double,double,double,double,double,double)>
<android.view.KeyEvent: int getMetaState()>
<android.database.ContentObservable: void dispatchChange(boolean)>
<java.awt.Rectangle: void <init>(int,int)>
<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>
<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>
<java.awt.image.Kernel: int getWidth()>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getTextContent()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.os.Debug: int getThreadAllocSize()>
<javax.imageio.ImageIO: java.util.Iterator getImageTranscoders(javax.imageio.ImageReader,javax.imageio.ImageWriter)>
<android.database.Cursor: boolean isAfterLast()>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.content.pm.ProviderInfo: void <init>()>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.harmony.awt.gl.MultiRectArea: void add(java.awt.Rectangle)>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: java.lang.String getDescription(java.util.Locale)>
<android.os.CountDownTimer: void <init>(long,long)>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
<android.view.Surface.OutOfResourcesException: void <init>()>
<com.android.server.status.DateView: int getSuggestedMinimumWidth()>
<javax.imageio.spi.ServiceRegistry: boolean unsetOrdering(java.lang.Class,java.lang.Object,java.lang.Object)>
<android.widget.ListView: void setItemChecked(int,boolean)>
<java.awt.HeadlessToolkit: java.awt.image.ColorModel getColorModel()>
<android.provider.Settings.Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<android.text.style.SubscriptSpan: int describeContents()>
<android.app.TabActivity: void setDefaultTab(int)>
<android.text.HtmlToSpannedConverter: void endPrefixMapping(java.lang.String)>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>
<android.webkit.WebSettings: void setSaveFormData(boolean)>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,int)>
<android.widget.Toast: int getGravity()>
<android.content.IntentFilter: java.lang.String getAction(int)>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>
<android.content.IntentFilter: boolean hasAction(java.lang.String)>
<org.apache.harmony.awt.gl.MultiRectArea: void addRect(int,int,int,int)>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.app.ActivityThread.PackageInfo: java.io.File getDataDirFile()>
<java.awt.image.RGBImageFilter: void filterRGBPixels(int,int,int,int,int[],int,int)>
<com.android.server.NetStatService: long getTotalTxBytes()>
<java.awt.EventQueue: long getMostRecentEventTime()>
<java.awt.image.ComponentSampleModel: int[] getSampleSize()>
<android.widget.TextSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<android.preference.VolumePreference.SeekBarVolumizer: void onStopTrackingTouch(android.widget.SeekBar)>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>
<java.awt.Graphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
<javax.imageio.plugins.bmp.BMPImageWriteParam: void <init>(java.util.Locale)>
<java.awt.geom.QuadCurve2D: double getFlatnessSq(double[],int)>
<android.pim.vcard.VCardComposer.HandlerForOutputStream: void onTerminate()>
<android.webkit.Plugin: java.lang.String toString()>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>
<java.awt.image.DataBufferDouble: double[] getData(int)>
<android.os.Bundle: void putLongArray(java.lang.String,long[])>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>
<android.graphics.Canvas: int getSaveCount()>
<java.awt.image.MemoryImageSource: void removeConsumer(java.awt.image.ImageConsumer)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.media.MediaPlayer: void reset()>
<android.text.BoringLayout: int getEllipsisCount(int)>
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport.CrashInfo)>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>
<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>
<java.awt.geom.CubicCurve2D.Float: double getCtrlY2()>
<android.widget.ScrollView: void addView(android.view.View,int)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isHtml()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addElement(java.lang.String,java.lang.String,int)>
<java.awt.image.renderable.RenderableImageOp: java.awt.image.RenderedImage createScaledRendering(int,int,java.awt.RenderingHints)>
<android.hardware.GeomagneticField: void <init>(float,float,float,long)>
<android.pim.vcard.VCardEntry.PostalData: void <init>(int,java.util.List,java.lang.String,boolean)>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: org.apache.harmony.awt.gl.font.FontPeerImpl getFontPeer()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isEnabled()>
<android.content.pm.PackageInfo: java.lang.String toString()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.util.List getInfo()>
<android.view.View: void invalidate()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor clear()>
<java.awt.geom.Arc2D.Float: void setAngleStart(double)>
<android.media.MediaRecorder: void start()>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>
<org.apache.harmony.awt.gl.CommonGraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames(java.util.Locale)>
<javax.microedition.khronos.opengles.GL10: void glDisable(int)>
<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>
<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>
<android.os.Messenger: boolean equals(java.lang.Object)>
<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>
<java.awt.font.FontRenderContext: void <init>()>
<android.util.TypedValue: java.lang.CharSequence coerceToString()>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>
<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<com.google.android.mms.pdu.EncodedStringValue: void appendTextString(byte[])>
<android.content.Entity.NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.content.pm.PackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<java.awt.image.ColorModel: int[] getUnnormalizedComponents(float[],int,int[],int)>
<android.pim.vcard.VCardParser_V30: java.lang.String maybeUnescapeText(java.lang.String)>
<android.hardware.Camera.Parameters: int getPreviewFormat()>
<com.android.providers.settings.SettingsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>
<android.graphics.Region: int describeContents()>
<com.google.android.util.AbstractMessageParser.Photo: com.google.android.util.AbstractMessageParser.Photo matchURL(java.lang.String,java.lang.String)>
<java.awt.image.DataBufferUShort: void <init>(short[],int)>
<java.awt.HeadlessToolkit: boolean isDynamicLayoutActive()>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void <init>()>
<android.graphics.Camera: void restore()>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>
<android.os.Debug: int getBinderDeathObjectCount()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: byte getLevel(int)>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.view.Surface: void setOrientation(int,int)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: com.google.android.util.AbstractMessageParser.YouTubeVideo matchURL(java.lang.String,java.lang.String)>
<com.google.android.mms.MmsException: void <init>(java.lang.Throwable)>
<android.content.ActivityNotFoundException: void <init>(java.lang.String)>
<android.graphics.Color: int blue(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<org.apache.harmony.awt.gl.font.Glyph: int getHeight()>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>
<javax.imageio.IIOParam: boolean hasController()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getIdAttribute()>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.server.BluetoothService: boolean setTrust(java.lang.String,boolean)>
<android.pim.vcard.VCardEntry: void consolidateFields()>
<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getGlyphCharIndex(int)>
<android.graphics.Paint: float measureText(java.lang.String)>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDataNode()>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.pim.vcard.VCardParser_V21: boolean parse(java.io.InputStream,android.pim.vcard.VCardInterpreter)>
<android.preference.ListPreference: void onDialogClosed(boolean)>
<javax.imageio.stream.ImageInputStreamImpl: float readFloat()>
<android.text.style.AlignmentSpan.Standard: int describeContents()>
<javax.imageio.ImageReader: void processPassComplete(java.awt.image.BufferedImage)>
<android.content.Context: java.io.File getCacheDir()>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: void <init>(java.awt.image.BufferedImage)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>
<javax.imageio.stream.ImageInputStreamImpl: int readUnsignedByte()>
<java.awt.image.ShortLookupTable: short[][] getTable()>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<org.apache.harmony.awt.ClipRegion: void convertRegion(java.awt.Component,java.awt.Component)>
<org.apache.harmony.awt.state.MenuItemState: java.lang.String getText()>
<android.pim.EventRecurrence: int timeDay2Day(int)>
<android.app.ProgressDialog: int getSecondaryProgress()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)>
<java.awt.Component: void disable()>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: android.renderscript.SimpleMesh create()>
<javax.imageio.spi.ImageTranscoderSpi: javax.imageio.ImageTranscoder createTranscoderInstance()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.renderscript.Program.BaseProgramBuilder: void initProgram(android.renderscript.Program)>
<android.content.ContentProvider: void onLowMemory()>
<com.android.server.ProcessStats: long[] getLastCpuSpeedTimes()>
<javax.imageio.event.IIOReadProgressListener: void thumbnailProgress(javax.imageio.ImageReader,float)>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void addVertex(float,float)>
<java.awt.color.ICC_Profile: int getProfileClass()>
<android.os.Process: int getGidForName(java.lang.String)>
<android.database.BulkCursorProxy: int count()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>
<android.text.style.UnderlineSpan: int getSpanTypeId()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>
<android.inputmethodservice.InputMethodService: void onDestroy()>
<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>
<android.widget.DialerFilter: java.lang.CharSequence getLetters()>
<android.widget.TextView: java.lang.CharSequence getError()>
<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
<android.widget.ToggleButton: void drawableStateChanged()>
<java.awt.image.RGBImageFilter: void setColorModel(java.awt.image.ColorModel)>
<android.app.Activity: void setProgressBarVisibility(boolean)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
<android.pim.vcard.VCardEntryCounter: void propertyGroup(java.lang.String)>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.inputmethodservice.Keyboard: void setKeyHeight(int)>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<java.awt.Color: int getRGB()>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>
<javax.imageio.metadata.IIOMetadata: void setController(javax.imageio.metadata.IIOMetadataController)>
<android.widget.TextView: boolean didTouchFocusSelect()>
<android.graphics.Canvas: void <init>(javax.microedition.khronos.opengles.GL)>
<android.widget.TabHost: void onDetachedFromWindow()>
<java.awt.Graphics: void fillRect(int,int,int,int)>
<android.view.View: void setMinimumHeight(int)>
<com.android.providers.settings.SettingsProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.android.layoutlib.bridge.Bridge: java.lang.Integer getResourceValue(java.lang.String,java.lang.String)>
<android.content.pm.PackageManager: java.util.List getAllPermissionGroups(int)>
<android.webkit.PluginData: void <init>(java.io.InputStream,long,java.util.Map,int)>
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>
<android.graphics.Paint: float getTextSize()>
<android.content.Intent.ShortcutIconResource: android.content.Intent.ShortcutIconResource fromContext(android.content.Context,int)>
<android.view.ContextThemeWrapper: void <init>()>
<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.os.Debug: void resetGlobalFreedCount()>
<com.google.android.mms.pdu.PduParser: boolean checkMandatoryHeader(com.google.android.mms.pdu.PduHeaders)>
<android.database.sqlite.SQLiteFullException: void <init>()>
<android.graphics.drawable.PictureDrawable: int getOpacity()>
<android.util.FloatMath: float cos(float)>
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>
<java.awt.geom.RoundRectangle2D.Float: void <init>(float,float,float,float,float,float)>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.pim.vcard.VCardComposer: void <init>(android.content.Context,java.lang.String,boolean)>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>
<java.awt.image.PixelGrabber: int getStatus()>
<java.awt.Graphics: void drawPolyline(int[],int[],int)>
<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>
<android.view.ViewGroup: android.view.View findFocus()>
<java.awt.MenuComponent: java.lang.Object getTreeLock()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendOrganizations(java.util.List)>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>
<java.awt.image.IndexColorModel: boolean isValid()>
<org.apache.harmony.awt.wtk.NativeEvent: int getInputModifiers()>
<android.media.JetPlayer: boolean play()>
<java.awt.geom.CubicCurve2D: void setCurve(java.awt.geom.CubicCurve2D)>
<com.android.common.ArrayListCursor: void fillWindow(int,android.database.CursorWindow)>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>
<com.android.server.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts()>
<java.awt.geom.Rectangle2D: int hashCode()>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getOrCreateChild(char)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.gesture.GestureStore: void save(java.io.OutputStream)>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getObjectArrayMaxLength(java.lang.String)>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>
<android.util.LogPrinter: void println(java.lang.String)>
<javax.imageio.spi.ImageInputStreamSpi: javax.imageio.stream.ImageInputStream createInputStreamInstance(java.lang.Object,boolean,java.io.File)>
<android.view.View: boolean isLayoutRequested()>
<android.widget.TextView: void setInputExtras(int)>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>
<javax.imageio.plugins.jpeg.JPEGQTable: javax.imageio.plugins.jpeg.JPEGQTable getScaledInstance(float,boolean)>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>
<java.awt.image.renderable.ParameterBlock: float getFloatParameter(int)>
<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSubscriptOffsetX()>
<java.awt.Polygon: java.awt.Rectangle getBoundingBox()>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onRelease(int)>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,int[],int)>
<android.graphics.PointF: void <init>(float,float)>
<java.awt.Font: boolean isItalic()>
<android.pim.vcard.VCardEntry: java.util.List getPostalList()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitLdcInsn(java.lang.Object)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>
<android.widget.TextView: void clearComposingText()>
<android.view.BridgeInflater: void <init>(android.content.Context,com.android.layoutlib.api.IProjectCallback)>
<android.app.IActivityManager.ContentProviderHolder: int describeContents()>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<android.provider.Contacts.ContactMethods: java.lang.String encodeCustomImProtocol(java.lang.String)>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>
<org.apache.harmony.awt.wtk.NativeEventQueue: void addEvent(org.apache.harmony.awt.wtk.NativeEvent)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.util.List,boolean,boolean)>
<android.content.Context: int checkPermission(java.lang.String,int,int)>
<android.widget.AlphabetIndexer: int getSectionForPosition(int)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>
<android.os.FileObserver: void stopWatching()>
<android.widget.ListView: void clearChoices()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setTransform(java.awt.geom.AffineTransform)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitClassType(java.lang.String)>
<java.awt.GraphicsEnvironment: boolean isHeadlessInstance()>
<java.awt.image.renderable.RenderableImage: float getMinX()>
<com.google.android.mms.pdu.PduComposer: void appendTextString(byte[])>
<android.preference.VolumePreference.SeekBarVolumizer: void stopSample()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<android.database.CursorWindow: int getNumRows()>
<javax.imageio.ImageReader: void processImageProgress(float)>
<android.widget.CursorTreeAdapter: boolean hasStableIds()>
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
<android.webkit.Plugin: java.lang.String getFileName()>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>
<android.speech.srec.Recognizer: void stop()>
<android.text.format.Time: void <init>(java.lang.String)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getValue()>
<java.awt.geom.Arc2D: void setAngles(double,double,double,double)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>
<android.widget.AbsListView.LayoutParams: void <init>(int,int,int)>
<java.awt.image.IndexColorModel: int getMapSize()>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>
<android.pim.vcard.VCardEntryCounter: void propertyName(java.lang.String)>
<android.app.SearchableInfo: boolean autoUrlDetect()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int next()>
<com.android.server.status.NotificationData: java.lang.String toString()>
<android.telephony.gsm.SmsMessage: byte[] getUserData()>
<android.bluetooth.BluetoothClass: int describeContents()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<java.awt.Toolkit: void setDesktopProperty(java.lang.String,java.lang.Object)>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>
<com.google.android.mms.pdu.PduComposer: void <init>(android.content.Context,com.google.android.mms.pdu.GenericPdu)>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<com.google.android.gles_jni.EGLImpl: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<android.media.Ringtone: void play()>
<java.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int,int)>
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.awt.Component: boolean isLightweight()>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<java.awt.image.CropImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>
<android.graphics.Paint: void <init>()>
<android.app.Activity: int getTitleColor()>
<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>
<android.os.Parcel: float[] createFloatArray()>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.content.pm.PackageParser.Permission: java.lang.String toString()>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>
<android.app.Instrumentation: android.content.Context getContext()>
<android.app.ApplicationErrorReport.CrashInfo: void <init>()>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.graphics.Canvas: void rotate(float,float,float)>
<android.server.BluetoothService: boolean setPairingConfirmation(java.lang.String,boolean)>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>
<javax.imageio.ImageReader: java.util.Iterator getImageTypes(int)>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.util.AttributeSet: java.lang.String getAttributeName(int)>
<android.pim.vcard.VCardEntryConstructor: void end()>
<android.util.StateSet: int[] trimStateSet(int[],int)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.android.server.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName)>
<java.awt.image.DataBuffer: float getElemFloat(int)>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>
<java.awt.event.KeyListener: void keyPressed(java.awt.event.KeyEvent)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: void initLCIDTable()>
<java.awt.Rectangle: void add(int,int)>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void <init>(java.awt.image.BufferedImage)>
<java.awt.geom.CubicCurve2D: java.awt.geom.Point2D getCtrlP2()>
<android.graphics.Matrix: void getValues(float[])>
<android.provider.Settings.System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.database.Cursor: void deactivate()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.widget.ListView: void setChoiceMode(int)>
<android.database.CursorWindow: double getDouble(int,int)>
<org.apache.harmony.awt.gl.color.ColorScaler: void unscale(float[],short[],int)>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
<android.view.accessibility.AccessibilityEvent: boolean isPassword()>
<android.speech.srec.Recognizer.Grammar: void resetAllSlots()>
<android.widget.TextView: void setFreezesText(boolean)>
<java.awt.Color: void <init>(int,int,int,int)>
<com.android.tools.layoutlib.create.AsmGenerator: java.util.Map getDeps()>
<com.android.server.status.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.ClipboardManager: java.lang.CharSequence getText()>
<android.view.Surface: void setSize(int,int)>
<java.awt.image.BufferedImage: java.awt.image.Raster getData(java.awt.Rectangle)>
<android.app.ActivityManager.MemoryInfo: int describeContents()>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>
<android.graphics.Point: void set(int,int)>
<android.server.BluetoothA2dpService: boolean connectSink(android.bluetooth.BluetoothDevice)>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>
<java.awt.geom.Area: void <init>(java.awt.Shape)>
<android.text.Layout: android.text.Layout.Alignment getParagraphAlignment(int)>
<android.os.UEventObserver.UEvent: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.render.Blitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.view.View: boolean hasFocusable()>
<android.content.ComponentName: java.lang.String getShortClassName()>
<java.awt.im.InputMethodHighlight: int getState()>
<android.graphics.Bitmap: int describeContents()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawString(java.lang.String,int,int)>
<android.pim.vcard.VCardEntry.ImData: java.lang.String toString()>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStroke(int,int,boolean)>
<android.widget.Chronometer: void stop()>
<android.widget.Adapter: int getItemViewType(int)>
<android.content.pm.ResolveInfo: int getIconResource()>
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>
<java.awt.image.WritableRaster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>
<android.text.method.LinkMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardTextNode()>
<org.apache.harmony.awt.gl.ImageSurface: long getSurfaceDataPtr()>
<android.view.ViewConfiguration: int getPressedStateDuration()>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<java.awt.event.HierarchyBoundsListener: void ancestorResized(java.awt.event.HierarchyEvent)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>
<android.opengl.GLES20: void glClear(int)>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.widget.SlidingDrawer: boolean isMoving()>
<android.graphics.Region: void translate(int,int)>
<android.view.accessibility.AccessibilityEvent: void recycle()>
<android.opengl.GLES20: int glCreateProgram()>
<android.view.View: void setNextFocusLeftId(int)>
<android.location.Location: java.lang.String toString()>
<javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>
<android.os.Looper: android.os.Looper getMainLooper()>
<javax.microedition.khronos.opengles.GL10: void glDepthRangef(float,float)>
<java.awt.im.InputMethodHighlight: java.util.Map getStyle()>
<org.apache.harmony.awt.gl.color.ColorConverter: short[] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,short[],short[])>
<org.apache.harmony.awt.ListenerList: java.util.List getSystemListeners()>
<android.provider.ContactsContract.Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(java.lang.String,java.awt.font.FontRenderContext,java.awt.Font,int)>
<android.graphics.PointF: void negate()>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>
<com.android.server.status.UsbStorageActivity: void onResume()>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentLocation(java.lang.String)>
<org.apache.harmony.awt.gl.image.DataBufferListener: void dataReleased()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: int getNumImages(boolean)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>
<java.awt.font.TextLayout: byte getCharacterLevel(int)>
<java.awt.image.ComponentSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.awt.image.RescaleOp: void <init>(float,float,java.awt.RenderingHints)>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
<android.speech.srec.Recognizer: java.lang.String[] getResultKeys(int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeni(int,int,int)>
<com.google.android.mms.pdu.PduComposer: byte[] make()>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>
<com.android.layoutlib.bridge.BridgeContext: com.android.layoutlib.api.IResourceValue getFrameworkResource(java.lang.String,java.lang.String)>
<android.graphics.Color: int HSVToColor(float[])>
<javax.imageio.stream.ImageOutputStreamImpl: void writeBoolean(boolean)>
<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: void glFogx(int,int)>
<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String)>
<com.android.server.LightsService.Light: void setBrightness(int)>
<android.widget.HeaderViewListAdapter: boolean isEmpty()>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>
<java.awt.BasicStroke: void <init>(float)>
<javax.imageio.metadata.IIOMetadataFormat: boolean isAttributeRequired(java.lang.String,java.lang.String)>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<java.awt.geom.CubicCurve2D.Float: double getY2()>
<android.content.pm.PackageManager: java.util.List getPreferredPackages(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitIincInsn(int,int)>
<android.database.sqlite.SQLiteProgram: void native_bind_null(int)>
<android.app.Activity: int getWallpaperDesiredMinimumHeight()>
<android.server.BluetoothService.BondState: boolean isAutoPairingBlacklisted(java.lang.String)>
<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>
<javax.imageio.ImageReader: java.awt.image.BufferedImage readTile(int,int,int)>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>
<com.android.layoutlib.bridge.ResourceHelper: boolean stringToFloat(java.lang.String,android.util.TypedValue)>
<java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
<android.preference.Preference: int getOrder()>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.imageio.stream.FileCacheImageOutputStream: boolean isCached()>
<java.awt.geom.Arc2D.Float: double getAngleStart()>
<android.graphics.Rect: java.lang.String toShortString()>
<com.google.android.mms.util.PduCacheEntry: void <init>(com.google.android.mms.pdu.GenericPdu,int,long)>
<android.widget.SimpleAdapter: android.widget.Filter getFilter()>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>
<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.pim.vcard.VCardComposer: void addHandler(android.pim.vcard.VCardComposer.OneEntryHandler)>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<android.widget.TableLayout: void setStretchAllColumns(boolean)>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>
<android.widget.TextView: void setHint(java.lang.CharSequence)>
<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener)>
<java.awt.RenderingHints: boolean containsKey(java.lang.Object)>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>
<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>
<java.beans.PropertyEditorSupport: void firePropertyChange()>
<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<java.awt.Rectangle: void setLocation(java.awt.Point)>
<java.awt.Component: void setVisible(boolean)>
<java.awt.color.ColorSpace: boolean isCS_sRGB()>
<android.graphics.Matrix: boolean postSkew(float,float)>
<android.graphics.Bitmap: void setPixel(int,int,int)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,int,java.lang.String[],int[])>
<javax.microedition.khronos.opengles.GL10: void glViewport(int,int,int,int)>
<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.accounts.Account: boolean equals(java.lang.Object)>
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>
<com.android.layoutlib.bridge.BridgeTypedArray: void <init>(com.android.layoutlib.bridge.BridgeResources,com.android.layoutlib.bridge.BridgeContext,int,boolean)>
<java.awt.geom.FlatteningPathIterator: boolean isDone()>
<java.awt.Toolkit: void setDynamicLayout(boolean)>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>
<javax.imageio.stream.ImageOutputStream: void writeDoubles(double[],int,int)>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,int[],int)>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
<java.awt.image.DirectColorModel: int getAlpha(int)>
<com.google.android.util.AbstractMessageParser.Token: void <init>(com.google.android.util.AbstractMessageParser.Token.Type,java.lang.String)>
<java.awt.image.AffineTransformOp: void <init>(java.awt.geom.AffineTransform,java.awt.RenderingHints)>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>
<com.google.android.gles_jni.GLImpl: int glCheckFramebufferStatusOES(int)>
<com.android.server.connectivity.Tethering: void interfaceLinkStatusChanged(java.lang.String,boolean)>
<java.awt.geom.Arc2D.Float: double getWidth()>
<android.media.MediaRecorder: void prepare()>
<com.android.layoutlib.bridge.NinePatchDrawable: int getOpacity()>
<android.view.View.AttachInfo.Callbacks: void playSoundEffect(int)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>
<android.widget.TextView: void setTextColor(int)>
<java.awt.geom.Rectangle2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<com.android.server.LightsService.Light: void turnOff()>
<android.content.AsyncQueryHandler: void onInsertComplete(int,java.lang.Object,android.net.Uri)>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>
<java.awt.Component: java.awt.Color getForeground()>
<com.android.layoutlib.bridge.BridgeContext: java.io.FileInputStream openFileInput(java.lang.String)>
<android.widget.CompoundButton: void drawableStateChanged()>
<org.apache.harmony.awt.gl.render.NullBlitter: org.apache.harmony.awt.gl.render.Blitter getInstance()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: char getChar(int)>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>
<java.awt.image.BufferedImage: int getMinY()>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>
<android.pim.vcard.VCardComposer.OneEntryHandler: void onTerminate()>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>
<android.preference.Preference: void setDependency(java.lang.String)>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>
<org.apache.harmony.awt.wtk.NativeIM: void dispose()>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>(boolean)>
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getDescent()>
<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>
<javax.imageio.stream.FileCacheImageOutputStream: void close()>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>
<android.os.Handler: void <init>(android.os.Looper)>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
<com.google.android.mms.util.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.net.Downloads.ById: java.lang.String getMimeTypeForId(android.content.Context,long)>
<org.apache.harmony.awt.gl.color.NativeCMM: long getHandle(java.awt.color.ICC_Profile)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendNotes(java.util.List)>
<javax.imageio.spi.ImageWriterSpi: boolean canEncodeImage(java.awt.image.RenderedImage)>
<android.widget.Toast: void setMargin(float,float)>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.google.android.gles_jni.GLImpl: boolean glIsRenderbufferOES(int)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>
<android.os.AsyncTask: void onPostExecute(java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvx(int,int,int)>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.String getFamily(int)>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<android.location.Address: void setPostalCode(java.lang.String)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>
<android.graphics.Paint: boolean isFilterBitmap()>
<android.app.ExpandableListActivity: void onContentChanged()>
<android.graphics.Bitmap: boolean isRecycled()>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void translate(int,int)>
<android.widget.EditText: void selectAll()>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.app.Notification: java.lang.String toString()>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<javax.imageio.stream.ImageInputStream: void mark()>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.widget.TextView: int getInputType()>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>
<org.apache.harmony.awt.gl.color.ColorScaler: short[] scale(java.awt.image.Raster)>
<android.opengl.GLES20: void glDepthRangef(float,float)>
<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<com.android.server.am.BatteryStatsService: void notePhoneState(int)>
<com.google.android.util.AbstractMessageParser.Part: void setMeText(java.lang.String)>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>
<com.android.server.NativeDaemonConnectorException: void <init>()>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo getOffsetHit(int)>
<javax.imageio.ImageWriter: void endInsertEmpty()>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>
<android.telephony.SmsMessage: boolean isEmail()>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>
<java.awt.image.ComponentSampleModel: int[] getPixel(int,int,int[],java.awt.image.DataBuffer)>
<java.awt.image.BandedSampleModel: void setSample(int,int,int,float,java.awt.image.DataBuffer)>
<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>
<java.awt.geom.CubicCurve2D.Float: double getCtrlY1()>
<java.awt.font.GlyphJustificationInfo: void <init>(float,boolean,int,float,float,boolean,int,float,float)>
<android.content.IntentFilter: void setPriority(int)>
<com.android.tools.layoutlib.create.MethodListener: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>
<com.android.layoutlib.bridge.BridgeContext: int checkCallingUriPermission(android.net.Uri,int)>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>
<com.google.android.gles_jni.GLImpl: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<android.location.Address: java.util.Locale getLocale()>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.LoadAverageService: void onDestroy()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glEnable(int)>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>
<android.app.UiModeManager: void enableCarMode(int)>
<android.widget.TableLayout: void addView(android.view.View,int)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>
<android.pim.vcard.VCardEntry.PostalData: java.lang.String toString()>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.content.ContentProvider: void setReadPermission(java.lang.String)>
<android.opengl.GLES20: void glViewport(int,int,int,int)>
<java.awt.event.ItemEvent: int getStateChange()>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>
<com.android.layoutlib.bridge.BridgeTypedArray: android.util.TypedValue peekValue(int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getOutline()>
<android.location.Location: void setExtras(android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,int[],int)>
<android.database.MatrixCursor: long getLong(int)>
<javax.imageio.spi.IIOServiceProvider: void <init>(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>
<java.awt.Dimension: void <init>(java.awt.Dimension)>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>
<android.text.style.TypefaceSpan: int describeContents()>
<android.pim.vcard.VCardParser_V21: void handleValue(java.lang.String)>
<android.widget.TimePicker: android.os.Parcelable onSaveInstanceState()>
<android.graphics.drawable.PaintDrawable: void <init>(int)>
<android.graphics.RectF: void union(android.graphics.RectF)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.app.Dialog: int getVolumeControlStream()>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int,float)>
<android.content.pm.PackageManager: void removePermission(java.lang.String)>
<android.media.RingtoneManager: android.database.Cursor getCursor()>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.app.Service: void <init>()>
<android.preference.VolumePreference.SeekBarVolumizer: android.widget.SeekBar getSeekBar()>
<java.awt.font.TextMeasurer: int getLineBreakIndex(int,float)>
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>
<android.text.BoringLayout.Metrics: java.lang.String toString()>
<android.pim.vcard.VCardConfig: boolean isV30(int)>
<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,int,int,java.awt.font.FontRenderContext)>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>
<android.util.SparseArray: void put(int,java.lang.Object)>
<java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
<javax.microedition.khronos.opengles.GL10: void glClear(int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(int[],int)>
<android.widget.BaseAdapter: boolean isEnabled(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillArc(int,int,int,int,int,int)>
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.os.MemoryFile: void finalize()>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>
<com.android.server.am.BatteryStatsService: void noteStopVideo(int)>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,java.nio.IntBuffer)>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>
<android.widget.ProgressBar: boolean isIndeterminate()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.bluetooth.BluetoothAdapter: boolean enable()>
<android.accounts.AccountManagerService.AuthTokenKey: int hashCode()>
<java.awt.event.KeyEvent: void <init>(java.awt.Component,int,long,int,int)>
<android.content.res.TypedArray: java.lang.String toString()>
<android.text.AlteredCharSequence: java.lang.String toString()>
<android.preference.PreferenceGroup: void onAttachedToActivity()>
<java.awt.Toolkit: boolean isFrameStateSupported(int)>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int,java.util.Hashtable)>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView.OnScrollListener)>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>
<android.net.wifi.WifiManager.WifiLock: void release()>
<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<java.awt.image.renderable.RenderableImageProducer: void addConsumer(java.awt.image.ImageConsumer)>
<android.text.HtmlToSpannedConverter: void ignorableWhitespace(char[],int,int)>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<javax.microedition.khronos.egl.EGL10: int eglGetError()>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>
<android.drm.mobile1.DrmRawContent: int getRawType()>
<com.android.server.ProcessStats: void onLoadChanged(float,float,float)>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>
<android.opengl.GLES10: void glDepthMask(boolean)>
<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.net.MailTo: boolean isMailTo(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.preference.RingtonePreference: void setShowDefault(boolean)>
<android.widget.ImageView: android.widget.ImageView.ScaleType getScaleType()>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<org.apache.harmony.awt.wtk.NativeEvent: org.apache.harmony.awt.gl.MultiRectArea getClipRects()>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>
<com.android.server.am.BatteryStatsService: void notePhoneOn()>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.metadata.IIOMetadataNode: void setNodeValue(java.lang.String)>
<java.awt.geom.RoundRectangle2D: double getArcHeight()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font)>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>
<android.view.View: boolean isSoundEffectsEnabled()>
<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>
<android.security.MessageDigest: byte[] digest()>
<android.os.PatternMatcher: void <init>(java.lang.String,int)>
<org.apache.harmony.awt.ReadOnlyIterator: boolean hasNext()>
<com.android.layoutlib.bridge.BridgeResources: java.lang.String getResourceTypeName(int)>
<android.graphics.Matrix: void mapVectors(float[])>
<android.view.MotionEvent: float getSize(int)>
<java.awt.Component: void setBounds(int,int,int,int)>
<android.view.animation.Animation: long getStartTime()>
<com.google.android.gles_jni.GLImpl: void glLightf(int,int,float)>
<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>
<android.app.Activity: void setResult(int)>
<android.opengl.GLES11: boolean glIsBuffer(int)>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int[] getGlyphCharIndices(int,int,int[])>
<android.view.SurfaceView: void onDetachedFromWindow()>
<android.app.backup.BackupDataInput: void skipEntityData()>
<android.view.View: android.os.Handler getHandler()>
<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>
<android.os.StatFs: int getAvailableBlocks()>
<com.android.film.FilmView: void onDetachedFromWindow()>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.awt.geom.Rectangle2D getMaxCharBounds(java.awt.font.FontRenderContext)>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<javax.imageio.spi.ServiceRegistry: java.lang.Object getServiceProviderByClass(java.lang.Class)>
<android.widget.Scroller: void forceFinished(boolean)>
<android.widget.Chronometer: void setBase(long)>
<java.awt.image.PixelGrabber: void imageComplete(int)>
<android.database.AbstractWindowedCursor: boolean hasWindow()>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeByte(int)>
<android.media.AudioRecord: int getNotificationMarkerPosition()>
<android.view.OrientationListener: void onSensorChanged(int,float[])>
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>
<android.view.animation.AnticipateInterpolator: void <init>(float)>
<android.gesture.GestureStroke: java.lang.Object clone()>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>
<android.view.View: boolean onSetAlpha(int)>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>
<android.graphics.Canvas: void restoreToCount(int)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendNickNames(java.util.List)>
<java.awt.image.ConvolveOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<org.apache.harmony.awt.state.MenuItemState: java.lang.String getShortcut()>
<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>
<android.content.pm.RegisteredServicesCache.ServiceInfo: java.lang.String toString()>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<org.apache.harmony.awt.gl.font.Glyph: int getGlyphCode()>
<java.awt.event.InvocationEvent: java.lang.Exception getException()>
<android.graphics.Canvas: int save(int)>
<java.awt.image.IndexColorModel: void getGreens(byte[])>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>
<android.security.Md5MessageDigest: byte[] digest(byte[])>
<android.widget.CheckedTextView: boolean isChecked()>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getRssUrl(java.lang.String)>
<java.awt.font.GlyphVector: java.awt.Shape getGlyphLogicalBounds(int)>
<java.awt.image.renderable.RenderableImageProducer: boolean isConsumer(java.awt.image.ImageConsumer)>
<android.view.View: void onFinishInflate()>
<android.database.MatrixCursor: float getFloat(int)>
<javax.imageio.ImageReader: java.util.Locale getLocale()>
<java.awt.geom.IllegalPathStateException: void <init>(java.lang.String)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>
<java.beans.PropertyEditorSupport: java.lang.String getAsText()>
<android.content.res.AssetFileDescriptor: java.lang.String toString()>
<javax.imageio.ImageReadParam: void setSourceProgressivePasses(int,int)>
<android.pim.vcard.VCardParser: boolean parse(java.io.InputStream,android.pim.vcard.VCardInterpreter)>
<com.android.fountain.FountainView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.webkit.WebView: void computeScroll()>
<android.widget.AlphabetIndexer: void <init>(android.database.Cursor,int,java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL10: void glSampleCoveragex(int,boolean)>
<android.os.Debug: int getGlobalExternalAllocSize()>
<javax.imageio.ImageWriter: void processWriteAborted()>
<android.view.OrientationEventListener: void onOrientationChanged(int)>
<org.apache.harmony.awt.gl.MultiRectArea: java.lang.String toString()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitClassType(java.lang.String)>
<android.database.Cursor: byte[] getBlob(int)>
<android.webkit.WebView: int computeVerticalScrollRange()>
<android.pim.vcard.exception.VCardNestedException: void <init>(java.lang.String)>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void <init>(android.renderscript.RenderScript,int,int)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getLocalName()>
<com.android.server.am.ActivityManagerService: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.os.Parcel: void writeArray(java.lang.Object[])>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,int[],int)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.graphics.drawable.ColorDrawable: int getOpacity()>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.os.Looper: android.os.Looper myLooper()>
<android.widget.ScrollView: void setFillViewport(boolean)>
<java.awt.geom.RoundRectangle2D.Double: double getY()>
<android.os.Parcel: void writeStringList(java.util.List)>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4f(int,float,float,float,float)>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>
<android.net.Uri: java.lang.String getScheme()>
<java.awt.font.TextMeasurer: void deleteChar(java.text.AttributedCharacterIterator,int)>
<android.widget.ProgressBar: void setIndeterminate(boolean)>
<java.awt.image.DataBufferUShort: void <init>(int,int)>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.location.Location: void setTime(long)>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>
<android.database.CursorWindow: short getShort(int,int)>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>
<android.pim.vcard.VCardEntry.EmailData: void <init>(int,java.lang.String,java.lang.String,boolean)>
<android.widget.ToggleButton: void <init>(android.content.Context)>
<android.net.wifi.WifiInfo: int getRssi()>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
<java.awt.event.ItemEvent: java.lang.String paramString()>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>
<android.graphics.drawable.ColorDrawable: int getAlpha()>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<org.apache.harmony.awt.wtk.NativeIM: java.awt.im.spi.InputMethod createInputMethod()>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>
<javax.imageio.spi.ImageInputStreamSpi: java.lang.Class getInputClass()>
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getAttributeMinValue(java.lang.String,java.lang.String)>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>
<android.text.Layout: int getLineEnd(int)>
<java.awt.geom.Area: boolean isEmpty()>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
<java.awt.im.InputMethodRequests: java.text.AttributedCharacterIterator getCommittedText(int,int,java.text.AttributedCharacterIterator.Attribute[])>
<android.app.ActivityManagerProxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getRawText()>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: short[] getDataUShort(java.awt.image.DataBuffer)>
<android.location.LocationProvider: boolean requiresCell()>
<android.graphics.Matrix: java.lang.String toShortString()>
<android.os.Handler: android.os.Message obtainMessage()>
<android.server.BluetoothService: boolean setDiscoverableTimeout(int)>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>
<java.awt.image.ColorConvertOp: void <init>(java.awt.color.ColorSpace,java.awt.RenderingHints)>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveStatus(int)>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
<android.os.Binder: boolean isBinderAlive()>
<android.content.UriMatcher: void <init>(int)>
<java.awt.geom.QuadCurve2D.Float: double getY2()>
<java.awt.geom.Rectangle2D.Double: double getHeight()>
<java.awt.image.BufferedImage: java.lang.Object getProperty(java.lang.String)>
<java.awt.event.KeyEvent: java.lang.String paramString()>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>
<android.location.Criteria: void setPowerRequirement(int)>
<com.google.android.mms.pdu.NotifyRespInd: byte[] getTransactionId()>
<javax.imageio.event.IIOReadProgressListener: void readAborted(javax.imageio.ImageReader)>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>
<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>
<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>
<android.pim.ICalendar.Property: void setValue(java.lang.String)>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.ImageCapabilities: void <init>(boolean)>
<android.os.Looper: void prepare()>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>
<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>
<com.google.android.mms.pdu.PduPart: byte[] getContentType()>
<com.android.commands.svc.DataCommand: void run(java.lang.String[])>
<android.renderscript.ScriptC.Builder: void addDefine(java.lang.String,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<java.awt.font.TextLayout.CaretPolicy: java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo,java.awt.font.TextLayout)>
<android.graphics.Paint: void setFilterBitmap(boolean)>
<android.view.View: void bringToFront()>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore create()>
<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>
<org.apache.harmony.awt.state.State: java.awt.Color getBackground()>
<com.android.server.status.StatusBarService: void disable(int,android.os.IBinder,java.lang.String)>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.hardware.GeomagneticField: float getInclination()>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: int getLeft()>
<android.widget.ExpandableListView.OnGroupCollapseListener: void onGroupCollapse(int)>
<android.widget.CheckBox: void <init>(android.content.Context)>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<android.view.inputmethod.InputBinding: int getUid()>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,int[],int)>
<android.preference.Preference: void setOrder(int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<java.awt.geom.CubicCurve2D: int solveCubic(double[])>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>
<java.awt.font.GraphicAttribute: float getAscent()>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getMaxCharWidth()>
<android.hardware.Camera.Parameters: void setGpsLongitude(double)>
<java.awt.image.DataBufferInt: void <init>(int[],int,int)>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>
<android.webkit.WebView: void clearHistory()>
<android.text.method.MovementMethod: boolean canSelectArbitrarily()>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocation()>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>
<android.hardware.Camera.Parameters: void remove(java.lang.String)>
<java.awt.image.VolatileImage: int getTransparency()>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>
<android.widget.ZoomButton: boolean onLongClick(android.view.View)>
<android.media.ToneGenerator: void stopTone()>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<java.awt.geom.Line2D.Double: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>
<java.awt.Component: void paintAll(java.awt.Graphics)>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4x(int,int,int,int,int)>
<android.text.util.Rfc822Token: void setName(java.lang.String)>
<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager.Entry)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUriForPath(java.lang.String)>
<android.pim.vcard.VCardEntry.EmailData: boolean equals(java.lang.Object)>
<javax.imageio.IIOImage: java.awt.image.RenderedImage getRenderedImage()>
<java.awt.Graphics: void finalize()>
<android.widget.CompoundButton: void toggle()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>
<android.pim.vcard.VCardEntryHandler: void onStart()>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.pim.vcard.exception.VCardNestedException: void <init>()>
<android.view.Window: int getVolumeControlStream()>
<android.view.MotionEvent: int getMetaState()>
<java.awt.geom.RectangularShape: void setFrame(double,double,double,double)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: float getJustification()>
<javax.imageio.stream.ImageInputStreamImpl: java.lang.String readUTF()>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>
<java.awt.geom.Arc2D.Double: double getX()>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
<java.awt.Graphics: void translate(int,int)>
<android.database.AbstractCursor: short getShort(int)>
<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<com.android.server.ProcessMap: void remove(java.lang.String,int)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getText()>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,int[],int)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
<android.widget.AutoCompleteTextView: void clearListSelection()>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>
<com.google.android.mms.pdu.PduPart: void setCharset(int)>
<java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>
<java.awt.geom.RectangularShape: double getWidth()>
<java.awt.image.SinglePixelPackedSampleModel: java.lang.Object getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<java.awt.image.BufferedImageFilter: void setColorModel(java.awt.image.ColorModel)>
<android.provider.Settings.System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<java.awt.image.MemoryImageSource: void newPixels(byte[],java.awt.image.ColorModel,int,int)>
<android.graphics.Canvas: boolean isOpaque()>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<android.app.ApplicationErrorReport.AnrInfo: void <init>(android.os.Parcel)>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>
<android.preference.ListPreference: java.lang.String getValue()>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>
<android.opengl.GLES10: void glClearDepthx(int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.telephony.cdma.CdmaCellLocation: void <init>()>
<android.media.SoundPool: int load(android.content.Context,int,int)>
<android.os.Debug: boolean isDebuggerConnected()>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>
<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>
<android.hardware.Camera.Parameters: java.util.List getSupportedAntibanding()>
<android.provider.Calendar.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<java.awt.image.renderable.ParameterBlock: void removeParameters()>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(long[],int,int)>
<android.location.Location: float getBearing()>
<android.view.OrientationEventListener: void <init>(android.content.Context)>
<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
<java.awt.Component: boolean mouseUp(java.awt.Event,int,int)>
<com.google.android.mms.pdu.PduPart: void setContentId(byte[])>
<android.database.DatabaseUtils.InsertHelper: long execute()>
<javax.microedition.khronos.opengles.GL11Ext: void glEnableClientState(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerType(org.objectweb.asm.Type)>
<java.awt.Component: void setIgnoreRepaint(boolean)>
<android.widget.GridView: void <init>(android.content.Context)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Color getColor()>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>
<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int,int,int)>
<android.graphics.ColorMatrix: float[] getArray()>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>
<java.awt.image.MultiPixelPackedSampleModel: int getOffset(int,int)>
<android.database.sqlite.SQLiteQuery: void bindLong(int,long)>
<java.awt.image.AffineTransformOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<java.awt.Font: java.awt.geom.Rectangle2D getMaxCharBounds(java.awt.font.FontRenderContext)>
<java.awt.event.InputMethodEvent: void <init>(java.awt.Component,int,java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<java.awt.Component: boolean isMaximumSizeSet()>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>
<java.awt.image.ConvolveOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<java.awt.geom.Arc2D.Float: double getHeight()>
<org.apache.harmony.awt.gl.render.JavaTextRenderer: void drawString(java.awt.Graphics2D,java.lang.String,float,float)>
<android.preference.Preference: boolean shouldCommit()>
<android.widget.RelativeLayout.LayoutParams: int[] getRules()>
<android.location.Criteria: boolean isSpeedRequired()>
<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>
<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<java.awt.GraphicsEnvironment: java.awt.Font[] getAllFonts()>
<java.awt.Font: java.lang.String getFontName()>
<java.awt.AWTKeyStroke: boolean isOnKeyRelease()>
<android.widget.AutoCompleteTextView: int getThreshold()>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createFromBufferedImageType(int)>
<android.media.ExifInterface: byte[] getThumbnail()>
<android.text.StaticLayout: boolean getLineContainsTab(int)>
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>
<org.apache.harmony.awt.state.State: java.awt.Font getFont()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getPrefix()>
<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.telephony.gsm.SmsMessage: int getIndexOnSim()>
<java.awt.image.BandedSampleModel: void <init>(int,int,int,int,int[],int[])>
<android.database.CursorJoiner: void remove()>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<java.awt.image.ImageConsumer: void imageComplete(int)>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>
<android.widget.HorizontalScrollView: void computeScroll()>
<org.apache.harmony.awt.gl.color.ColorConverter: void translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,java.awt.image.Raster,java.awt.image.WritableRaster)>
<org.apache.harmony.awt.im.InputMethodContext: boolean selectInputMethod(java.util.Locale)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<android.widget.TableLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.awt.font.TextHitInfo hitTest(float,float)>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>
<android.opengl.GLES10: void glFogx(int,int)>
<com.android.film.FilmView: boolean onTouchEvent(android.view.MotionEvent)>
<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>
<android.webkit.PluginList: void removePlugin(android.webkit.Plugin)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawPolyline(int[],int[],int)>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
<java.awt.geom.FlatteningPathIterator: int getWindingRule()>
<org.apache.harmony.awt.gl.image.ImageLoader: void run()>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>
<java.awt.image.WritableRenderedImage: void setData(java.awt.image.Raster)>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>
<java.awt.image.ColorConvertOp: java.awt.RenderingHints getRenderingHints()>
<android.text.HtmlToSpannedConverter: void skippedEntity(java.lang.String)>
<android.media.AudioManager: boolean isMicrophoneMute()>
<android.location.Location: java.lang.String convert(double,int)>
<java.awt.geom.AffineTransform: void transform(double[],int,float[],int,int)>
<java.awt.geom.CubicCurve2D: void subdivide(double[],int,double[],int,double[],int)>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getDir(java.lang.String,int)>
<java.awt.Toolkit: boolean isDynamicLayoutActive()>
<javax.imageio.plugins.jpeg.JPEGHuffmanTable: void <init>(short[],short[])>
<com.android.layoutlib.bridge.BridgeContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>
<java.awt.Cursor: java.lang.String getName()>
<android.net.TrafficStats: long getUidRxBytes(int)>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>
<java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>
<com.android.commands.ime.Ime: void run(java.lang.String[])>
<org.apache.harmony.awt.gl.font.TextRunBreaker: char getChar(int)>
<java.awt.event.HierarchyBoundsAdapter: void ancestorMoved(java.awt.event.HierarchyEvent)>
<android.media.SoundPool: void setRate(int,float)>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<java.awt.geom.FlatteningPathIterator: int currentSegment(double[])>
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)>
<com.google.android.mms.InvalidHeaderValueException: void <init>(java.lang.String)>
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>
<android.graphics.Matrix: boolean postRotate(float)>
<java.awt.Font: java.lang.String getFontName(java.util.Locale)>
<com.google.android.gles_jni.GLImpl: boolean glIsFramebufferOES(int)>
<javax.imageio.stream.ImageInputStream: int readUnsignedShort()>
<java.awt.font.GraphicAttribute: java.awt.font.GlyphJustificationInfo getJustificationInfo()>
<android.os.Vibrator: void vibrate(long[],int)>
<com.google.android.mms.pdu.RetrieveConf: byte[] getTransactionId()>
<java.awt.geom.QuadCurve2D.Double: void <init>()>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>
<org.apache.harmony.awt.gl.render.NullBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.media.AudioTrack: int reloadStaticData()>
<javax.imageio.stream.ImageInputStream: byte readByte()>
<android.widget.ZoomButton: void <init>(android.content.Context)>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<javax.imageio.spi.ServiceRegistry: void finalize()>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
<com.google.android.mms.pdu.RetrieveConf: void setTransactionId(byte[])>
<android.text.StaticLayout: int getLineForVertical(int)>
<java.awt.Component: int checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<org.apache.harmony.awt.wtk.NativeWindow: void setVisible(boolean)>
<com.google.android.gles_jni.GLImpl: void glPolygonOffsetx(int,int)>
<java.awt.image.ComponentSampleModel: java.awt.image.DataBuffer createDataBuffer()>
<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(java.awt.Rectangle)>
<android.graphics.drawable.StateListDrawable: void <init>()>
<java.awt.image.SampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,int,int,java.awt.Graphics)>
<java.awt.image.ImageProducer: void addConsumer(java.awt.image.ImageConsumer)>
<android.text.method.ScrollingMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>
<java.awt.FontMetrics: java.awt.font.LineMetrics getLineMetrics(java.lang.String,int,int,java.awt.Graphics)>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.Picture: int getHeight()>
<android.server.BluetoothService: boolean cancelDiscovery()>
<android.speech.srec.Recognizer: void finalize()>
<android.database.sqlite.SQLiteCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>
<com.google.android.gles_jni.GLImpl: void glBindRenderbufferOES(int,int)>
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>
<android.os.BatteryStats.Uid.Pkg: int getWakeups(int)>
<android.view.KeyEvent: int getUnicodeChar()>
<android.content.pm.PackageManager: void addPackageToPreferred(java.lang.String)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<org.apache.harmony.awt.state.State: boolean isEnabled()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<com.google.android.util.AbstractMessageParser: java.lang.String reverse(java.lang.String)>
<android.view.Window: void setWindowAnimations(int)>
<android.view.ViewGroup: void removeView(android.view.View)>
<android.app.ListActivity: long getSelectedItemId()>
<java.awt.image.WritableRenderedImage: void releaseWritableTile(int,int)>
<android.pim.vcard.VCardParser_V21: java.lang.String maybeUnescapeCharacter(char)>
<com.google.android.mms.pdu.DeliveryInd: void setDate(long)>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>
<java.awt.image.DataBufferFloat: void <init>(float[][],int)>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<java.awt.font.ImageGraphicAttribute: float getAscent()>
<android.graphics.Paint: boolean isAntiAlias()>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<android.content.Intent: android.content.Intent addFlags(int)>
<java.awt.event.ItemEvent: java.awt.ItemSelectable getItemSelectable()>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>
<android.content.UriMatcher: int match(android.net.Uri)>
<java.awt.Component: java.awt.im.InputMethodRequests getInputMethodRequests()>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glNormal3x(int,int,int)>
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>
<java.awt.geom.Arc2D.Double: java.awt.geom.Rectangle2D makeBounds(double,double,double,double)>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<java.beans.PropertyEditorSupport: java.awt.Component getCustomEditor()>
<com.google.android.mms.pdu.EncodedStringValue: void <init>(java.lang.String)>
<android.net.MailTo: java.lang.String getBody()>
<android.database.AbstractWindowedCursor: void checkPosition()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>
<java.awt.im.InputContext: void dispatchEvent(java.awt.AWTEvent)>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.content.pm.PackageParser.ServiceIntentInfo: java.lang.String toString()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleasedFromContainer()>
<android.os.HandlerThread: void <init>(java.lang.String)>
<android.net.Uri: int compareTo(android.net.Uri)>
<java.awt.Component: void resize(int,int)>
<java.awt.font.GlyphMetrics: float getAdvanceY()>
<android.graphics.RectF: boolean intersect(float,float,float,float)>
<org.apache.harmony.awt.gl.TextRenderer: void drawGlyphVector(java.awt.Graphics2D,java.awt.font.GlyphVector,float,float)>
<java.awt.geom.CubicCurve2D: boolean contains(java.awt.geom.Rectangle2D)>
<android.media.AudioService.VolumeStreamState: void mute(android.os.IBinder,boolean)>
<android.widget.RatingBar: void setIsIndicator(boolean)>
<android.net.http.EventHandler: void headers(android.net.http.Headers)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>
<java.awt.MenuComponent: java.lang.String toString()>
<android.content.pm.ActivityInfo: void <init>()>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>
<android.graphics.Canvas: void scale(float,float)>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>
<com.android.server.connectivity.Tethering: boolean isDunRequired()>
<android.os.Binder: void flushPendingCommands()>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,float[],int)>
<java.awt.Component: float getAlignmentY()>
<android.util.MonthDisplayHelper: int getOffset()>
<android.os.Process: int myUid()>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>
<java.beans.FeatureDescriptor: boolean isExpert()>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>
<android.os.Debug: int getGlobalAllocCount()>
<java.awt.image.DirectColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)>
<java.awt.font.LineMetrics: float getStrikethroughThickness()>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>
<android.os.FileObserver: void startWatching()>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.graphics.drawable.RotateDrawable: void setAlpha(int)>
<org.apache.harmony.awt.gl.XORComposite: void <init>(java.awt.Color)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.Toolkit: java.awt.Dimension getBestCursorSize(int,int)>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,java.lang.String)>
<android.media.SoundPool: int play(int,float,float,int,int,float)>
<org.apache.harmony.awt.ReadOnlyIterator: void <init>(java.util.Iterator)>
<android.content.pm.PackageStats: int describeContents()>
<android.view.animation.LayoutAnimationController: void setOrder(int)>
<android.content.res.AssetFileDescriptor: int describeContents()>
<android.app.Instrumentation: void stopProfiling()>
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>
<java.awt.Toolkit: void loadSystemColors(int[])>
<android.telephony.gsm.GsmCellLocation: int hashCode()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.RenderedImage getRenderedSource(int)>
<java.awt.geom.Line2D.Float: double getX2()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>
<com.google.android.mms.pdu.NotificationInd: void setDeliveryReport(int)>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>
<android.os.SystemClock: long currentThreadTimeMillis()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,int[],int)>
<android.widget.Toast: int getYOffset()>
<android.pim.vcard.VCardEntry: java.util.List getEmailList()>
<java.awt.geom.CubicCurve2D: double getFlatness(double,double,double,double,double,double,double,double)>
<android.os.Debug: void startNativeTracing()>
<android.widget.ViewFlipper: void setAutoStart(boolean)>
<android.os.Bundle: void putAll(android.os.Bundle)>
<android.pim.vcard.VCardComposer: int getCount()>
<android.location.Address: android.os.Bundle getExtras()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getEventType()>
<java.awt.Component.FlipBufferStrategy: void createBuffers(int,java.awt.BufferCapabilities)>
<android.net.Proxy: int getDefaultPort()>
<android.app.backup.BackupAgent: void onDestroy()>
<android.app.NotificationManager: void cancelAll()>
<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>
<android.content.AsyncQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getFrameLw()>
<android.pim.ICalendar.Parameter: void <init>()>
<android.renderscript.Allocation.Adapter2D: void data(int[])>
<android.view.View: void setPressed(boolean)>
<android.content.pm.Signature: char[] toChars()>
<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard.Key)>
<java.awt.AlphaComposite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>
<android.text.method.QwertyKeyListener: int getInputType()>
<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ICC_Profile)>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<java.awt.geom.RoundRectangle2D.Float: void setRoundRect(float,float,float,float,float,float)>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.renderscript.ScriptC.Builder: void setScript(java.io.InputStream)>
<java.beans.PropertyDescriptor: void setBound(boolean)>
<android.media.AudioRecord: int getState()>
<javax.imageio.ImageReader: boolean canReadRaster()>
<android.service.wallpaper.WallpaperService: void onCreate()>
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>
<android.view.ViewDebug.ViewOperation: void run(java.lang.Object[])>
<android.view.Window: void setType(int)>
<com.android.server.am.ActivityManagerService: void stopAppSwitches()>
<com.google.android.gles_jni.GLImpl: void glBlendFunc(int,int)>
<java.beans.PropertyEditor: java.lang.String getJavaInitializationString()>
<java.awt.Component: void setName(java.lang.String)>
<com.android.defcontainer.DefaultContainerService: void onHandleIntent(android.content.Intent)>
<com.android.layoutlib.bridge.BridgeContext: android.content.ContentResolver getContentResolver()>
<java.awt.font.GlyphVector: java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)>
<com.android.layoutlib.bridge.BridgeTypedArray: java.lang.String getString(int)>
<java.awt.Adjustable: void setMinimum(int)>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>
<java.awt.image.PixelGrabber: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<java.awt.event.WindowAdapter: void windowGainedFocus(java.awt.event.WindowEvent)>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>
<android.util.TimingLogger: void reset()>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>
<com.google.android.mms.util.PduCacheEntry: int getMessageBox()>
<android.graphics.Canvas: void restore()>
<com.android.providers.settings.SettingsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSuperscriptOffsetY()>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Rectangle getClipBounds()>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>
<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>
<android.hardware.Camera.Size: boolean equals(java.lang.Object)>
<java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
<android.pim.vcard.exception.VCardException: void <init>(java.lang.String)>
<java.awt.event.ComponentEvent: java.lang.String paramString()>
<android.widget.TextView: void setMinWidth(int)>
<android.database.BulkCursorProxy: void close()>
<android.view.MotionEvent: float getHistoricalSize(int,int)>
<android.net.LocalSocket: int getSoTimeout()>
<android.ddm.DdmHandleExit: void connected()>
<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>
<android.view.View: void forceLayout()>
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<java.beans.PropertyEditorManager: java.lang.String[] getEditorSearchPath()>
<android.widget.ProgressBar: void onMeasure(int,int)>
<android.pim.EventRecurrence: void <init>()>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>
<android.webkit.JsResult: void confirm()>
<android.os.ParcelFileDescriptor: void finalize()>
<android.graphics.Path: void rLineTo(float,float)>
<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>
<android.view.Window: void setVolumeControlStream(int)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>
<org.apache.harmony.awt.gl.MultiRectArea: boolean intersects(double,double,double,double)>
<javax.imageio.ImageReader: java.awt.image.Raster readTileRaster(int,int,int)>
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>
<android.text.LoginFilter.UsernameFilterGMail: boolean isAllowed(char)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>
<android.inputmethodservice.Keyboard.Key: boolean isInside(int,int)>
<android.widget.TextView: int getCompoundPaddingTop()>
<android.view.View: void setFadingEdgeLength(int)>
<android.widget.Adapter: java.lang.Object getItem(int)>
<android.widget.PopupWindow: int getAnimationStyle()>
<android.bluetooth.BluetoothServerSocket: void close()>
<java.awt.image.SampleModel: int[] getSampleSize()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendPostals(java.util.List)>
<android.widget.TableRow.LayoutParams: void <init>()>
<android.media.MediaPlayer: void finalize()>
<com.android.server.ProcessStats: long getCpuTimeForPid(int)>
<javax.microedition.khronos.opengles.GL10: void glStencilOp(int,int,int)>
<android.content.Context: java.io.File getDir(java.lang.String,int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>
<android.view.Window: int getFeatures()>
<javax.microedition.khronos.opengles.GL11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<android.webkit.CookieManager: void removeExpiredCookie()>
<java.awt.event.WindowAdapter: void windowClosing(java.awt.event.WindowEvent)>
<android.webkit.WebSettings: void setMinimumFontSize(int)>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>
<android.database.AbstractCursor: byte[] getBlob(int)>
<java.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(int,int,int,int,int[],int[],java.awt.Point)>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioRecord: int getPositionNotificationPeriod()>
<android.app.LauncherActivity.ListItem: void <init>()>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.view.animation.Animation: boolean hasEnded()>
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.widget.AbsListView: void setSelector(int)>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>
<java.awt.Component: java.awt.Toolkit getToolkit()>
<android.graphics.Camera: void rotateX(float)>
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
<javax.imageio.ImageWriteParam: boolean canWriteCompressed()>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<android.webkit.WebView: void invokeZoomPicker()>
<android.graphics.ColorMatrix: void setRotate(int,float)>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitFormalTypeParameter(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Stroke getStroke()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int stringWidth(java.lang.String)>
<java.awt.image.MultiPixelPackedSampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence,int,int)>
<android.widget.SlidingDrawer: void animateToggle()>
<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.server.NetStatService: long getMobileTxBytes()>
<com.android.layoutlib.bridge.NinePatchDrawable: void setAlpha(int)>
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)>
<android.os.Debug: int getGlobalExternalAllocCount()>
<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>
<android.content.IntentSender.SendIntentException: void <init>()>
<android.widget.TableRow.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>
<android.server.BluetoothService: java.lang.String getAddress()>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>
<android.text.TextUtils.SimpleStringSplitter: void remove()>
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>
<android.widget.AdapterView: void setSelection(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<android.pim.vcard.VCardInterpreter: void propertyName(java.lang.String)>
<android.widget.AdapterView: void removeView(android.view.View)>
<android.database.CursorWindow: boolean isString(int,int)>
<java.awt.image.BandCombineOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.widget.ListView: int getMaxScrollAmount()>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.Camera: void release()>
<android.provider.Contacts.Intents.Insert: void <init>()>
<android.view.animation.Transformation: void <init>()>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>
<android.os.FileObserver: void <init>(java.lang.String,int)>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>
<android.net.LocalSocket: void shutdownOutput()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendPhones(java.util.List)>
<android.server.BluetoothA2dpService: int getSinkState(android.bluetooth.BluetoothDevice)>
<android.os.TokenWatcher: void dump()>
<android.pim.vcard.VCardEntryCounter: void start()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<java.awt.color.ICC_ColorSpace: float getMaxValue(int)>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.graphics.drawable.AnimationDrawable: void run()>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>
<java.awt.color.ICC_ColorSpace: float[] fromRGB(float[])>
<org.apache.harmony.awt.gl.color.ICC_ProfileHelper: short getShortFromByteArray(byte[],int)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri)>
<java.awt.event.ContainerEvent: java.lang.String paramString()>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>
<android.telephony.gsm.SmsMessage: boolean isEmail()>
<android.widget.PopupWindow: boolean isTouchable()>
<org.apache.harmony.awt.gl.ImageSurface: void dispose()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setClip(java.awt.Shape)>
<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String,long,int)>
<org.apache.harmony.awt.gl.MultiRectArea: void setRect(int[],boolean)>
<android.widget.TimePicker: void onRestoreInstanceState(android.os.Parcelable)>
<java.awt.GradientPaint: java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>
<android.opengl.GLES10: void glStencilMask(int)>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStroke(java.lang.Character,int)>
<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)>
<android.widget.AdapterView: int getLastVisiblePosition()>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>
<android.widget.SlidingDrawer: void onFinishInflate()>
<java.awt.Color: void <init>(float,float,float,float)>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
<android.webkit.PluginData: java.io.InputStream getInputStream()>
<javax.imageio.IIOParam: void setDestinationOffset(java.awt.Point)>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>
<android.media.MediaRecorder: void setAudioSource(int)>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>
<android.renderscript.SimpleMesh.Builder: void setPrimitive(android.renderscript.Primitive)>
<android.widget.TextView: void onStartTemporaryDetach()>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>
<com.android.server.EntropyService: void <init>(java.lang.String,java.lang.String)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>
<android.webkit.WebView: int computeVerticalScrollExtent()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)>
<com.google.android.gles_jni.GLImpl: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.app.Activity: java.lang.String getCallingPackage()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.FrameLayout: void drawableStateChanged()>
<java.awt.image.MultiPixelPackedSampleModel: int hashCode()>
<android.ddm.DdmHandleAppName: java.lang.String getAppName()>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>
<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView: void onCreateContextMenu(android.view.ContextMenu)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureSizes()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>
<android.app.Activity: long getInstanceCount()>
<java.awt.RenderingHints: void <init>(java.util.Map)>
<android.net.http.AndroidHttpClient: void enableCurlLogging(java.lang.String,int)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.os.Parcel: void writeBinderList(java.util.List)>
<android.text.util.Rfc822Token: java.lang.String quoteNameIfNecessary(java.lang.String)>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>
<java.awt.Toolkit.ComponentInternalsImpl: void setDesktopProperty(java.lang.String,java.lang.Object)>
<java.beans.PropertyDescriptor: void setReadMethod(java.lang.reflect.Method)>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>
<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>
<android.location.Address: java.lang.String getPostalCode()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.awt.geom.GeneralPath getOutline()>
<android.gesture.GestureLibrary: void <init>()>
<android.gesture.Gesture: java.lang.Object clone()>
<android.content.pm.PackageParser.PermissionGroup: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.hardware.Camera.Parameters: void setJpegThumbnailQuality(int)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.graphics.Path: void rMoveTo(float,float)>
<android.view.Window: android.view.WindowManager getWindowManager()>
<javax.imageio.IIOParam: int getSubsamplingXOffset()>
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>
<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>
<android.widget.TableRow: android.view.View getVirtualChildAt(int)>
<android.database.CursorJoiner: java.util.Iterator iterator()>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>
<android.view.View: void drawableStateChanged()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>
<java.awt.image.PixelGrabber: boolean grabPixels()>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>
<java.awt.image.ComponentSampleModel: void setPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.ImageSurface: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster)>
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.view.View: void cancelLongPress()>
<com.google.android.util.AbstractMessageParser.Acronym: boolean isHtml()>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>
<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean)>
<java.awt.font.OpenType: int getFontTableSize(int)>
<android.widget.TextView: int getCompoundPaddingBottom()>
<android.app.TabActivity: void <init>()>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>
<android.view.WindowManagerPolicy.WindowState: boolean hideLw(boolean)>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>
<android.widget.Adapter: boolean isEmpty()>
<java.awt.Component: java.util.EventListener[] getListeners(java.lang.Class)>
<android.os.Message: void setData(android.os.Bundle)>
<android.opengl.GLES20: void glUniform1f(int,float)>
<android.util.SparseIntArray: void clear()>
<java.awt.Component: int getWidth()>
<java.awt.HeadlessToolkit: int getMaximumCursorColors()>
<javax.imageio.ImageWriter: void endReplacePixels()>
<android.preference.Preference: void setKey(java.lang.String)>
<org.apache.harmony.awt.gl.MultiRectArea: boolean contains(java.awt.geom.Point2D)>
<android.renderscript.ProgramRaster.Builder: void setPointSpriteEnable(boolean)>
<com.android.layoutlib.bridge.BridgeTypedArray: android.content.res.Resources getResources()>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,int)>
<android.opengl.GLES10: void glMaterialf(int,int,float)>
<android.view.MotionEvent: int getHistorySize()>
<android.text.style.IconMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.os.Parcel: char[] createCharArray()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(short)>
<android.widget.TextView: void setTextSize(int,float)>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<java.awt.font.MultipleMaster: java.awt.Font deriveMMFont(float[])>
<android.graphics.Paint: float getTextSkewX()>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<java.awt.font.ImageGraphicAttribute: void draw(java.awt.Graphics2D,float,float)>
<android.pim.vcard.VCardInterpreterCollection: void propertyParamType(java.lang.String)>
<android.graphics.Canvas: void rotate(float)>
<android.hardware.Sensor: float getResolution()>
<android.renderscript.Element.Builder: void add(android.renderscript.Element,java.lang.String)>
<android.pim.vcard.VCardParser_V21: java.lang.String[] separateLineAndHandleGroup(java.lang.String)>
<android.telephony.ServiceState: void <init>(android.os.Parcel)>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>
<android.widget.AbsListView: int getSolidColor()>
<java.awt.Rectangle: void <init>(java.awt.Point,java.awt.Dimension)>
<javax.imageio.ImageWriteParam: void setCompressionType(java.lang.String)>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>
<java.awt.image.AffineTransformOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<javax.imageio.event.IIOReadWarningListener: void warningOccurred(javax.imageio.ImageReader,java.lang.String)>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.InsetDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.content.ContentProviderProxy: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.view.ViewDebug.ViewOperation: void post(java.lang.Object[])>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.telephony.gsm.SmsMessage: int getStatus()>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
<android.database.sqlite.SQLiteCursor: void close()>
<android.graphics.Rect: float exactCenterY()>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>
<android.content.ContentValues: void <init>(android.content.ContentValues)>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>
<android.graphics.Path: boolean isInverseFillType()>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape initOutline(char)>
<android.webkit.DateSorter: int getIndex(long)>
<android.bluetooth.BluetoothAdapter: int getState()>
<java.awt.geom.GeneralPath: java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform)>
<android.database.CursorWrapper: boolean moveToPrevious()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalDescent()>
<java.awt.color.ICC_Profile: void setData(int,byte[])>
<android.inputmethodservice.Keyboard: int getMinWidth()>
<android.pim.vcard.VCardParser: void <init>(int)>
<android.view.ViewStub: void setInflatedId(int)>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>
<android.graphics.Matrix: boolean preSkew(float,float)>
<android.view.animation.Animation: void initialize(int,int,int,int)>
<java.awt.image.ColorConvertOp: void <init>(java.awt.color.ColorSpace,java.awt.color.ColorSpace,java.awt.RenderingHints)>
<android.preference.Preference: void setShouldDisableView(boolean)>
<java.awt.font.ShapeGraphicAttribute: boolean equals(java.awt.font.ShapeGraphicAttribute)>
<android.widget.ScrollView: int computeVerticalScrollRange()>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>
<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile getDst()>
<android.text.format.Time: boolean isEpoch(android.text.format.Time)>
<java.awt.Dimension: java.awt.Dimension getSize()>
<android.graphics.drawable.LevelListDrawable: void <init>()>
<javax.imageio.ImageIO: void setCacheDirectory(java.io.File)>
<android.view.View: void setVisibility(int)>
<java.awt.geom.Area: boolean isRectangular()>
<java.awt.image.ImageProducer: boolean isConsumer(java.awt.image.ImageConsumer)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int[] getGlyphCodes(int,int,int[])>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node getPreviousSibling()>
<java.awt.image.renderable.RenderableImageProducer: void run()>
<java.awt.geom.Ellipse2D.Double: double getWidth()>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>
<android.pim.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.lang.String[])>
<android.pim.ICalendar.Component: void <init>(java.lang.String,android.pim.ICalendar.Component)>
<android.location.Location: void setAltitude(double)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>
<android.webkit.PluginList: java.util.List getList()>
<android.net.Proxy: int getPort(android.content.Context)>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>
<android.graphics.GradientShader.GradientPaint: int getGradientColor(float)>
<android.view.Window: void closePanel(int)>
<android.app.Service: boolean stopSelfResult(int)>
<android.webkit.WebView: void clearView()>
<android.os.PatternMatcher: boolean match(java.lang.String)>
<android.text.style.BulletSpan: void <init>(int,int)>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>
<android.view.View: int getHeight()>
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.os.Parcel: void writeByte(byte)>
<java.awt.geom.Line2D: double ptSegDistSq(double,double,double,double,double,double)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(float[],int,int)>
<javax.imageio.ImageTypeSpecifier: java.awt.image.SampleModel getSampleModel(int,int)>
<android.os.BinderProxy: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getUser()>
<android.hardware.SensorManager: float getInclination(float[])>
<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>
<android.pim.vcard.VCardEntry: java.lang.String getPhoneticMiddleName()>
<android.util.SparseArray: int keyAt(int)>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,int[],int)>
<java.awt.Graphics: void drawOval(int,int,int,int)>
<android.media.RingtoneManager: void <init>(android.content.Context)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.wtk.NativeEvent: int getMouseButton()>
<android.graphics.Bitmap: int getScaledWidth(int)>
<android.app.Activity: void overridePendingTransition(int,int)>
<android.webkit.CacheManager.CacheResult: java.lang.String getETag()>
<com.android.server.am.BatteryStatsService: void setOnBattery(boolean,int)>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>
<java.awt.image.ImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<android.widget.TextView: void setMaxWidth(int)>
<java.awt.geom.Area: java.lang.Object clone()>
<java.awt.FontMetrics: java.lang.String toString()>
<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>
<android.location.Location: void removeAccuracy()>
<android.view.BridgeInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<android.pim.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.lang.String)>
<javax.imageio.spi.ImageWriterSpi: boolean canEncodeImage(javax.imageio.ImageTypeSpecifier)>
<java.awt.AlphaComposite: int hashCode()>
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>
<android.widget.ImageView: void setAdjustViewBounds(boolean)>
<java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
<java.awt.image.WritableRaster: void setPixel(int,int,int[])>
<android.inputmethodservice.Keyboard: void setKeyWidth(int)>
<org.apache.harmony.awt.gl.TextRenderer: void drawString(java.awt.Graphics2D,java.lang.String,float,float)>
<org.apache.harmony.awt.gl.render.Blitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<java.awt.image.DataBufferInt: void <init>(int[][],int)>
<java.awt.Rectangle: void translate(int,int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.text.AttributedCharacterIterator getACI()>
<android.os.Parcel: int[] createIntArray()>
<android.hardware.Camera: void setParameters(android.hardware.Camera.Parameters)>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>
<java.awt.event.PaintEvent: void <init>(java.awt.Component,int,java.awt.Rectangle)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.net.http.SslError: int getPrimaryError()>
<android.net.http.AndroidHttpClient: void disableCurlLogging()>
<com.google.android.mms.pdu.NotificationInd: void setSubject(com.google.android.mms.pdu.EncodedStringValue)>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>
<com.google.android.gles_jni.GLImpl: void glDepthRangex(int,int)>
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>
<android.telephony.TelephonyManager: int getDataState()>
<android.location.Location: void setProvider(java.lang.String)>
<android.net.wifi.WifiInfo: java.lang.String toString()>
<java.awt.im.InputContext: java.awt.im.InputContext getInstance()>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>
<android.util.AttributeSet: int getAttributeNameResource(int)>
<com.android.layoutlib.bridge.BridgeContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>
<com.android.common.ArrayListCursor: byte[] getBlob(int)>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>
<android.view.View: int getScrollBarStyle()>
<android.graphics.RegionIterator: void finalize()>
<java.awt.font.TextLayout: float getAdvance()>
<android.view.View: void getLocationOnScreen(int[])>
<java.awt.geom.FlatteningPathIterator: void <init>(java.awt.geom.PathIterator,double,int)>
<javax.imageio.stream.ImageInputStreamImpl: long skipBytes(long)>
<android.widget.CheckedTextView: void drawableStateChanged()>
<android.os.Message: android.os.Message obtain(android.os.Handler)>
<org.apache.harmony.awt.gl.image.PNGChunk: byte[] getData()>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glBlendFunc(int,int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setFont(java.awt.Font)>
<android.app.Activity: void onDestroy()>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>
<android.text.TextUtils: boolean isGraphic(char)>
<java.awt.Component: boolean mouseEnter(java.awt.Event,int,int)>
<android.graphics.Bitmap: java.awt.image.BufferedImage getImage()>
<java.awt.image.BufferedImageFilter: java.awt.image.BufferedImageOp getBufferedImageOp()>
<android.widget.VideoView: void setVideoPath(java.lang.String)>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>
<android.widget.AutoCompleteTextView: void setThreshold(int)>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>
<android.widget.AbsListView.LayoutParams: void <init>(int,int)>
<android.graphics.Canvas: int getWidth()>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createGrayscale(int,int,boolean,boolean)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>
<com.google.android.mms.pdu.PduParser: void parseContentTypeParams(java.io.ByteArrayInputStream,java.util.HashMap,java.lang.Integer)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>
<android.media.AudioManager: void adjustVolume(int,int)>
<java.awt.font.GlyphVector: void performDefaultLayout()>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>
<java.awt.color.ICC_Profile: void finalize()>
<android.widget.TextView: boolean hasSelection()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getText()>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<javax.microedition.khronos.opengles.GL11: void glTexCoordPointer(int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void <init>()>
<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(java.nio.ShortBuffer)>
<javax.imageio.spi.ImageOutputStreamSpi: boolean needsCacheFile()>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.location.LocationProvider: boolean supportsAltitude()>
<android.telephony.gsm.SmsMessage: boolean isMWISetMessage()>
<android.widget.AdapterView: void addView(android.view.View,int)>
<java.awt.geom.Ellipse2D.Double: void <init>()>
<android.widget.GridView: void onMeasure(int,int)>
<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>
<android.pim.vcard.VCardEntryCommitter: void onEnd()>
<android.content.AsyncQueryHandler: void startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLastNonWhitespace()>
<android.util.SparseBooleanArray: int size()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhotoURL(java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContextWrapper: java.lang.String[] fileList()>
<android.app.ApplicationThreadProxy: void scheduleExit()>
<com.google.android.gles_jni.GLImpl: void glClientActiveTexture(int)>
<android.widget.TextView: void setWidth(int)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int,int)>
<android.renderscript.ProgramStore.Builder: void setDepthFunc(android.renderscript.ProgramStore.DepthFunc)>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<java.awt.image.DataBufferDouble: void setElemDouble(int,int,double)>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxOES(int,int,int,int,int)>
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>
<android.widget.ScrollView: void computeScroll()>
<java.awt.font.GlyphVector: java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext,float,float)>
<java.awt.color.ICC_ProfileGray: float[] getMediaWhitePoint()>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getAttribute(java.lang.String)>
<java.awt.Graphics: void setXORMode(java.awt.Color)>
<javax.imageio.metadata.IIOMetadataNode: boolean isEqualNode(org.w3c.dom.Node)>
<android.net.MailTo: java.util.Map getHeaders()>
<android.util.SparseArray: int indexOfKey(int)>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<java.awt.image.RGBImageFilter: java.awt.image.IndexColorModel filterIndexColorModel(java.awt.image.IndexColorModel)>
<java.awt.font.TextLayout: boolean equals(java.lang.Object)>
<com.google.android.util.AbstractMessageParser.Html: boolean isHtml()>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabled(int)>
<org.apache.harmony.awt.gl.image.PngDecoder: void decodeImage()>
<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>
<android.accounts.Account: void <init>(android.os.Parcel)>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardCompressionNode()>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>
<javax.imageio.ImageTypeSpecifier: void <init>(java.awt.image.ColorModel,java.awt.image.SampleModel)>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>
<java.awt.FontMetrics: int bytesWidth(byte[],int,int)>
<java.awt.font.FontRenderContext: boolean equals(java.lang.Object)>
<javax.imageio.ImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>
<android.view.Window: android.view.View findViewById(int)>
<java.awt.geom.RoundRectangle2D: double getArcWidth()>
<android.server.BluetoothService: boolean setPin(java.lang.String,byte[])>
<android.widget.TableLayout: boolean isStretchAllColumns()>
<com.android.layoutlib.bridge.BridgeContext: int checkCallingPermission(java.lang.String)>
<android.text.BoringLayout: android.text.Layout.Directions getLineDirections(int)>
<java.awt.image.IndexColorModel: void getAlphas(byte[])>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
<com.android.server.vpn.VpnServiceBinder: void onStart(android.content.Intent,int)>
<org.apache.harmony.awt.wtk.NativeWindow: org.apache.harmony.awt.gl.MultiRectArea getObscuredRegion(java.awt.Rectangle)>
<android.graphics.Color: int HSVToColor(int,float[])>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>
<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>
<javax.imageio.ImageReadParam: boolean canSetSourceRenderSize()>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>
<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: org.apache.harmony.awt.gl.MultiRectArea rasterize(java.awt.Shape,double)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: int getRight()>
<javax.imageio.ImageWriter: javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)>
<android.text.BoringLayout: int getTopPadding()>
<com.android.tools.layoutlib.create.Log: void error(java.lang.String,java.lang.Object[])>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>
<android.os.Binder: long clearCallingIdentity()>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>
<android.content.ContentProviderOperation: boolean isYieldAllowed()>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>
<android.speech.srec.Recognizer.Grammar: void <init>(java.lang.String)>
<android.os.Bundle: short getShort(java.lang.String,short)>
<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>
<android.speech.tts.TextToSpeech: boolean isSpeaking()>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>
<com.google.android.gles_jni.GLImpl: void glFogf(int,float)>
<java.awt.Component: java.lang.String paramString()>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
<org.apache.harmony.awt.gl.Crossing: int solveQuad(double[],double[])>
<android.net.LocalServerSocket: void close()>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>
<com.google.android.gles_jni.GLImpl: void glLineWidthx(int)>
<org.apache.harmony.awt.wtk.CursorFactory: int getMaximumCursorColors()>
<android.webkit.CacheManager: boolean cacheDisabled()>
<android.text.Html: java.lang.String toHtml(android.text.Spanned)>
<com.android.server.am.BatteryStatsService: void noteStartSensor(int,int)>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>
<java.awt.event.WindowAdapter: void windowClosed(java.awt.event.WindowEvent)>
<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.os.BinderProxy: boolean isBinderAlive()>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<android.os.Parcel: int dataCapacity()>
<android.location.Location: java.lang.String getProvider()>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>
<android.webkit.CacheManager.CacheResult: java.lang.String getContentDisposition()>
<java.awt.event.PaintEvent: java.awt.Rectangle getUpdateRect()>
<java.awt.font.LineBreakMeasurer: void setPosition(int)>
<android.view.View: int getDrawingCacheBackgroundColor()>
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>
<org.apache.harmony.awt.gl.font.CaretManager: int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<android.os.Debug: int getThreadAllocCount()>
<java.awt.image.Kernel: float[] getKernelData(float[])>
<javax.imageio.event.IIOReadProgressListener: void imageStarted(javax.imageio.ImageReader,int)>
<android.util.MonthDisplayHelper: void previousMonth()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>
<com.android.fountain.FountainView: void onDetachedFromWindow()>
<java.awt.image.IndexColorModel: void getRGBs(int[])>
<com.android.layoutlib.bridge.BridgeContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.renderscript.SimpleMesh.Builder: android.renderscript.SimpleMesh create()>
<android.view.ViewGroup: boolean canAnimate()>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.geom.QuadCurve2D.Double: double getY2()>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.view.View: int getWindowVisibility()>
<android.location.GpsSatellite: float getSnr()>
<android.os.SystemClock: void sleep(long)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(short[],int)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>
<android.pim.ICalendar: android.pim.ICalendar.Component parseComponent(java.lang.String)>
<com.android.server.am.ActivityManagerService: void attachApplication(android.app.IApplicationThread)>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>
<javax.imageio.ImageWriter: boolean canWriteSequence()>
<com.google.android.mms.pdu.SendConf: int getResponseStatus()>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>
<org.apache.harmony.awt.gl.color.ColorConverter: float[][] translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,float[][],java.awt.color.ColorSpace,java.awt.color.ColorSpace,int)>
<org.apache.harmony.awt.gl.Surface: boolean isGrayPallete(java.awt.image.IndexColorModel)>
<javax.imageio.metadata.IIOMetadataNode: boolean hasAttributeNS(java.lang.String,java.lang.String)>
<java.awt.image.DataBuffer: void <init>(int,int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: long skip(long)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<java.awt.image.RGBImageFilter: void <init>()>
<android.util.FloatMath: float ceil(float)>
<java.awt.image.ColorModel: int getRed(int)>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>
<javax.imageio.ImageWriter: void <init>(javax.imageio.spi.ImageWriterSpi)>
<android.widget.TableRow: void onLayout(boolean,int,int,int,int)>
<android.preference.Preference: void setEnabled(boolean)>
<com.android.layoutlib.bridge.BridgeContext: android.graphics.drawable.Drawable peekWallpaper()>
<com.android.server.am.BatteryStatsService: void noteInputEvent()>
<com.android.server.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String)>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>
<android.telephony.SmsMessage: boolean isStatusReportMessage()>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>
<com.google.android.mms.pdu.PduComposer: void appendOctet(int)>
<com.google.android.mms.util.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>
<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.webkit.WebView: int getProgress()>
<android.view.ViewParent: void bringChildToFront(android.view.View)>
<android.view.View: void clearFocus()>
<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>
<com.android.server.status.StatusBarService: void setIconVisibility(android.os.IBinder,boolean)>
<android.app.backup.BackupDataInputStream: int size()>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>
<android.app.IntentService: void onStart(android.content.Intent,int)>
<android.preference.CheckBoxPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.net.wifi.WifiManager: boolean pingSupplicant()>
<android.view.View: void onSizeChanged(int,int,int,int)>
<java.awt.Font: void <init>(java.util.Map)>
<android.graphics.drawable.RotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.widget.ZoomControls: void setZoomSpeed(long)>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>
<java.awt.geom.Line2D: void setLine(double,double,double,double)>
<java.awt.Toolkit: boolean prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>
<android.app.Activity: int getWallpaperDesiredMinimumWidth()>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>
<java.awt.font.GlyphMetrics: boolean isWhitespace()>
<android.view.WindowManagerPolicy.WindowState: int getSurfaceLayer()>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>
<com.android.layoutlib.bridge.BridgeResources: java.lang.String getString(int)>
<android.hardware.Camera.Parameters: void set(java.lang.String,java.lang.String)>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.database.AbstractWindowedCursor: int getInt(int)>
<android.app.Activity: void setVolumeControlStream(int)>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.util.SparseArray: void delete(int)>
<android.server.BluetoothService: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<org.apache.harmony.awt.gl.Surface: void validate()>
<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>
<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>
<java.awt.image.renderable.ParameterBlock: int getNumParameters()>
<android.graphics.Paint: float ascent()>
<java.awt.GraphicsEnvironment: void <init>()>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>
<org.apache.harmony.awt.gl.color.NativeCMM: long cmmOpenProfile(byte[])>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(int[],int)>
<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.EncodedStringValue parseEncodedStringValue(java.io.ByteArrayInputStream)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>
<android.view.View: int computeHorizontalScrollExtent()>
<java.awt.image.IndexColorModel: boolean isValid(int)>
<android.widget.DialerFilter: void setMode(int)>
<javax.imageio.stream.ImageInputStream: void reset()>
<android.content.pm.ComponentInfo: void <init>()>
<javax.imageio.ImageReader: void clearAbortRequest()>
<java.awt.PaintContext: java.awt.image.Raster getRaster(int,int,int,int)>
<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>
<com.android.layoutlib.bridge.BridgeContext: void sendBroadcast(android.content.Intent)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Font getFont()>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.database.Observable: void unregisterAll()>
<javax.imageio.ImageWriter: void processWarningOccurred(int,java.lang.String,java.lang.String)>
<android.graphics.Path: void <init>()>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>
<java.awt.geom.AffineTransform: java.awt.geom.Point2D deltaTransform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,byte)>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>
<android.opengl.GLES20: void glStencilOp(int,int,int)>
<android.preference.CheckBoxPreference: void onClick()>
<android.media.SoundPool: int load(java.lang.String,int)>
<java.awt.geom.RoundRectangle2D.Float: void <init>()>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>
<android.pim.vcard.VCardEntry.OrganizationData: java.lang.String toString()>
<android.graphics.Matrix: boolean preRotate(float,float,float)>
<android.widget.HorizontalScrollView: boolean isFillViewport()>
<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeInt(int)>
<android.os.Bundle: float getFloat(java.lang.String)>
<com.android.layoutlib.bridge.BridgeContext: int getWallpaperDesiredMinimumWidth()>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>
<java.awt.event.KeyEvent: void setKeyChar(char)>
<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>
<android.app.ApplicationThreadProxy: void updateTimeZone()>
<android.widget.ArrayAdapter: long getItemId(int)>
<com.android.layoutlib.bridge.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,int[],int)>
<javax.imageio.stream.MemoryCacheImageOutputStream: boolean isCached()>
<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>
<android.text.style.LeadingMarginSpan.Standard: int getSpanTypeId()>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.graphics.Matrix: void getValues(float[])>
<android.telephony.SmsMessage: long getTimestampMillis()>
<android.text.HtmlToSpannedConverter: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.ThrottleService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>
<android.text.Layout: android.text.TextPaint getPaint()>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>
<android.graphics.Paint: void setColor(int)>
<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>
<java.beans.PropertyDescriptor: boolean isBound()>
<android.graphics.Paint: int getColor()>
<java.awt.image.IndexColorModel: void <init>(int,int,byte[],int,boolean,int)>
<android.graphics.Canvas: int save(int)>
<javax.imageio.ImageReader: void <init>(javax.imageio.spi.ImageReaderSpi)>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.view.ContextMenu: void clearHeader()>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>
<java.awt.event.ActionEvent: long getWhen()>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>
<java.awt.geom.CubicCurve2D.Double: java.awt.geom.Point2D getCtrlP1()>
<android.renderscript.ProgramVertex.MatrixAllocation: void setupProjectionNormalized(int,int)>
<java.awt.ComponentBehavior: void addNotify()>
<org.apache.harmony.awt.im.InputMethodContext: void dispatchInputMethodEvent(int,java.text.AttributedCharacterIterator,int,java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<java.awt.image.Raster: java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer,int,int,int,java.awt.Point)>
<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>
<android.debug.JNITest: int test(int,double,java.lang.String)>
<com.android.tools.layoutlib.create.Log: void outPrintln(java.lang.String)>
<com.google.android.mms.pdu.PduComposer: void appendValueLength(long)>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>
<java.awt.font.TextLayout: void <init>(java.lang.String,java.util.Map,java.awt.font.FontRenderContext)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.awt.geom.Line2D: double getY2()>
<java.awt.Graphics: void fillArc(int,int,int,int,int,int)>
<java.awt.geom.Arc2D: double getAngleStart()>
<java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int)>
<javax.imageio.ImageIO: void setUseCache(boolean)>
<android.widget.RemoteViews: void setImageViewResource(int,int)>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>
<com.google.android.mms.pdu.GenericPdu: void <init>()>
<android.speech.srec.Recognizer: void start()>
<java.awt.geom.Area: boolean contains(java.awt.geom.Point2D)>
<android.opengl.GLES20: void glFrontFace(int)>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>
<com.android.server.am.ActivityManagerService: boolean testIsSystemReady()>
<java.awt.Component: void list()>
<org.apache.harmony.awt.wtk.NativeWindow: void setTitle(java.lang.String)>
<android.widget.ViewSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.geom.AffineTransform: int getType()>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
<android.view.View: void setDrawingCacheEnabled(boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet()>
<java.awt.geom.Line2D: double ptLineDist(java.awt.geom.Point2D)>
<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>
<com.google.android.gles_jni.GLImpl: void glGenerateMipmapOES(int)>
<android.os.Parcel: void writeBooleanArray(boolean[])>
<java.awt.image.SampleModel: float[] getSamples(int,int,int,int,int,float[],java.awt.image.DataBuffer)>
<java.awt.Component: java.awt.im.InputContext getInputContext()>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.widget.AbsListView: void reclaimViews(java.util.List)>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>
<java.awt.image.FilteredImageSource: void addConsumer(java.awt.image.ImageConsumer)>
<android.opengl.GLES20: boolean glIsShader(int)>
<android.graphics.Region: boolean isEmpty()>
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>
<org.apache.harmony.awt.ContextStorage: void setDefaultToolkit(java.awt.Toolkit)>
<android.graphics.Rect: int centerX()>
<com.google.android.mms.pdu.PduParser: int parseUnsignedInt(java.io.ByteArrayInputStream)>
<android.os.Handler: java.lang.String toString()>
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean)>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>
<android.pim.vcard.VCardParser_V21: void handleMultiplePropertyValue(java.lang.String,java.lang.String)>
<java.awt.geom.RoundRectangle2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<java.awt.event.ContainerAdapter: void <init>()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeBits(long,int)>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>
<android.pim.ICalendar.Property: void <init>(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.geom.Line2D getCaretShape(java.awt.font.TextHitInfo,java.awt.font.TextLayout)>
<android.os.AsyncTask: boolean cancel(boolean)>
<android.widget.TextView: void setCursorVisible(boolean)>
<android.text.method.ScrollingMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<java.awt.image.Raster: int getSample(int,int,int)>
<android.widget.CompoundButton: boolean isChecked()>
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setRenderingHints(java.util.Map)>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<java.awt.image.BandCombineOp: java.awt.RenderingHints getRenderingHints()>
<java.awt.image.BandedSampleModel: java.awt.image.DataBuffer createDataBuffer()>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>
<android.webkit.WebSettings: boolean getUseWideViewPort()>
<android.opengl.GLES20: int glGetError()>
<java.awt.Color: void <init>(float,float,float)>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.Shape[] getCaretShapes(int,java.awt.geom.Rectangle2D,java.awt.font.TextLayout.CaretPolicy,java.awt.font.TextLayout)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(short[],int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindFramebufferOES(int,int)>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>
<com.android.tools.layoutlib.create.MethodListener: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context,boolean)>
<android.view.View: boolean post(java.lang.Runnable)>
<com.google.android.gles_jni.GLImpl: void glMaterialf(int,int,float)>
<com.android.server.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>
<android.telephony.gsm.SmsMessage: void <init>()>
<java.awt.image.BandedSampleModel: int hashCode()>
<android.pim.vcard.VCardParser_V21: java.lang.String getBase64(java.lang.String)>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getShearInstance(double,double)>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.awt.image.BandCombineOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<java.awt.event.MouseWheelEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean,int,int,int)>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.content.Context: void sendBroadcast(android.content.Intent)>
<java.awt.image.RenderedImage: int getHeight()>
<java.awt.Rectangle: void <init>(java.awt.Rectangle)>
<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
<android.renderscript.Script.Builder: void setRoot(boolean)>
<com.android.server.status.TrackingPatternView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: void draw(android.graphics.Canvas)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<com.google.android.mms.pdu.PduPersister: android.net.Uri move(android.net.Uri,android.net.Uri)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.content.BroadcastReceiver: void setResultData(java.lang.String)>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>
<android.content.pm.PackageManager: void removePackageFromPreferred(java.lang.String)>
<android.widget.AutoCompleteTextView: int getListSelection()>
<java.awt.image.DataBufferDouble: void <init>(int)>
<java.awt.color.ICC_Profile: byte[] getData(int)>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.webkit.WebView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<java.awt.geom.Ellipse2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>
<java.awt.Rectangle: java.lang.String toString()>
<android.content.Context: void setWallpaper(android.graphics.Bitmap)>
<android.app.ActivityManager: void restartPackage(java.lang.String)>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
<android.pim.vcard.VCardEntryConstructor: void propertyGroup(java.lang.String)>
<java.awt.event.InputEvent: java.lang.String getModifiersExText(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<javax.imageio.stream.ImageOutputStreamImpl: void write(byte[])>
<android.location.LocationListener: void onProviderEnabled(java.lang.String)>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>
<android.view.WindowManagerPolicy.WindowState: boolean getGivenInsetsPendingLw()>
<java.awt.color.ColorSpace: float getMinValue(int)>
<android.app.ApplicationThreadProxy: void requestThumbnail(android.os.IBinder)>
<android.pim.ICalendar.Component: void toString(java.lang.StringBuilder)>
<java.awt.image.AffineTransformOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],int)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getAttributeDefaultValue(java.lang.String,java.lang.String)>
<java.awt.GraphicsDevice: boolean isDisplayChangeSupported()>
<java.awt.geom.CubicCurve2D.Double: double getCtrlY2()>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>
<java.awt.image.ComponentColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<android.view.ViewGroup: void setClipChildren(boolean)>
<android.net.http.RequestQueue.ConnectionManager: org.apache.http.HttpHost getProxyHost()>
<android.renderscript.RenderScript.MessageThread: void run()>
<android.location.LocationProvider: boolean requiresSatellite()>
<android.widget.AnalogClock: void onMeasure(int,int)>
<android.app.Dialog: void hide()>
<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.os.Process: int getThreadPriority(int)>
<android.net.Downloads.ById: java.io.InputStream openDownloadStream(android.content.Context,long)>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.apache.harmony.awt.gl.font.CompositeFont: void dispose()>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>
<android.view.View: void computeScroll()>
<android.graphics.drawable.LayerDrawable: int getId(int)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.NeighboringCellInfo: int getRssi()>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>
<com.android.layoutlib.bridge.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void finalize()>
<android.graphics.Paint: android.graphics.Shader getShader()>
<android.app.Activity: void onDetachedFromWindow()>
<android.text.BoringLayout: int getLineTop(int)>
<java.awt.image.renderable.RenderableImage: boolean isDynamic()>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.hardware.Camera.Parameters: void setJpegThumbnailSize(int,int)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<javax.microedition.khronos.opengles.GL11Ext: void glCurrentPaletteMatrixOES(int)>
<android.content.Context: void setTheme(int)>
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<android.preference.Preference: int compareTo(android.preference.Preference)>
<android.database.AbstractCursor: int getInt(int)>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>
<java.awt.geom.Line2D: double ptSegDist(java.awt.geom.Point2D)>
<java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,int[],int)>
<org.apache.harmony.awt.gl.font.AndroidFont: org.apache.harmony.awt.gl.font.Glyph getDefaultGlyph()>
<android.server.BluetoothService.BondState: java.lang.String getPendingOutgoingBonding()>
<android.graphics.Rect: boolean intersects(int,int,int,int)>
<android.text.StaticLayout: int getLineCount()>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioRecord: int getAudioSource()>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.app.Dialog: void setContentView(int)>
<android.view.View: void buildDrawingCache(boolean)>
<android.pim.vcard.VCardEntry: void <init>(int,android.accounts.Account)>
<android.location.Criteria: boolean isBearingRequired()>
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>
<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>
<android.text.SpannedString: void <init>(java.lang.CharSequence)>
<android.app.ActivityThread.PackageInfo: android.app.Application makeApplication(boolean,android.app.Instrumentation)>
<java.awt.Graphics: void drawArc(int,int,int,int,int,int)>
<android.text.style.StrikethroughSpan: int describeContents()>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
<android.app.Activity: java.lang.CharSequence getTitle()>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>
<android.preference.VolumePreference.SeekBarVolumizer: void onStartTrackingTouch(android.widget.SeekBar)>
<java.awt.Component: java.awt.Dimension size()>
<java.awt.color.ICC_ProfileRGB: float[][] getMatrix()>
<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>
<android.widget.AlphabetIndexer: int getPositionForSection(int)>
<javax.imageio.stream.ImageInputStreamImpl: java.lang.String readLine()>
<javax.imageio.ImageWriter: void processImageStarted(int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<java.awt.Point: void move(int,int)>
<java.awt.image.RasterOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<android.view.View: void setDrawingCacheBackgroundColor(int)>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>
<com.android.server.NetStatService: long getTotalRxBytes()>
<java.awt.image.ComponentSampleModel: double getSampleDouble(int,int,int,java.awt.image.DataBuffer)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<android.net.Uri: boolean isOpaque()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStartTiming(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<javax.microedition.khronos.opengles.GL10: void glStencilMask(int)>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<android.bluetooth.BluetoothDevice: int describeContents()>
<java.awt.image.ComponentSampleModel: void setSample(int,int,int,float,java.awt.image.DataBuffer)>
<java.awt.Component: boolean gotFocus(java.awt.Event,java.lang.Object)>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>
<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataFormat getMetadataFormat(java.lang.String)>
<java.awt.event.WindowAdapter: void windowDeactivated(java.awt.event.WindowEvent)>
<android.text.style.ImageSpan: void <init>(android.content.Context,int)>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<android.view.Window: void setContainer(android.view.Window)>
<android.view.Surface: void setLayer(int)>
<java.awt.image.BufferStrategy: java.awt.Graphics getDrawGraphics()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>
<android.widget.RatingBar: void setRating(float)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.content.pm.PathPermission: void <init>(android.os.Parcel)>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<android.pim.vcard.VCardConfig: boolean usesUtf8(int)>
<android.server.BluetoothService: boolean isEnabled()>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
<java.awt.Rectangle: void setBounds(int,int,int,int)>
<android.text.style.AbsoluteSizeSpan: int getSize()>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>
<android.opengl.GLES10: void glDepthRangef(float,float)>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>
<android.os.DeadObjectException: void <init>()>
<android.view.OrientationListener: void disable()>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<java.awt.image.DataBuffer: double getElemDouble(int,int)>
<android.view.View: void setBackgroundResource(int)>
<com.android.server.am.BatteryStatsService: void noteStopWakelock(int,java.lang.String,int)>
<android.preference.VolumePreference.SeekBarVolumizer: void onRestoreInstanceState(android.preference.VolumePreference.VolumeStore)>
<org.apache.harmony.awt.gl.MultiRectArea.LineCash: void setLine(int)>
<android.location.GpsSatellite: boolean hasEphemeris()>
<android.widget.ViewFlipper: void startFlipping()>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.animation.LayoutAnimationController: void start()>
<java.awt.event.KeyEvent: java.lang.String getKeyText(int)>
<android.os.AsyncTask: android.os.AsyncTask.Status getStatus()>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>
<android.server.BluetoothA2dpService: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>
<android.pim.vcard.VCardParser_V30: java.lang.String unescapeCharacter(char)>
<java.awt.geom.Line2D: java.awt.geom.Point2D getP1()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.font.GlyphMetrics getGlyphMetrics(int)>
<android.app.ActivityManagerProxy: void enterSafeMode()>
<android.widget.NumberPicker.Formatter: java.lang.String toString(int)>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<java.awt.Color: float[] getColorComponents(float[])>
<android.pim.vcard.VCardConfig: boolean showPerformanceLog()>
<java.awt.image.renderable.RenderableImage: float getHeight()>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>
<android.database.Cursor: boolean moveToNext()>
<android.database.AbstractCursor: boolean moveToPosition(int)>
<java.awt.image.DataBufferShort: void <init>(short[][],int)>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int nextTag()>
<android.graphics.Matrix: boolean preRotate(float,float,float)>
<java.awt.event.AWTEventListenerProxy: long getEventMask()>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<android.os.PowerManager.WakeLock: java.lang.String toString()>
<javax.imageio.spi.IIOServiceProvider: void onDeregistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<org.apache.harmony.awt.wtk.NativeIM: void notifyClientWindowChange(java.awt.Rectangle)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: int getNumImages(boolean)>
<com.android.server.AttributeCache: void removePackage(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String)>
<org.apache.harmony.awt.wtk.NativeEventQueue: org.apache.harmony.awt.wtk.NativeEvent getNextEvent()>
<android.os.Debug: void resetThreadExternalAllocCount()>
<android.inputmethodservice.InputMethodService: void onCreate()>
<com.google.android.mms.pdu.PduHeaders: void setTextString(byte[],int)>
<com.android.layoutlib.bridge.BridgeResources: java.io.InputStream openRawResource(int)>
<java.awt.image.DirectColorModel: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,boolean)>
<android.webkit.WebView: void disablePlatformNotifications()>
<android.widget.DialerFilter: boolean onKeyUp(int,android.view.KeyEvent)>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<android.os.TokenWatcher: void acquired()>
<java.awt.ComponentBehavior: java.awt.Graphics getGraphics(int,int,int,int)>
<com.android.fountain.FountainView: boolean onTouchEvent(android.view.MotionEvent)>
<java.awt.image.PixelGrabber: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.content.SyncResult: void clear()>
<android.accounts.AccountAuthenticatorActivity: void finish()>
<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: boolean checkConnection()>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.widget.CursorFilter.CursorFilterClient: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>
<java.awt.Component: void processMouseMotionEvent(java.awt.event.MouseEvent)>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>
<javax.imageio.stream.ImageInputStreamImpl: void setByteOrder(java.nio.ByteOrder)>
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>
<java.awt.image.SampleModel: java.lang.Object getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.database.sqlite.SQLiteCursor: boolean requery()>
<android.provider.Telephony.Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>
<android.app.Dialog: boolean requestWindowFeature(int)>
<android.text.style.TextAppearanceSpan: int getTextStyle()>
<java.awt.image.ImageFilter: void setDimensions(int,int)>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>
<android.graphics.Paint: float getStrokeWidth()>
<java.awt.GradientPaint: boolean isCyclic()>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>
<javax.imageio.ImageReader: int getNumImages(boolean)>
<java.awt.image.SinglePixelPackedSampleModel: int[] getPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<javax.imageio.ImageWriter: void addIIOWriteProgressListener(javax.imageio.event.IIOWriteProgressListener)>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>
<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<java.awt.BasicStroke: float getLineWidth()>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.google.android.mms.pdu.ReadRecInd: int getReadStatus()>
<android.webkit.WebIconDatabase: void close()>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>
<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>
<java.awt.geom.AffineTransform: java.lang.String toString()>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>
<android.view.inputmethod.CompletionInfo: int describeContents()>
<org.apache.harmony.awt.gl.MultiRectArea.LineCash: void <init>(int)>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package)>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.pim.vcard.VCardInterpreterCollection: void endProperty()>
<java.awt.event.MouseEvent: int getY()>
<java.awt.Component: void setLocation(java.awt.Point)>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>
<android.content.pm.PermissionGroupInfo: void <init>()>
<android.content.SharedPreferences.OnSharedPreferenceChangeListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.android.tools.layoutlib.create.MethodAdapter: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<java.awt.image.VolatileImage: java.awt.Graphics2D createGraphics()>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<android.pim.vcard.VCardUtils: java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.image.MultiPixelPackedSampleModel: java.awt.image.DataBuffer createDataBuffer()>
<java.awt.geom.AffineTransform: void transform(float[],int,double[],int,int)>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
<android.widget.ListView: long[] getCheckItemIds()>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<java.awt.Component: boolean isBackgroundSet()>
<javax.imageio.ImageWriter: void clearAbortRequest()>
<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.color.ColorSpace)>
<javax.imageio.stream.ImageInputStream: void readFully(byte[],int,int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: boolean isCompressionLossless()>
<java.awt.event.MouseListener: void mouseExited(java.awt.event.MouseEvent)>
<java.awt.Graphics: java.awt.Rectangle getClipBounds(java.awt.Rectangle)>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
<java.awt.im.InputContext: void setCompositionEnabled(boolean)>
<com.android.layoutlib.bridge.BridgeContext: boolean deleteFile(java.lang.String)>
<android.pim.ICalendar.Component: android.pim.ICalendar.Property getFirstProperty(java.lang.String)>
<javax.imageio.metadata.IIOMetadataFormat: int getAttributeListMinLength(java.lang.String,java.lang.String)>
<android.widget.TextView: void setLineSpacing(float,float)>
<org.apache.harmony.awt.state.State: java.awt.FontMetrics getFontMetrics()>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>
<javax.imageio.stream.ImageOutputStreamImpl: void flushBits()>
<android.app.AlertDialog: void setView(android.view.View)>
<android.widget.Checkable: boolean isChecked()>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.AsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.speech.RecognitionListener: void onPartialResults(android.os.Bundle)>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>
<android.widget.PopupWindow: void update(int,int)>
<java.awt.ComponentBehavior: void setBounds(int,int,int,int,int)>
<javax.imageio.ImageReader: void processThumbnailUpdate(java.awt.image.BufferedImage,int,int,int,int,int,int,int[])>
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>
<android.media.AudioTrack: int getState()>
<android.location.GpsSatellite: float getElevation()>
<java.awt.image.ImageFilter: void resendTopDownLeftRight(java.awt.image.ImageProducer)>
<android.text.style.SuperscriptSpan: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glTexParameteri(int,int,int)>
<java.awt.color.ColorSpace: float[] toRGB(float[])>
<android.view.Window: void setContentView(int)>
<android.opengl.GLES20: boolean glIsEnabled(int)>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<java.awt.geom.GeneralPath: void <init>(int,int)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(long,int)>
<android.widget.ToggleButton: void onFinishInflate()>
<org.apache.harmony.awt.wtk.NativeWindow: boolean isFocusable()>
<android.opengl.GLES10: void glFrontFace(int)>
<java.awt.image.ImageConsumer: void setHints(int)>
<org.apache.harmony.awt.ChoiceStyle: int getPopupX(int,int,int,int)>
<android.text.util.Linkify.MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<java.awt.image.ComponentColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<java.awt.image.IndexColorModel: int getBlue(int)>
<android.content.pm.FeatureInfo: java.lang.String toString()>
<android.pim.vcard.VCardComposer: void <init>(android.content.Context)>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<java.awt.HeadlessToolkit: int getMenuShortcutKeyMask()>
<android.content.pm.PackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<org.apache.harmony.awt.gl.font.FontManager: int getLogicalFaceIndex(java.lang.String)>
<android.renderscript.ScriptC.Builder: android.renderscript.ScriptC create()>
<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController)>
<javax.imageio.metadata.IIOMetadataFormat: boolean canNodeAppear(java.lang.String,javax.imageio.ImageTypeSpecifier)>
<java.awt.geom.Rectangle2D.Float: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>
<javax.imageio.ImageWriteParam: float[] getCompressionQualityValues()>
<android.content.IntentFilter: int countDataAuthorities()>
<java.awt.AWTEvent: void <init>(java.lang.Object,int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,int[],int)>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>
<android.app.TabActivity: void onContentChanged()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>
<android.widget.ListView: android.util.SparseBooleanArray getCheckedItemPositions()>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<android.widget.TextView: void onAttachedToWindow()>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>
<android.graphics.Point: void <init>(int,int)>
<android.pim.vcard.VCardInterpreterCollection: void end()>
<android.content.Context: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.media.SoundPool: void finalize()>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<java.awt.image.ComponentColorModel: int getRGB(int)>
<android.graphics.drawable.Drawable: boolean setState(int[])>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>
<org.apache.harmony.x.imageio.spi.RAFIOSSpi: javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object,boolean,java.io.File)>
<android.os.BatteryStats.Timer: int getCountLocked(int)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSubscriptOffsetY()>
<android.text.format.Time: boolean parse3339(java.lang.String)>
<android.widget.TextView: void setMinLines(int)>
<android.app.ApplicationThreadProxy: void <init>(android.os.IBinder)>
<android.os.ConditionVariable: boolean block(long)>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>
<java.awt.event.InputEvent: long getWhen()>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>
<java.awt.geom.CubicCurve2D.Double: double getCtrlY1()>
<com.android.server.status.StatusBarView: void onSizeChanged(int,int,int,int)>
<java.awt.MenuContainer: boolean postEvent(java.awt.Event)>
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Paint: void reset()>
<com.android.layoutlib.bridge.BridgeContext: void startActivity(android.content.Intent)>
<android.widget.TimePicker: boolean is24HourView()>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>
<android.graphics.Path: void close()>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<javax.microedition.khronos.opengles.GL10: void glLineWidthx(int)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.lang.String getFontName()>
<org.apache.harmony.awt.gl.ImageSurface: java.awt.image.WritableRaster getRaster()>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>
<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>
<android.widget.TextView: int getImeActionId()>
<android.pim.ICalendar.Component: java.lang.String toString()>
<android.os.PowerManager.WakeLock: boolean isHeld()>
<android.provider.ContactsContract.RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.content.ContentProviderOperation: android.net.Uri getUri()>
<android.widget.ExpandableListView.ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>
<android.media.AudioTrack: void finalize()>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.app.Activity: void setPersistent(boolean)>
<android.widget.MultiAutoCompleteTextView: void performValidation()>
<com.android.layoutlib.bridge.BridgeContext: void setWallpaper(android.graphics.Bitmap)>
<org.apache.harmony.awt.wtk.NativeEventThread.Init: org.apache.harmony.awt.wtk.WTK init()>
<org.apache.harmony.awt.gl.font.FontManager: org.apache.harmony.awt.gl.font.FontProperty[] getFontProperties(java.lang.String)>
<com.google.android.mms.MmsException: void <init>()>
<com.android.rs.image.ImageProcessingActivity: void surfaceCreated(android.view.SurfaceHolder)>
<java.awt.Toolkit: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>
<android.opengl.GLES20: void glBindTexture(int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,int[],int)>
<java.awt.image.MemoryImageSource: void newPixels(int,int,int,int)>
<com.android.server.am.ActivityManagerService: void moveTaskToBack(int)>
<org.apache.harmony.awt.wtk.NativeEvent: long getOtherWindowId()>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>
<android.content.Intent: short getShortExtra(java.lang.String,short)>
<android.pim.vcard.VCardInterpreterCollection: void startEntry()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: float[] getGlyphPositions(int,int,float[])>
<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendNameProperties(java.util.List)>
<android.content.res.Resources: int[] getIntArray(int)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.Object getProjectKey()>
<java.awt.image.RescaleOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>
<android.util.Base64InputStream: int read(byte[],int,int)>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<java.awt.geom.Line2D.Float: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<java.beans.FeatureDescriptor: java.util.Enumeration attributeNames()>
<java.awt.IllegalComponentStateException: void <init>()>
<android.text.Layout: int getTopPadding()>
<javax.imageio.ImageReader: void removeIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener)>
<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.graphics.Paint: boolean isUnderlineText()>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
<android.graphics.Paint: void reset()>
<android.graphics.Canvas: void scale(float,float,float,float)>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getObjectArrayMinLength(java.lang.String)>
<java.awt.font.GlyphMetrics: float getAdvanceX()>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>
<android.content.ContentQueryMap: java.util.Map getRows()>
<android.content.res.TypedArray: int getIndexCount()>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>
<android.app.Activity: void setVisible(boolean)>
<android.view.View: boolean isSaveEnabled()>
<android.widget.CursorTreeAdapter: boolean isChildSelectable(int,int)>
<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>
<java.awt.image.SampleModel: void setSample(int,int,int,int,java.awt.image.DataBuffer)>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.Exception)>
<android.content.res.AssetManager.AssetInputStream: int getAssetInt()>
<java.awt.event.ComponentAdapter: void componentHidden(java.awt.event.ComponentEvent)>
<java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(int,int)>
<android.app.Service: void onRebind(android.content.Intent)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<java.awt.image.LookupOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Picture: void draw(android.graphics.Canvas)>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>
<android.view.ViewConfiguration: int getTapTimeout()>
<com.google.android.mms.pdu.PduParser: int parseShortInteger(java.io.ByteArrayInputStream)>
<android.text.Selection: void extendSelection(android.text.Spannable,int)>
<javax.imageio.ImageReader: void setInput(java.lang.Object)>
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>
<com.android.tools.layoutlib.create.Log: void info(java.lang.String,java.lang.Object[])>
<android.content.ContentResolver: void <init>(android.content.Context)>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>
<com.google.android.gles_jni.GLImpl: void glColor4ub(byte,byte,byte,byte)>
<android.database.CursorWindow: void freeLastRow()>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>
<android.graphics.Paint: void <init>(int)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getDocID()>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<java.awt.event.ComponentListener: void componentResized(java.awt.event.ComponentEvent)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.text.Editable.Factory: android.text.Editable.Factory getInstance()>
<android.view.Surface: void finalize()>
<android.hardware.Camera: android.hardware.Camera open()>
<java.awt.Component: void removeHierarchyListener(java.awt.event.HierarchyListener)>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>
<java.awt.image.RasterOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>
<android.widget.CursorTreeAdapter: long getChildId(int,int)>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.Graphics2D getGraphics2D(org.apache.harmony.awt.wtk.NativeWindow,int,int,org.apache.harmony.awt.gl.MultiRectArea)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>
<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<java.awt.image.BandedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<android.util.Base64OutputStream: void close()>
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,boolean)>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>
<android.widget.TabHost: int getCurrentTab()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSample(int,int,int,float)>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.os.Parcel: void writeValue(java.lang.Object)>
<android.graphics.Path: void set(android.graphics.Path)>
<com.google.android.gles_jni.GLImpl: void glLoadPaletteFromModelViewMatrixOES()>
<javax.imageio.stream.MemoryCacheImageInputStream: int read()>
<java.awt.BufferCapabilities.FlipContents: java.lang.String toString()>
<android.net.Credentials: int getUid()>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<java.awt.Rectangle: void setLocation(int,int)>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>
<android.pim.vcard.VCardEntryCounter: void startProperty()>
<android.database.Observable: void registerObserver(java.lang.Object)>
<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>
<android.widget.TextView: void setRawInputType(int)>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<java.awt.image.PackedColorModel: int getMask(int)>
<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>
<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.widget.ArrayAdapter: void add(java.lang.Object)>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>
<android.text.style.SuperscriptSpan: void <init>()>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>
<android.content.Context: java.io.File getFilesDir()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>
<com.android.common.OperationScheduler: void <init>(android.content.SharedPreferences)>
<android.webkit.WebView: void setNetworkAvailable(boolean)>
<java.awt.Rectangle: int outcode(double,double)>
<java.awt.geom.Ellipse2D.Double: void <init>(double,double,double,double)>
<java.awt.image.IndexColorModel: int getAlpha(int)>
<android.util.AttributeSet: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<java.awt.event.InputEvent: boolean isControlDown()>
<android.widget.RelativeLayout.LayoutParams: void addRule(int,int)>
<org.apache.harmony.awt.gl.image.GifDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>
<java.awt.Component: boolean inside(int,int)>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>
<com.android.server.DropBoxManagerService: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.widget.HorizontalScrollView: boolean fullScroll(int)>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>
<com.android.layoutlib.bridge.Bridge: com.android.layoutlib.api.ILayoutResult computeLayout(com.android.layoutlib.api.IXmlPullParser,java.lang.Object,int,int,boolean,int,float,float,java.lang.String,boolean,java.util.Map,java.util.Map,com.android.layoutlib.api.IProjectCallback,com.android.layoutlib.api.ILayoutLog)>
<com.android.server.DevicePolicyManagerService: void wipeData(int)>
<java.awt.image.Raster: java.awt.image.Raster createChild(int,int,int,int,int,int,int[])>
<android.server.BluetoothA2dpService: int getSinkPriority(android.bluetooth.BluetoothDevice)>
<javax.imageio.event.IIOReadProgressListener: void sequenceComplete(javax.imageio.ImageReader)>
<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>
<android.text.style.LeadingMarginSpan.LeadingMarginSpan2: int getLeadingMarginLineCount()>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String[] fileList()>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)>
<android.graphics.Canvas: void restore()>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.view.View: void setTag(int,java.lang.Object)>
<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void setGlyphPositions(int,int,float[])>
<org.apache.harmony.awt.gl.color.ICC_Transform: void translateColors(org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.util.List getInfo()>
<android.database.AbstractCursor: boolean isAfterLast()>
<com.android.common.OperationScheduler.Options: java.lang.String toString()>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>
<com.android.server.am.BatteryStatsService: void noteStartVideo(int)>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>
<android.webkit.WebSettings: boolean getPluginsEnabled()>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(float[],int)>
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<android.pim.ICalendar.Property: void <init>(java.lang.String)>
<java.awt.geom.Ellipse2D.Double: boolean isEmpty()>
<java.awt.image.VolatileImage: java.awt.image.BufferedImage getSnapshot()>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addElement(java.lang.String,java.lang.String,int,int)>
<android.content.ContentResolver: void cancelSync(android.net.Uri)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.hardware.GeomagneticField: float getZ()>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>
<android.view.animation.Transformation: java.lang.String toString()>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>
<android.provider.MediaStore.Video.Media: android.net.Uri getContentUri(java.lang.String)>
<java.awt.event.WindowListener: void windowIconified(java.awt.event.WindowEvent)>
<android.graphics.drawable.InsetDrawable: int getOpacity()>
<com.android.layoutlib.bridge.BridgeContext: android.content.ComponentName startService(android.content.Intent)>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>
<android.database.Cursor: boolean isLast()>
<android.widget.AdapterView: void removeAllViews()>
<android.provider.ContactsContract.StatusUpdates: int getPresenceIconResourceId(int)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<android.widget.RatingBar: void onMeasure(int,int)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<android.content.IntentFilter.AuthorityEntry: java.lang.String getHost()>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.util.FloatMath: float floor(float)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>
<org.apache.harmony.awt.gl.Surface: long getSurfaceDataPtr()>
<javax.imageio.stream.ImageInputStreamImpl: void finalize()>
<org.apache.harmony.awt.state.MenuItemState: void setTextBounds(int,int,int,int)>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>
<java.awt.font.ImageGraphicAttribute: float getDescent()>
<android.widget.SectionIndexer: int getSectionForPosition(int)>
<java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>
<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<java.awt.Adjustable: int getUnitIncrement()>
<android.media.MediaRecorder: void finalize()>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<javax.imageio.ImageReader: void reset()>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.Graphics getGraphics()>
<java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>
<android.widget.TextView: void setScroller(android.widget.Scroller)>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>
<java.awt.image.ColorConvertOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<android.widget.PopupWindow: boolean isOutsideTouchable()>
<android.widget.TextView: int getImeOptions()>
<android.os.Message: void copyFrom(android.os.Message)>
<java.awt.im.spi.InputMethod: java.lang.Object getControlObject()>
<java.awt.geom.QuadCurve2D: java.awt.geom.Point2D getP1()>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>
<android.widget.CursorAdapter: int getCount()>
<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glTexParameterx(int,int,int)>
<android.pim.vcard.VCardUtils: boolean containsOnlyNonCrLfPrintableAscii(java.util.Collection)>
<android.view.View: void scrollBy(int,int)>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,int[],int)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,float[],int)>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.app.ActivityManagerProxy: android.os.IBinder asBinder()>
<javax.imageio.event.IIOWriteProgressListener: void writeAborted(javax.imageio.ImageWriter)>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<android.net.wifi.WifiManager: boolean disconnect()>
<android.app.ActivityManagerProxy: void removeContentProvider(android.app.IApplicationThread,java.lang.String)>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>()>
<android.security.Sha1MessageDigest: void reset()>
<android.graphics.Matrix: void setRotate(float,float,float)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextLeftHit(int,java.awt.font.TextLayout.CaretPolicy)>
<java.awt.font.LineBreakMeasurer: int getPosition()>
<java.awt.image.IndexColorModel: int getDataElement(int[],int)>
<com.google.android.gles_jni.GLImpl: void glLightModelf(int,float)>
<javax.imageio.spi.ServiceRegistry: java.util.Iterator getServiceProviders(java.lang.Class,javax.imageio.spi.ServiceRegistry.Filter,boolean)>
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.SlidingDrawer: boolean isOpened()>
<org.apache.harmony.awt.gl.MultiRectArea: boolean equals(java.lang.Object)>
<android.app.Instrumentation: void startAllocCounting()>
<java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>
<java.awt.geom.RectangularShape: java.lang.Object clone()>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitInnerClassType(java.lang.String)>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>
<java.awt.Adjustable: void setBlockIncrement(int)>
<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.text.Layout: int getOffsetToRightOf(int)>
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<java.awt.geom.Area: boolean contains(double,double)>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>
<android.widget.SlidingDrawer: void animateOpen()>
<android.opengl.GLES10: void glFlush()>
<android.provider.ContactsContract.Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<android.graphics.Paint: void setLinearText(boolean)>
<org.apache.harmony.awt.state.State: boolean isVisible()>
<android.preference.Preference: void notifyDependencyChange(boolean)>
<android.media.MediaScannerConnection: void disconnect()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.color.ICC_Transform: java.awt.color.ICC_Profile getSrc()>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
<android.view.accessibility.AccessibilityEvent: int getFromIndex()>
<android.content.res.ColorStateList: boolean isStateful()>
<javax.microedition.khronos.opengles.GL11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<java.awt.Component: java.awt.image.ColorModel getColorModel()>
<android.widget.PopupWindow: int getSoftInputMode()>
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocalPath()>
<com.android.server.status.StatusBarService: void <init>(android.content.Context)>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
<java.awt.Toolkit: java.lang.String[] getFontList()>
<android.widget.MediaController.MediaPlayerControl: void start()>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>
<java.awt.Font: int hashCode()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>
<java.awt.geom.FlatteningPathIterator: int getRecursionLimit()>
<java.awt.event.KeyAdapter: void <init>()>
<java.awt.geom.Point2D: double getX()>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>
<android.graphics.RectF: void union(float,float)>
<java.awt.event.MouseEvent: void translatePoint(int,int)>
<android.pim.vcard.VCardInterpreter: void start()>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>
<java.awt.Graphics: java.awt.Rectangle getClipRect()>
<android.os.ConditionVariable: void <init>(boolean)>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>
<org.apache.harmony.awt.gl.font.AndroidFont: int getMissingGlyphCode()>
<android.app.Activity: android.view.Window getWindow()>
<java.awt.image.MemoryImageSource: void startProduction(java.awt.image.ImageConsumer)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getPluginClassName()>
<java.awt.image.AffineTransformOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void attachToken(android.os.IBinder)>
<org.apache.harmony.awt.ContextStorage: java.awt.Toolkit getDefaultToolkit()>
<java.awt.geom.AffineTransform: void setTransform(java.awt.geom.AffineTransform)>
<javax.microedition.khronos.opengles.GL10: void glColor4f(float,float,float,float)>
<java.awt.Graphics: void setClip(int,int,int,int)>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.app.Application: void <init>()>
<android.view.InflateException: void <init>()>
<android.view.SurfaceHolder: void setFixedSize(int,int)>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<java.awt.geom.AffineTransform: boolean isIdentity()>
<com.google.android.gles_jni.EGLImpl: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<com.android.server.status.StatusBarService.NotificationCallbacks: void onPanelRevealed()>
<com.android.server.status.StatusBarService: void updateIcon(android.os.IBinder,java.lang.String,java.lang.String,int,int)>
<android.view.MotionEvent: float getHistoricalX(int)>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>
<java.awt.Point: void <init>(int,int)>
<android.opengl.GLES20: void glFinish()>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>
<javax.imageio.metadata.IIOMetadataNode: short getNodeType()>
<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>
<java.awt.geom.CubicCurve2D.Double: java.awt.geom.Point2D getP2()>
<android.preference.CheckBoxPreference: void setSummaryOff(java.lang.CharSequence)>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.view.Display: int getPixelFormat()>
<java.awt.DisplayMode: int getRefreshRate()>
<org.apache.harmony.awt.gl.font.AndroidFontProperty: java.lang.String getStyleName()>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Rectangle getGlyphPixelBounds(int,java.awt.font.FontRenderContext,float,float)>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>
<android.view.animation.AnimationSet: long getStartTime()>
<java.awt.font.LineBreakMeasurer: int nextOffset(float,int,boolean)>
<android.hardware.Camera: void reconnect()>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>
<java.awt.event.HierarchyEvent: java.lang.String paramString()>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>
<com.android.server.PackageManagerBackupAgent: java.util.Set getRestoredPackages()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read()>
<java.awt.image.ByteLookupTable: byte[][] getTable()>
<android.graphics.PathMeasure: boolean isClosed()>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>
<com.google.android.gles_jni.GLImpl: void glAlphaFuncx(int,int)>
<java.awt.geom.Arc2D.Float: double getX()>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>
<java.awt.Component: void processHierarchyEvent(java.awt.event.HierarchyEvent)>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
<android.content.res.AssetManager: void finalize()>
<java.awt.event.InputMethodEvent: java.lang.String paramString()>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
<com.android.layoutlib.bridge.BridgeContext: int checkUriPermission(android.net.Uri,int,int,int)>
<android.pim.ICalendar.Component: java.util.List getComponents()>
<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.DataBuffer createDataBuffer()>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>
<com.android.server.KeyInputQueue: int getDPadScancodeState(int)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>
<java.awt.Component: void firePropertyChange(java.lang.String,short,short)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.content.SyncStats: java.lang.String toString()>
<android.widget.TextView: float getTextSize()>
<android.view.View: void <init>(android.content.Context)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.lang.String[] getAllFamilies()>
<java.awt.im.spi.InputMethod: void endComposition()>
<android.pim.ICalendar.Parameter: void toString(java.lang.StringBuilder)>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>
<java.awt.geom.RoundRectangle2D.Float: double getHeight()>
<javax.imageio.stream.FileImageInputStream: long length()>
<android.text.AutoText: int getSize(android.view.View)>
<android.server.BluetoothA2dpService: void finalize()>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>
<android.pim.vcard.VCardEntry: android.net.Uri pushIntoContentResolver(android.content.ContentResolver)>
<android.provider.Calendar.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
<com.google.android.mms.util.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>
<android.content.ContentValues: void <init>()>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.location.LocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<java.awt.image.DataBuffer: int getSize()>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>
<com.android.layoutlib.bridge.BridgeContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.ddm.DdmHandleHello: void connected()>
<android.renderscript.SimpleMesh.Builder: void setIndexType(android.renderscript.Type)>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>
<org.apache.harmony.awt.wtk.NativeWindow: void setBounds(int,int,int,int,int)>
<android.preference.DialogPreference: void setDialogMessage(int)>
<java.awt.image.BandedSampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.widget.LinearLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<java.awt.Component: java.awt.Dimension getSize(java.awt.Dimension)>
<com.android.layoutlib.bridge.NinePatchDrawable: int getMinimumHeight()>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(byte[])>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<android.view.ViewStub: void setVisibility(int)>
<com.google.android.mms.util.AbstractCache: void purgeAll()>
<android.view.Menu: int size()>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>
<com.android.layoutlib.bridge.BridgeTypedArray: java.lang.CharSequence[] getTextArray(int)>
<android.server.BluetoothService.BondState: void clearPinAttempts(java.lang.String)>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints.Key)>
<com.android.server.VibratorService: void vibratePattern(long[],int,android.os.IBinder)>
<javax.imageio.ImageReader: int getWidth(int)>
<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<javax.imageio.stream.MemoryCacheImageInputStream: void <init>(java.io.InputStream)>
<android.bluetooth.BluetoothDevice: int getBondState()>
<com.android.server.DevicePolicyManagerService: void <init>(android.content.Context)>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<java.awt.geom.CubicCurve2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Bundle: void <init>()>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>
<android.database.Cursor: boolean requery()>
<android.provider.Calendar.EventDays: android.database.Cursor query(android.content.ContentResolver,int,int)>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>
<android.content.Intent.ShortcutIconResource: java.lang.String toString()>
<java.awt.event.InputEvent: boolean isShiftDown()>
<javax.imageio.stream.MemoryCacheImageInputStream: boolean isCachedMemory()>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()>
<android.os.Parcel: void readIntArray(int[])>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>
<android.widget.SlidingDrawer: void lock()>
<android.view.ViewTreeObserver: boolean isAlive()>
<java.awt.Component: void addHierarchyListener(java.awt.event.HierarchyListener)>
<com.android.server.am.ActivityManagerService: void moveTaskToFront(int)>
<org.apache.harmony.awt.gl.XORComposite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<android.database.CursorWrapper: int getCount()>
<java.awt.image.ColorConvertOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,float[],int)>
<android.view.ViewGroup: void removeViewAt(int)>
<android.graphics.LayerRasterizer: void <init>()>
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Shape getOutline()>
<java.awt.geom.Arc2D: java.awt.geom.Rectangle2D getBounds2D()>
<java.awt.image.DirectColorModel: int getRedMask()>
<android.pim.vcard.VCardEntry.PostalData: boolean equals(java.lang.Object)>
<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()>
<android.view.animation.Animation: void restrictDuration(long)>
<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(char[],int,int,java.awt.Graphics)>
<java.awt.AWTKeyStroke: java.lang.Object readResolve()>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>
<android.text.Layout: int getOffsetForHorizontal(int,float)>
<android.content.ContentQueryMap: void setKeepUpdated(boolean)>
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>
<javax.imageio.metadata.IIOInvalidTreeException: void <init>(java.lang.String,java.lang.Throwable,org.w3c.dom.Node)>
<android.provider.SyncStateContract.Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<org.apache.harmony.awt.gl.image.BufferedImageSource: boolean isConsumer(java.awt.image.ImageConsumer)>
<java.awt.event.MouseWheelEvent: int getUnitsToScroll()>
<android.graphics.YuvImage: byte[] getYuvData()>
<android.view.MotionEvent: long getDownTime()>
<java.awt.image.DataBufferDouble: void setElemDouble(int,double)>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>
<com.google.android.util.SmileyParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>
<android.graphics.Path: void reset()>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>
<android.widget.TextView: boolean bringPointIntoView(int)>
<android.graphics.YuvImage: int getWidth()>
<java.awt.geom.PathIterator: int getWindingRule()>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>
<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)>
<java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>
<android.text.Editable: void clear()>
<com.android.server.NetStatService: long getTotalTxPackets()>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<android.view.inputmethod.InputMethodInfo: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,int[],int)>
<java.awt.font.MultipleMaster: float[] getDesignAxisDefaults()>
<android.media.AudioManager: int getStreamVolume(int)>
<android.graphics.Camera: void finalize()>
<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<java.awt.Rectangle: java.awt.Rectangle getBounds()>
<javax.imageio.ImageReader: java.awt.Rectangle getSourceRegion(javax.imageio.ImageReadParam,int,int)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,int[],int)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.os.Debug: void startMethodTracing(java.lang.String)>
<android.content.Context: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.app.Dialog: void onWindowFocusChanged(boolean)>
<java.awt.geom.CubicCurve2D: boolean intersects(java.awt.geom.Rectangle2D)>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<android.net.Uri: java.lang.String getLastPathSegment()>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>
<android.os.BatteryStats.Uid: long getWifiMulticastTime(long,int)>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<com.android.film.Film: void onResume()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>
<android.view.View: void dispatchDisplayHint(int)>
<com.google.android.util.AbstractMessageParser.Token: com.google.android.util.AbstractMessageParser.Token.Type getType()>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.app.SearchableInfo: int getInputType()>
<android.graphics.RectF: void set(android.graphics.RectF)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,int[],int)>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>
<javax.microedition.khronos.opengles.GL11: boolean glIsEnabled(int)>
<android.database.sqlite.SQLiteProgram: void native_finalize()>
<android.graphics.Region: android.graphics.Rect getBounds()>
<android.graphics.drawable.RotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.graphics.RectF: void union(float,float,float,float)>
<android.widget.TextView: int getCurrentHintTextColor()>
<com.google.android.util.AbstractMessageParser.Video: boolean isHtml()>
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo)>
<android.view.Window: void setFeatureDrawableResource(int,int)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<android.webkit.WebView: float getScale()>
<android.database.CursorWrapper: boolean moveToNext()>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>
<android.graphics.Matrix: boolean preScale(float,float)>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>
<java.awt.geom.RoundRectangle2D.Double: boolean isEmpty()>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>
<com.android.layoutlib.bridge.Bridge: int getApiLevel()>
<javax.imageio.ImageReader: void addIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)>
<javax.imageio.stream.ImageInputStreamImpl: int skipBytes(int)>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<java.awt.image.ImageFilter: java.awt.image.ImageFilter getFilterInstance(java.awt.image.ImageConsumer)>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glClearDepthf(float)>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void startProduction(java.awt.image.ImageConsumer)>
<android.view.View: void setSelected(boolean)>
<java.awt.Composite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>
<android.text.style.TabStopSpan.Standard: void <init>(int)>
<com.google.android.mms.util.AbstractCache: void <init>()>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>
<android.content.ContentProviderResult: void <init>(int)>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.content.SharedPreferences: boolean contains(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>
<android.widget.VideoView: void pause()>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<java.awt.geom.Arc2D.Float: void <init>()>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>
<android.os.Bundle: boolean hasFileDescriptors()>
<android.webkit.WebView.HitTestResult: int getType()>
<android.location.LocationManager: java.util.List getAllProviders()>
<java.awt.Image: java.awt.ImageCapabilities getCapabilities(java.awt.GraphicsConfiguration)>
<org.apache.harmony.awt.ClipRegion: org.apache.harmony.awt.gl.MultiRectArea getClip()>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>
<java.awt.geom.CubicCurve2D: double getX1()>
<com.android.common.ArrayListCursor: double getDouble(int)>
<java.awt.image.DataBufferDouble: float getElemFloat(int)>
<android.location.Location: void setAccuracy(float)>
<org.apache.harmony.awt.gl.font.FontProperty: boolean isCharExcluded(char)>
<android.database.CursorWindow: int getInt(int,int)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<com.android.server.status.ExpandedView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebView: void clearFormData()>
<java.awt.image.ComponentColorModel: int getRed(java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glBlendEquation(int)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<java.awt.EventQueue: java.awt.AWTEvent peekEvent()>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenContentInsetsLw()>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<com.google.android.util.AbstractMessageParser.TrieNode: void <init>(java.lang.String)>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>
<java.awt.image.BufferedImage: java.awt.image.BufferedImage getSubimage(int,int,int,int)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.opengles.GL getGL()>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>
<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<java.awt.Component: boolean isForegroundSet()>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Package)>
<android.database.CursorWindow: boolean isNull(int,int)>
<android.pim.vcard.VCardConfig: boolean needsToConvertPhoneticString(int)>
<android.graphics.Typeface: int getStyle()>
<android.media.AudioTrack: int getPositionNotificationPeriod()>
<java.awt.image.LookupOp: java.awt.RenderingHints getRenderingHints()>
<android.widget.AbsListView: int computeVerticalScrollOffset()>
<android.speech.RecognitionListener: void onRmsChanged(float)>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>
<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>
<org.apache.harmony.awt.gl.image.ByteArrayDecodingImageSource: void <init>(byte[],int,int)>
<java.awt.image.SampleModel: int getTransferType()>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<java.awt.image.ComponentColorModel: float[] getNormalizedComponents(int[],int,float[],int)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>
<java.awt.ComponentBehavior: void setVisible(boolean)>
<android.webkit.CacheManager.CacheResult: java.io.OutputStream getOutputStream()>
<android.os.PowerManager.WakeLock: void release()>
<java.awt.geom.Ellipse2D.Float: double getWidth()>
<com.android.server.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
<android.pim.RecurrenceSet: void <init>(android.content.ContentValues)>
<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>
<android.view.View: void setSoundEffectsEnabled(boolean)>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.pim.vcard.VCardEntry.PhoneData: boolean equals(java.lang.Object)>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.media.AudioTrack: int write(short[],int,int)>
<java.awt.image.IndexColorModel: int[] getComponents(java.lang.Object,int[],int)>
<android.graphics.Canvas: void <init>(int,int,com.android.layoutlib.api.ILayoutLog)>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<java.awt.geom.AffineTransform: void shear(double,double)>
<javax.imageio.ImageReader: boolean isRandomAccessEasy(int)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<java.awt.DisplayMode: boolean equals(java.awt.DisplayMode)>
<android.media.FaceDetector.Face: float confidence()>
<android.widget.HeaderViewListAdapter: int getCount()>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>
<org.apache.harmony.awt.gl.font.TextMetricsCalculator: org.apache.harmony.awt.gl.font.BasicMetrics createMetrics()>
<java.awt.font.TextLayout: java.awt.Shape[] getCaretShapes(int,java.awt.geom.Rectangle2D,java.awt.font.TextLayout.CaretPolicy)>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.image.DataBuffer: float getElemFloat(int,int)>
<com.android.server.ThrottleService: long getCliffThreshold(java.lang.String,int)>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>
<android.net.DhcpInfo: java.lang.String toString()>
<javax.imageio.ImageReader: java.awt.image.BufferedImage getDestination(javax.imageio.ImageReadParam,java.util.Iterator,int,int)>
<com.google.android.gles_jni.GLImpl: void glEnable(int)>
<android.app.ProgressDialog: void setMax(int)>
<android.graphics.Path: void transform(android.graphics.Matrix)>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>
<android.provider.Calendar.CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>
<android.net.LocalSocket: boolean isClosed()>
<com.android.server.am.BatteryStatsService: void shutdown()>
<android.telephony.SmsMessage: int getStatusOnSim()>
<com.android.server.am.ActivityManagerService: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)>
<java.awt.font.LineMetrics: float getAscent()>
<android.widget.Toast: float getVerticalMargin()>
<com.android.server.am.ActivityManagerService: void installSystemProviders()>
<android.server.BluetoothA2dpService: android.bluetooth.BluetoothDevice[] getConnectedSinks()>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<android.hardware.Camera.Parameters: void setGpsLatitude(double)>
<android.os.UEventObserver.UEvent: java.lang.String toString()>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>
<android.webkit.WebView: boolean performLongClick()>
<android.bluetooth.BluetoothDevice: java.lang.String toString()>
<android.webkit.CacheManager.CacheResult: java.lang.String getLastModified()>
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.os.Bundle: boolean containsKey(java.lang.String)>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>
<org.apache.harmony.awt.gl.image.PNGData: long getHeight()>
<android.view.Surface: void setTransparentRegionHint(android.graphics.Region)>
<android.text.format.Time: java.lang.String format(java.lang.String)>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>
<android.content.Intent: java.util.Set getCategories()>
<android.graphics.drawable.InsetDrawable: void setAlpha(int)>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>
<com.google.android.mms.pdu.SendReq: void setReadReport(int)>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>
<android.graphics.Path: boolean isInverseFillType()>
<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>
<android.text.method.TextKeyListener: void clear(android.text.Editable)>
<java.awt.RenderingHints: java.util.Set entrySet()>
<javax.imageio.ImageWriteParam: void setTiling(int,int,int,int)>
<android.content.SyncAdapterType: void <init>(android.os.Parcel)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>
<com.google.android.mms.pdu.RetrieveConf: void setContentType(byte[])>
<android.graphics.drawable.Drawable: void invalidateSelf()>
<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>
<java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getFontType()>
<java.awt.geom.Arc2D.Double: void <init>(int)>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhotoURL(java.lang.String,java.lang.String)>
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
<android.net.TrafficStats: long getMobileTxBytes()>
<com.google.android.util.AbstractMessageParser.Photo: boolean isHtml()>
<android.location.Address: java.lang.String getAddressLine(int)>
<android.widget.ListView: int getDividerHeight()>
<android.graphics.Paint: boolean isFakeBoldText()>
<android.app.ActivityThread.PackageInfo: android.content.res.Resources getResources(android.app.ActivityThread)>
<com.google.android.mms.util.PduCache: void purgeAll()>
<android.view.Window: void closeAllPanels()>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>
<android.app.ActivityManagerProxy: void resumeAppSwitches()>
<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>
<android.opengl.GLES10: void glPushMatrix()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getAttributeDescription(java.lang.String,java.lang.String,java.util.Locale)>
<android.database.CursorWrapper: int getColumnCount()>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>
<android.text.style.BulletSpan: void <init>()>
<android.webkit.WebView: boolean pageDown(boolean)>
<android.content.IntentSender: boolean equals(java.lang.Object)>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>
<org.apache.harmony.awt.gl.font.FontManager: void <init>()>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.String getLogicalFaceFromFont(int,int)>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>
<javax.imageio.ImageWriter: boolean canWriteRasters()>
<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue getSubject()>
<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.view.View.MeasureSpec: java.lang.String toString(int)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.widget.TextView: void setMaxHeight(int)>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void addVertex(float,float,float)>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,)>
<android.graphics.BitmapFactory.Options: void <init>()>
<android.util.EventLog.Event: java.lang.Object getData()>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>
<android.os.Parcel: void writeByteArray(byte[])>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>
<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>
<android.view.WindowManagerPolicy.WindowState: boolean fillsScreenLw(int,int,boolean,boolean)>
<android.opengl.GLES20: boolean glIsProgram(int)>
<javax.imageio.stream.ImageInputStream: void readBytes(javax.imageio.stream.IIOByteBuffer,int)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterParam: void <init>()>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>
<android.content.IntentFilter: void addCategory(java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: void removeAttribute(java.lang.String)>
<java.awt.AWTKeyStroke: int hashCode()>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>
<com.google.android.mms.pdu.NotifyRespInd: void setReportAllowed(int)>
<java.awt.image.ComponentSampleModel: void setSample(int,int,int,int,java.awt.image.DataBuffer)>
<android.security.Md5MessageDigest: void <init>()>
<java.awt.image.IndexColorModel: java.lang.Object getDataElements(int[],int,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glScalex(int,int,int)>
<android.media.SoundPool: boolean unload(int)>
<com.google.android.gles_jni.GLImpl: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.renderable.RenderableImageOp: java.lang.Object getProperty(java.lang.String)>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>
<android.renderscript.Script.Builder: void setType(android.renderscript.Type,int)>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>
<android.widget.FilterQueryProvider: android.database.Cursor runQuery(java.lang.CharSequence)>
<java.awt.Component: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<android.os.TokenWatcher: void released()>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.wtk.NativeWindow: java.awt.Point getScreenPos()>
<android.pim.vcard.VCardEntryHandler: void onEnd()>
<android.graphics.drawable.Animatable: boolean isRunning()>
<com.android.layoutlib.bridge.BridgeTypedArray: int getInt(int,int)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendRelation(java.util.List)>
<java.awt.Component: void setComponentOrientation(java.awt.ComponentOrientation)>
<android.provider.Contacts.People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String)>
<org.apache.harmony.x.imageio.spi.FileIISSpi: javax.imageio.stream.ImageInputStream createInputStreamInstance(java.lang.Object,boolean,java.io.File)>
<java.awt.image.SampleModel: void setPixels(int,int,int,int,float[],java.awt.image.DataBuffer)>
<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>
<android.pim.vcard.VCardParser_V30: boolean readBeginVCard(boolean)>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] getFrom16lRGBtosRGB_LUT()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void shear(double,double)>
<android.os.BatteryStats.Uid.Proc: long getSystemTime(int)>
<java.awt.geom.Line2D: java.lang.Object clone()>
<com.android.layoutlib.bridge.BridgeTypedArray: float getFraction(int,int,int,float)>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>
<org.apache.harmony.awt.gl.image.ImageDecoder: void closeStream()>
<java.awt.im.InputContext: void <init>()>
<com.android.server.am.BatteryStatsService: void noteWifiStopped()>
<android.speech.RecognitionService: void onDestroy()>
<java.beans.PropertyEditorSupport: java.lang.Object getSource()>
<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>
<android.opengl.GLES20: void glDepthFunc(int)>
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createPacked(java.awt.color.ColorSpace,int,int,int,int,int,boolean)>
<com.google.android.gles_jni.GLImpl: boolean glIsEnabled(int)>
<android.database.CursorWindow: int describeContents()>
<android.content.BroadcastReceiver: void abortBroadcast()>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<java.awt.Toolkit: java.awt.Image createImage(byte[],int,int)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String searchAttr(int)>
<javax.imageio.spi.IIORegistry: void registerApplicationClasspathSpis()>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.GraphicsFactory getGraphicsFactory()>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<com.google.android.mms.pdu.PduParser: boolean isText(int)>
<com.android.layoutlib.bridge.BridgeTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<android.location.LocationListener: void onLocationChanged(android.location.Location)>
<android.net.Downloads.ByUri: int getProgressColumnId()>
<java.awt.image.BufferedImageFilter: void setDimensions(int,int)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardTransparencyNode()>
<android.widget.TimePicker: java.lang.Integer getCurrentHour()>
<android.util.SparseBooleanArray: int indexOfKey(int)>
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.provider.Contacts.People: void markAsContacted(android.content.ContentResolver,long)>
<java.awt.Graphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>
<android.location.Location: android.os.Bundle getExtras()>
<com.android.server.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName)>
<java.awt.event.WindowEvent: int getOldState()>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<java.awt.event.InputEvent: boolean isMetaDown()>
<android.widget.MediaController: boolean isShowing()>
<android.text.BoringLayout: int getEllipsizedWidth()>
<android.os.ResultReceiver: int describeContents()>
<org.apache.harmony.awt.ContextStorage: void setWTK(org.apache.harmony.awt.wtk.WTK)>
<java.awt.geom.RectangularShape: double getHeight()>
<java.awt.geom.GeneralPath: void transform(java.awt.geom.AffineTransform)>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph[] getGlyphs(java.lang.String)>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<java.awt.image.DataBufferShort: void <init>(short[],int)>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>
<java.awt.Graphics: void fill3DRect(int,int,int,int,boolean)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>
<java.awt.image.VolatileImage: int validate(java.awt.GraphicsConfiguration)>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.provider.Settings.System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>
<android.hardware.Camera: void stopSmoothZoom()>
<java.awt.image.DataBufferUShort: int getElem(int)>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>
<java.awt.Font: java.awt.Font getFont(java.util.Map)>
<com.android.providers.settings.SettingsBackupAgent: void onCreate()>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>
<android.text.style.QuoteSpan: int getSpanTypeId()>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
<android.widget.TabWidget: void setCurrentTab(int)>
<java.awt.event.ComponentListener: void componentHidden(java.awt.event.ComponentEvent)>
<java.awt.geom.CubicCurve2D.Float: double getX1()>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>
<android.graphics.Bitmap: int getPixel(int,int)>
<android.app.LocalActivityManager: void dispatchPause(boolean)>
<javax.imageio.stream.IIOByteBuffer: void <init>(byte[],int,int)>
<java.awt.geom.RoundRectangle2D.Float: double getWidth()>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<javax.microedition.khronos.egl.EGL10: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.database.sqlite.SQLiteQuery: void bindNull(int)>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>
<com.google.android.mms.pdu.AcknowledgeInd: void setTransactionId(byte[])>
<android.media.MediaPlayer: void prepare()>
<android.graphics.BitmapFactory.Options: void <init>()>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.image.ColorModel getColorModel()>
<com.google.android.mms.pdu.SendReq: void setMessageSize(long)>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>
<android.text.format.Time: java.lang.String format3339(boolean)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: java.lang.Object getViewKey()>
<android.media.MediaPlayer: void pause()>
<android.view.ViewGroup: void removeViews(int,int)>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>
<java.awt.image.SampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<org.apache.harmony.awt.wtk.ShutdownThread: void shutdown()>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataController getDefaultController()>
<android.pim.vcard.VCardParser_V30: java.lang.String getBase64(java.lang.String)>
<android.content.pm.PackageManager.NameNotFoundException: void <init>(java.lang.String)>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.view.View: int[] mergeDrawableStates(int[],int[])>
<android.view.View: java.lang.Object getTag()>
<java.awt.image.ColorModel: void <init>(int,int[],java.awt.color.ColorSpace,boolean,boolean,int,int)>
<android.view.ViewGroup: void addView(android.view.View,int,int)>
<android.text.format.Time: java.lang.String toString()>
<com.android.layoutlib.bridge.BridgeContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>
<com.google.android.mms.pdu.PduHeaders: int getOctet(int)>
<android.view.View: void setContentDescription(java.lang.CharSequence)>
<java.awt.image.ColorConvertOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<android.widget.AbsListView: void invalidateViews()>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: void <init>(javax.imageio.spi.ImageWriterSpi)>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>
<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>
<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>
<java.awt.geom.Arc2D.Float: boolean isEmpty()>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>
<java.awt.font.LineMetrics: float getLeading()>
<org.apache.harmony.awt.gl.color.ICC_ProfileHelper: int getBigEndianFromByteArray(byte[],int)>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,int)>
<java.awt.Component: void setLocale(java.util.Locale)>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<android.util.FloatMath: float sqrt(float)>
<android.graphics.Paint: boolean isAntiAlias()>
<android.net.NetworkInfo: boolean isFailover()>
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>
<android.text.Editable: android.text.InputFilter[] getFilters()>
<android.os.ServiceManagerProxy: java.lang.String[] listServices()>
<java.awt.image.SampleModel: void setPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<javax.microedition.khronos.opengles.GL10: void glLightf(int,int,float)>
<android.speech.srec.Recognizer.Grammar: void addWordToSlot(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<android.text.Layout: int getOffsetToLeftOf(int)>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>
<java.awt.BasicStroke: void <init>()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>
<org.apache.harmony.awt.gl.font.Glyph: int getPointWidth()>
<java.awt.image.DataBufferFloat: float getElemFloat(int)>
<com.android.common.ArrayListCursor: boolean isNull(int)>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<javax.imageio.metadata.IIOMetadataFormatImpl: javax.imageio.metadata.IIOMetadataFormat getStandardFormatInstance()>
<java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<android.inputmethodservice.KeyboardView: void invalidateKey(int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitTypeVariable(java.lang.String)>
<android.content.ContentProviderProxy: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>
<android.view.View: void onScrollChanged(int,int,int,int)>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.NinePatch: int getWidth()>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.app.ActivityManager.RecentTaskInfo: void <init>()>
<java.awt.geom.Line2D.Double: java.awt.geom.Point2D getP1()>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.view.MotionEvent: int getEdgeFlags()>
<android.widget.ListView: void setCacheColorHint(int)>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>
<com.google.android.mms.util.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
<java.awt.FontMetrics: int getMaxAdvance()>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>
<android.widget.ListView: void onMeasure(int,int)>
<android.widget.ScrollView: void addView(android.view.View)>
<android.view.View: void setMeasuredDimension(int,int)>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionInfo)>
<android.content.SyncAdapterType: int describeContents()>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String,long)>
<javax.imageio.metadata.IIOMetadataFormatImpl: boolean canNodeAppear(java.lang.String,javax.imageio.ImageTypeSpecifier)>
<java.awt.geom.RectangularShape: void setFrame(java.awt.geom.Rectangle2D)>
<java.awt.geom.QuadCurve2D.Float: void setCurve(double,double,double,double,double,double)>
<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.content.OperationApplicationException: void <init>(java.lang.String)>
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>
<java.awt.geom.QuadCurve2D: double getY1()>
<java.awt.Component: void enableEvents(long)>
<android.text.method.ArrowKeyMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<android.pim.vcard.VCardParser_V21: void readEndVCard(boolean,boolean)>
<android.content.ContentQueryMap: void finalize()>
<java.awt.image.ImageProducer: void startProduction(java.awt.image.ImageConsumer)>
<java.awt.image.renderable.RenderableImageOp: boolean isDynamic()>
<android.view.MotionEvent: void offsetLocation(float,float)>
<java.awt.font.TextLayout: java.awt.Shape getLogicalHighlightShape(int,int)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>
<android.util.FloatMath: float cos(float)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>
<android.widget.ViewAnimator: void showNext()>
<android.database.AbstractWindowedCursor: long getLong(int)>
<android.preference.RingtonePreference: void setShowSilent(boolean)>
<java.awt.Component: void removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>
<android.app.Service: void stopSelf(int)>
<android.pim.vcard.exception.VCardAgentNotSupportedException: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumOutputChannels()>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>
<java.awt.Rectangle: boolean contains(java.awt.Point)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getTagName()>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>
<java.awt.Toolkit: void <init>()>
<android.drm.mobile1.DrmRightsManager: void deleteRights(android.drm.mobile1.DrmRights)>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>
<android.provider.Contacts.Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
<javax.imageio.event.IIOWriteProgressListener: void imageStarted(javax.imageio.ImageWriter,int)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitEnd()>
<java.awt.event.InputMethodEvent: java.awt.font.TextHitInfo getCaret()>
<android.content.ContentValues: void clear()>
<android.text.method.DigitsKeyListener: int getInputType()>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getFileStreamPath(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)>
<java.awt.geom.Line2D.Double: void setLine(double,double,double,double)>
<android.text.style.ScaleXSpan: int getSpanTypeId()>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>
<android.view.KeyEvent: void startTracking()>
<java.awt.Component: java.awt.AWTEvent coalesceEvents(java.awt.AWTEvent,java.awt.AWTEvent)>
<android.widget.MediaController: void <init>(android.content.Context)>
<java.awt.geom.Rectangle2D.Float: boolean isEmpty()>
<java.awt.image.DataBufferInt: int getElem(int)>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>
<android.util.MonthDisplayHelper: int getMonth()>
<android.text.HtmlToSpannedConverter: void startPrefixMapping(java.lang.String,java.lang.String)>
<android.widget.TextView: int getExtendedPaddingBottom()>
<android.widget.SlidingDrawer: android.view.View getHandle()>
<java.awt.geom.Arc2D: int getArcType()>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void popSegments()>
<java.awt.event.InputEvent: void consume()>
<com.android.server.am.ActivityManagerService: void enterSafeMode()>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.Dimension: boolean equals(java.lang.Object)>
<android.text.AlteredCharSequence: java.lang.CharSequence subSequence(int,int)>
<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>
<android.widget.ImageButton: boolean onSetAlpha(int)>
<android.widget.AbsListView: void onAttachedToWindow()>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.location.Address: void setLongitude(double)>
<javax.microedition.khronos.opengles.GL10: void glDisableClientState(int)>
<java.awt.image.RescaleOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.google.android.util.AbstractMessageParser: java.util.List getParts()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)>
<java.awt.GraphicsDevice: int getType()>
<android.telephony.SmsMessage: boolean isCphsMwiMessage()>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>
<com.google.android.mms.pdu.PduPart: void <init>()>
<android.provider.ContactsContract.CommonDataKinds.Organization: int getTypeLabelResource(int)>
<java.awt.geom.Arc2D: boolean contains(double,double)>
<android.pim.vcard.VCardUtils: boolean isMobilePhoneLabel(java.lang.String)>
<com.android.server.KeyInputQueue: int getKeycodeState(int,int)>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>
<java.beans.PropertyEditor: void setAsText(java.lang.String)>
<android.database.MergeCursor: double getDouble(int)>
<com.android.tools.layoutlib.create.MethodListener: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<android.provider.ContactsContract.StatusUpdates: int getPresencePrecedence(int)>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>
<java.awt.Component: boolean isPreferredSizeSet()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void insertChar(java.text.AttributedCharacterIterator,int)>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbumURL(java.lang.String,java.lang.String)>
<android.view.ViewStub: void draw(android.graphics.Canvas)>
<org.apache.harmony.awt.gl.Surface: void invalidate()>
<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.awt.Font[] getAllFonts()>
<javax.imageio.stream.ImageInputStreamImpl: void readBytes(javax.imageio.stream.IIOByteBuffer,int)>
<com.android.layoutlib.bridge.BridgeContext: void revokeUriPermission(android.net.Uri,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>
<com.google.android.gles_jni.EGLImpl: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.server.BluetoothService.BondState: void setBondState(java.lang.String,int)>
<java.awt.image.BufferedImage: java.awt.image.SampleModel getSampleModel()>
<android.content.Intent: void <init>()>
<android.net.LocalSocketAddress: java.lang.String getName()>
<android.hardware.Camera.Parameters: void setPreviewSize(int,int)>
<javax.imageio.ImageIO: void scanForPlugins()>
<android.pim.vcard.VCardParser_V30: void handleAgent(java.lang.String)>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>
<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<android.graphics.Typeface: java.util.List getFonts()>
<java.awt.Font: java.text.AttributedCharacterIterator.Attribute[] getAvailableAttributes()>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,int[],int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<java.awt.geom.Point2D: double getY()>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>(java.lang.String)>
<android.text.method.NumberKeyListener: boolean ok(char[],char)>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>
<android.pim.vcard.VCardParser_V21: void <init>()>
<org.apache.harmony.awt.gl.font.TextMetricsCalculator: void correctAdvance(org.apache.harmony.awt.gl.font.BasicMetrics)>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>
<android.graphics.Path: void <init>(android.graphics.Path)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>
<android.content.pm.PackageManager: boolean isSafeMode()>
<android.os.Parcel: void readByteArray(byte[])>
<com.android.tools.layoutlib.create.AsmAnalyzer: void <init>(com.android.tools.layoutlib.create.Log,java.util.List,com.android.tools.layoutlib.create.AsmGenerator,java.lang.String[],java.lang.String[])>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getNativeImageMetadataFormatName()>
<org.apache.harmony.awt.gl.image.JpegDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>
<android.hardware.Camera.Parameters: void unflatten(java.lang.String)>
<org.apache.harmony.awt.gl.ImageSurface: void unlock()>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>
<com.google.android.mms.MmsException: void <init>(java.lang.String,java.lang.Throwable)>
<android.content.IntentFilter.AuthorityEntry: int match(android.net.Uri)>
<android.net.SSLSessionCache: void <init>(android.content.Context)>
<javax.imageio.ImageWriteParam: boolean canWriteTiles()>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>
<android.hardware.Camera.Parameters: int getMinExposureCompensation()>
<java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder,android.content.res.Configuration)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributeType(int)>
<android.view.View: boolean awakenScrollBars(int)>
<android.content.res.ColorStateList: java.lang.String toString()>
<android.widget.ExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<java.awt.geom.Area: boolean contains(java.awt.geom.Rectangle2D)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void clearRect(int,int,int,int)>
<android.graphics.drawable.ClipDrawable: boolean onStateChange(int[])>
<javax.imageio.metadata.IIOMetadataNode: void <init>(java.lang.String)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>
<java.awt.color.ProfileDataException: void <init>(java.lang.String)>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>
<android.view.SurfaceView: void onAttachedToWindow()>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>
<org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.peer.FontPeer getFontPeer(java.awt.Font)>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterface()>
<java.awt.geom.GeneralPath: void <init>(int)>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.DevicePolicyManagerService: java.util.List getActiveAdmins()>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>
<android.widget.AbsListView: boolean isStackFromBottom()>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>
<java.awt.Shape: boolean contains(double,double)>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>
<com.google.android.gles_jni.GLImpl: void glLoadIdentity()>
<java.awt.font.TextLayout: byte getBaseline()>
<java.awt.Graphics: java.awt.Font getFont()>
<android.view.Window: android.content.Context getContext()>
<android.content.ContentProviderResult: int describeContents()>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<android.os.Debug: void enableEmulatorTraceOutput()>
<java.awt.Graphics: void fillPolygon(java.awt.Polygon)>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getSubject()>
<java.awt.Graphics: void setPaintMode()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<javax.imageio.ImageWriter: void processImageProgress(float)>
<android.widget.Toast: int getDuration()>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
<java.awt.im.spi.InputMethodDescriptor: boolean hasDynamicLocaleList()>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.graphics.Picture: void <init>()>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>
<android.view.ViewGroup: void onAnimationStart()>
<android.text.util.Rfc822Token: boolean equals(java.lang.Object)>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.net.TrafficStats: long getMobileRxBytes()>
<android.view.View: void sendAccessibilityEvent(int)>
<android.preference.ListPreference: void setEntries(int)>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>
<android.pim.ICalendar.Property: void toString(java.lang.StringBuilder)>
<javax.imageio.stream.ImageInputStreamImpl: double readDouble()>
<android.content.ContentProvider: void <init>()>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>
<java.awt.geom.Rectangle2D.Float: double getHeight()>
<java.awt.image.SampleModel: float[] getPixel(int,int,float[],java.awt.image.DataBuffer)>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getLeading()>
<org.apache.harmony.awt.gl.font.Glyph: int[] getABC()>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>
<javax.imageio.spi.ServiceRegistry: void deregisterServiceProvider(java.lang.Object)>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>
<android.content.pm.ProviderInfo: int describeContents()>
<java.awt.image.Raster: int[] getSamples(int,int,int,int,int,int[])>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>
<android.app.Activity: void setProgress(int)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.graphics.Path: void rMoveTo(float,float)>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>
<android.os.Parcel: byte readByte()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<android.view.MotionEvent: float getRawX()>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>
<java.awt.geom.Point2D.Float: void setLocation(float,float)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardChromaNode()>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.speech.RecognitionListener: void onEndOfSpeech()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphMetrics()>
<android.app.Dialog: void setVolumeControlStream(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
<com.google.android.util.AbstractMessageParser.Html: void <init>(java.lang.String,java.lang.String)>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.webkit.WebChromeClient: boolean onJsTimeout()>
<android.view.animation.Animation: void reset()>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<java.awt.image.ComponentSampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>
<java.awt.geom.Arc2D.Double: double getY()>
<org.apache.harmony.x.imageio.spi.InputStreamIISSpi: java.lang.String getDescription(java.util.Locale)>
<org.apache.harmony.awt.gl.Surface: org.apache.harmony.awt.gl.Surface getImageSurface(java.awt.Image)>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
<org.apache.harmony.awt.wtk.NativeEvent: int getWindowState()>
<android.widget.AutoCompleteTextView: void setListSelection(int)>
<java.awt.RenderingHints.Key: int hashCode()>
<javax.imageio.stream.FileCacheImageOutputStream: void seek(long)>
<android.view.View: boolean performClick()>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>
<javax.imageio.stream.ImageInputStream: boolean readBoolean()>
<android.text.style.QuoteSpan: void <init>()>
<java.awt.geom.Ellipse2D.Float: double getX()>
<com.android.server.status.LatestItemView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.google.android.mms.pdu.DeliveryInd: int getStatus()>
<java.awt.Point: java.awt.Point getLocation()>
<android.location.Location: double getLongitude()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>
<com.google.android.util.AbstractMessageParser.Photo: boolean isMedia()>
<android.graphics.Paint: void setStrikeThruText(boolean)>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>
<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>
<android.graphics.Matrix: boolean equals(java.lang.Object)>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>
<javax.microedition.khronos.opengles.GL10: void glCullFace(int)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(android.os.Parcel)>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.content.IntentSender: int describeContents()>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>
<android.content.ContextWrapper: void clearWallpaper()>
<android.widget.ListView: int getCheckedItemPosition()>
<android.content.Context: java.lang.String[] fileList()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<java.awt.Component: void removeNotify()>
<android.widget.Spinner: void onDetachedFromWindow()>
<org.apache.harmony.awt.gl.Crossing.CubicCurve: void <init>(double,double,double,double,double,double,double,double)>
<java.awt.Rectangle: java.awt.geom.Rectangle2D getBounds2D()>
<android.media.AudioManager: void stopBluetoothSco()>
<android.opengl.GLES10: void glPixelStorei(int,int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: boolean hasUniformLineMetrics()>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
<javax.imageio.spi.ImageReaderWriterSpi: void <init>()>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.view.animation.Animation: void setFillBefore(boolean)>
<com.android.server.am.BatteryStatsService: void recordCurrentLevel(int)>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>
<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>
<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<java.awt.HeadlessToolkit: int getScreenResolution()>
<android.graphics.Paint: void finalizer(int)>
<com.google.android.mms.ContentType: boolean isDrmType(java.lang.String)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.ClassLoader getClassLoader()>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.text.SpannableStringBuilder: void clearSpans()>
<android.pim.vcard.VCardParser_V21: void handleAgent(java.lang.String)>
<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>
<android.view.MenuItem: char getAlphabeticShortcut()>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.text.TextPaint: void set(android.text.TextPaint)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquired(int)>
<java.awt.image.BufferedImage: void releaseWritableTile(int,int)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<android.text.Layout: void increaseWidthTo(int)>
<android.view.View: int getPaddingRight()>
<java.awt.geom.QuadCurve2D.Double: double getX1()>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>
<java.awt.image.DataBufferInt: void setElem(int,int,int)>
<java.awt.ActiveEvent: void dispatch()>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String getRawText()>
<javax.imageio.IIOParam: javax.imageio.IIOParamController getDefaultController()>
<android.media.MediaPlayer: boolean isPlaying()>
<com.android.server.KeyInputQueue.HapticFeedbackCallback: void virtualKeyFeedback(android.view.KeyEvent)>
<android.pim.vcard.exception.VCardInvalidLineException: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,int[],int)>
<java.awt.image.renderable.RenderableImageOp: float getWidth()>
<android.location.Address: void setUrl(java.lang.String)>
<java.awt.geom.Ellipse2D.Double: double getX()>
<com.google.android.mms.ContentType: boolean isUnspecified(java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<com.android.server.ProcessStats: void update()>
<android.widget.AnalogClock: void <init>(android.content.Context)>
<android.view.KeyEvent: char getNumber()>
<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>
<android.media.AudioTrack: float getMinVolume()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>
<java.awt.event.InputMethodEvent: boolean isConsumed()>
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>
<java.beans.PropertyEditor: java.lang.String[] getTags()>
<android.graphics.BitmapShader: android.graphics.Bitmap getBitmap()>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<android.view.View: boolean showContextMenu()>
<java.awt.Dimension: void setSize(java.awt.Dimension)>
<android.graphics.NinePatch: boolean hasAlpha()>
<javax.imageio.stream.ImageInputStreamImpl: boolean isCached()>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.drm.mobile1.DrmException: void <init>(java.lang.String)>
<android.app.backup.RestoreObserver: void restoreFinished(int)>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>
<java.awt.Component: int checkImage(java.awt.Image,java.awt.image.ImageObserver)>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>
<android.location.Criteria: int describeContents()>
<com.android.server.LightsService: com.android.server.LightsService.Light getLight(int)>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setColorModel(java.awt.image.ColorModel)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Shape getClip()>
<java.awt.geom.QuadCurve2D: void setCurve(java.awt.geom.Point2D[],int)>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<javax.imageio.event.IIOWriteWarningListener: void warningOccurred(javax.imageio.ImageWriter,int,java.lang.String)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>
<android.app.ProgressDialog: boolean isIndeterminate()>
<java.awt.image.ColorModel: int getBlue(java.lang.Object)>
<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<org.apache.harmony.awt.gl.font.Glyph: boolean equals(java.lang.Object)>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>
<javax.imageio.stream.ImageInputStream: int read(byte[])>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>
<android.widget.TextView: int getTotalPaddingBottom()>
<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<java.awt.event.InputMethodEvent: int getCommittedCharacterCount()>
<java.awt.font.TextLayout: float[] getBaselineOffsets()>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<java.awt.image.PixelGrabber: boolean grabPixels(long)>
<android.speech.tts.TextToSpeech: int setPitch(float)>
<android.pim.vcard.VCardParser_V21: boolean parseItem()>
<org.apache.harmony.awt.wtk.Synchronizer: void storeStateAndFree()>
<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>
<com.google.android.gles_jni.GLImpl: void glScalef(float,float,float)>
<android.widget.Scroller: int getFinalX()>
<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setFontType(int)>
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>
<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>
<org.apache.harmony.awt.gl.Surface: void unlock()>
<android.widget.Gallery: boolean showContextMenu()>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>
<java.awt.ComponentOrientation: boolean isHorizontal()>
<java.awt.RenderingHints: int hashCode()>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>
<android.view.View: void layout(int,int,int,int)>
<android.graphics.Canvas: void rotate(float)>
<android.telephony.gsm.SmsMessage: boolean isStatusReportMessage()>
<android.text.Layout: float getLineLeft(int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeRight()>
<com.google.android.maps.MapView: void setSatellite(boolean)>
<com.android.film.Film: void onPause()>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>
<android.widget.RemoteViews: void setViewVisibility(int,int)>
<android.pim.vcard.VCardParser_V30: boolean isValidEncoding(java.lang.String)>
<java.awt.event.KeyEvent: void <init>(java.awt.Component,int,long,int,int,char)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>
<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void removeObjectValue(java.lang.String)>
<javax.imageio.IIOParam: int getSubsamplingYOffset()>
<android.app.ApplicationThreadProxy: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo)>
<java.awt.image.renderable.RenderableImage: float getWidth()>
<java.awt.color.ColorSpace: int getNumComponents()>
<android.preference.Preference: boolean persistString(java.lang.String)>
<android.widget.CheckedTextView: void <init>(android.content.Context)>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>
<android.text.style.ScaleXSpan: int describeContents()>
<com.android.server.KeyInputQueue: int nativeGetScancodeState(int)>
<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int)>
<java.awt.im.spi.InputMethod: void setInputMethodContext(java.awt.im.spi.InputMethodContext)>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>
<org.apache.harmony.awt.state.MenuState: org.apache.harmony.awt.state.MenuItemState getItem(int)>
<android.os.storage.StorageManager: void unregisterListener(android.os.storage.StorageEventListener)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: boolean initFontProperties()>
<android.pim.vcard.VCardEntry: java.lang.String getFamilyName()>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>
<com.android.providers.settings.SettingsProvider: boolean onCreate()>
<com.android.server.KeyInputQueue: void setDisplay(android.view.Display)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<javax.imageio.metadata.IIOMetadataNode: void <init>()>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
<java.awt.Component: boolean isFontSet()>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.pim.vcard.VCardInterpreter: void startProperty()>
<java.awt.image.DataBufferDouble: void <init>(int,int)>
<android.content.SyncStorageEngine.DayStats: void <init>(int)>
<javax.imageio.stream.FileCacheImageInputStream: boolean isCachedFile()>
<android.app.ActivityThread.PackageInfo: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>
<android.webkit.WebView: void requestImageRef(android.os.Message)>
<com.android.layoutlib.bridge.NinePatchDrawable: int getIntrinsicHeight()>
<android.app.NotificationManager: void cancel(java.lang.String,int)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,int[],int)>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: void registerActivityWatcher(android.app.IActivityWatcher)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSubscriptSizeX()>
<android.telephony.gsm.SmsMessage.SubmitPdu: java.lang.String toString()>
<android.graphics.Paint: void setFakeBoldText(boolean)>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: void setChildren(com.android.layoutlib.api.ILayoutResult.ILayoutViewInfo[])>
<com.android.server.Watchdog: void reportPss(com.android.server.Watchdog.PssRequestor,java.lang.String,int)>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>
<android.gesture.GestureOverlayView: boolean isGesturing()>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<java.awt.image.RenderedImage: int getTileHeight()>
<android.hardware.Sensor: int getVersion()>
<android.view.OrientationListener: void <init>(android.content.Context)>
<android.os.Debug: boolean waitingForDebugger()>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>
<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<java.awt.Image: void setAccelerationPriority(float)>
<org.apache.harmony.awt.gl.font.FontManager: boolean isFamilyExist(java.lang.String)>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<android.util.StringBuilderPrinter: void println(java.lang.String)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>
<android.telephony.ServiceState: int getState()>
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,java.nio.IntBuffer)>
<java.awt.event.FocusEvent: void <init>(java.awt.Component,int,boolean,java.awt.Component)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquationSeparate(int,int)>
<android.graphics.drawable.ClipDrawable: int getOpacity()>
<android.graphics.Region: void <init>(android.graphics.Region)>
<android.hardware.Camera.Parameters: java.lang.String flatten()>
<android.graphics.Matrix: void setSkew(float,float,float,float)>
<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int)>
<android.view.Surface: boolean isValid()>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<android.media.AudioService.VolumeStreamState: int getMaxIndex()>
<android.media.AudioTrack: int getPlaybackRate()>
<android.view.animation.LayoutAnimationController: boolean isDone()>
<javax.imageio.metadata.IIOMetadataNode: boolean isDefaultNamespace(java.lang.String)>
<java.awt.font.ImageGraphicAttribute: boolean equals(java.lang.Object)>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>
<android.preference.Preference: void setWidgetLayoutResource(int)>
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.BridgeXmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.awt.geom.Rectangle2D getStringBounds(char[],int,int,java.awt.font.FontRenderContext)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node getParentNode()>
<java.awt.event.TextEvent: void <init>(java.lang.Object,int)>
<javax.imageio.plugins.bmp.BMPImageWriteParam: void setTopDown(boolean)>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillRoundRect(int,int,int,int,int,int)>
<java.awt.image.PixelGrabber: void setDimensions(int,int)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.NamedNodeMap getAttributes()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>
<org.apache.harmony.awt.gl.Crossing: int crossLine(double,double,double,double,double,double)>
<android.webkit.WebView: void emulateShiftHeld()>
<com.android.server.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName)>
<android.content.Context: android.graphics.drawable.Drawable getWallpaper()>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<java.awt.geom.RoundRectangle2D: boolean contains(double,double)>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>
<java.awt.BufferCapabilities: java.awt.ImageCapabilities getFrontBufferCapabilities()>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.tools.layoutlib.create.Log: void exception(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<android.graphics.Movie: boolean setTime(int)>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<org.apache.harmony.awt.im.InputMethodContext: org.apache.harmony.awt.wtk.NativeIM getNativeIM()>
<android.database.AbstractCursor: boolean isFirst()>
<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<java.awt.FontMetrics: boolean hasUniformLineMetrics()>
<javax.imageio.metadata.IIOMetadata: void <init>()>
<android.inputmethodservice.InputMethodService: void onFinishInput()>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
<android.provider.MediaStore.Audio.Artists: android.net.Uri getContentUri(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsOES(short,short,short,short,short)>
<java.awt.Component.BltBufferStrategy: void show()>
<org.apache.harmony.awt.wtk.NativeIM: void disableIME()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<java.awt.image.ComponentColorModel: java.lang.Object getDataElements(int,java.lang.Object)>
<java.awt.font.OpenType: byte[] getFontTable(java.lang.String,int,int)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.text.BoringLayout: float getLineMax(int)>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>
<java.awt.font.ShapeGraphicAttribute: boolean equals(java.lang.Object)>
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>
<android.content.pm.InstrumentationInfo: void <init>()>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.widget.ListAdapter: boolean areAllItemsEnabled()>
<android.media.AudioManager: void playSoundEffect(int)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitNative(int,java.lang.Object)>
<org.apache.harmony.awt.gl.color.ColorScaler: void scale(float[],short[],int)>
<android.content.pm.Signature: char[] toChars(char[],int[])>
<com.google.android.gles_jni.GLImpl: void glClearDepthx(int)>
<android.util.EventLog: int writeEvent(int,java.lang.String)>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<java.awt.image.DataBufferDouble: void setElem(int,int)>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<java.awt.Font: int getNumGlyphs()>
<android.widget.PopupWindow: void setWidth(int)>
<android.widget.PopupWindow: void <init>(android.view.View,int,int)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: boolean is_LINEAR_GRAY_CS(java.awt.color.ColorSpace)>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>
<javax.imageio.metadata.IIOMetadata: boolean isReadOnly()>
<android.graphics.Paint: boolean isFilterBitmap()>
<android.view.View: int getMeasuredWidth()>
<android.os.ParcelUuid: java.util.UUID getUuid()>
<java.awt.event.MouseEvent: int getButton()>
<android.inputmethodservice.KeyboardView: void swipeLeft()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean isAttributeDefault(int)>
<org.apache.harmony.awt.gl.font.AndroidFont: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext,java.awt.geom.AffineTransform)>
<com.android.tools.layoutlib.create.RenameClassAdapter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<java.awt.font.ImageGraphicAttribute: boolean equals(java.awt.font.ImageGraphicAttribute)>
<android.text.style.IconMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<com.google.android.gles_jni.GLImpl: void glLightx(int,int,int)>
<android.widget.TabHost.OnTabChangeListener: void onTabChanged(java.lang.String)>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>
<org.apache.harmony.awt.gl.XORComposite: java.awt.Color getXORColor()>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>
<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>
<android.webkit.WebView: void refreshPlugins(boolean)>
<android.content.pm.PackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<org.apache.harmony.awt.gl.ImageSurface: void dataTaken()>
<javax.imageio.ImageWriter: boolean canReplaceStreamMetadata()>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<android.content.res.TypedArray: int length()>
<com.android.fountain.FountainRS: void <init>()>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>
<android.media.AudioManager: int getRingerMode()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>
<java.awt.image.VolatileImage: java.awt.Graphics getGraphics()>
<java.awt.font.LineMetrics: float getStrikethroughOffset()>
<java.awt.Component: void firePropertyChange(java.lang.String,int,int)>
<android.database.AbstractCursor: boolean isBeforeFirst()>
<android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.ImageSurface: boolean invalidated()>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>
<android.speech.srec.Recognizer.Grammar: void save(java.lang.String)>
<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
<javax.imageio.ImageReader: void processPassStarted(java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[])>
<android.gesture.GestureStore: void <init>()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<java.awt.image.DataBufferFloat: void <init>(int,int)>
<org.apache.harmony.awt.gl.font.AndroidFont: java.lang.String getPSName()>
<java.awt.image.Raster: int getSampleModelTranslateX()>
<java.awt.RenderingHints.Key: boolean isCompatibleValue(java.lang.Object)>
<android.os.ParcelFileDescriptor: java.lang.String toString()>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.content.pm.ApplicationInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>
<java.awt.geom.Arc2D.Float: double getY()>
<android.server.BluetoothService: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>
<java.awt.GraphicsDevice: void <init>()>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>
<android.widget.ScrollView: boolean isFillViewport()>
<com.android.layoutlib.bridge.BridgeContext: int getWallpaperDesiredMinimumHeight()>
<java.awt.image.ComponentColorModel: int getDataElement(int[],int)>
<java.awt.geom.RoundRectangle2D: boolean intersects(double,double,double,double)>
<com.google.android.gles_jni.GLImpl: void glMaterialx(int,int,int)>
<java.awt.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>
<java.awt.geom.RoundRectangle2D: void <init>()>
<android.text.util.Rfc822Token: java.lang.String getAddress()>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<java.awt.event.PaintEvent: void setUpdateRect(java.awt.Rectangle)>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.widget.Gallery: void dispatchSetSelected(boolean)>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.pim.ContactsAsyncHelper.OnImageLoadCompleteListener: void onImageLoadComplete(int,java.lang.Object,android.widget.ImageView,boolean)>
<javax.imageio.ImageWriteParam: void unsetCompression()>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>
<com.google.android.mms.pdu.RetrieveConf: int getRetrieveStatus()>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>
<java.awt.Color: java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)>
<com.android.tools.layoutlib.create.MethodAdapter: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>
<com.android.commands.svc.Svc.Command: java.lang.String longHelp()>
<android.pim.vcard.VCardInterpreter: void endProperty()>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>
<java.awt.image.VolatileImage: boolean contentsLost()>
<android.content.IntentFilter: java.util.Iterator actionsIterator()>
<java.awt.Color: int hashCode()>
<javax.microedition.khronos.opengles.GL10: void glFinish()>
<org.apache.harmony.awt.gl.CommonGraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>
<android.speech.RecognitionService: void onStopListening(android.speech.RecognitionService.Callback)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getTagsURL(java.lang.String)>
<android.media.MediaRecorder: void setAudioEncoder(int)>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>
<android.accounts.NetworkErrorException: void <init>()>
<android.database.MatrixCursor: boolean isNull(int)>
<java.awt.image.RescaleOp: java.awt.RenderingHints getRenderingHints()>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>
<android.hardware.Camera.Parameters: int getInt(java.lang.String)>
<java.awt.font.FontRenderContext: java.awt.geom.AffineTransform getTransform()>
<java.awt.FontMetrics: int getMaxDecent()>
<android.location.Address: void setSubLocality(java.lang.String)>
<android.text.Selection: void setSelection(android.text.Spannable,int,int)>
<com.google.android.mms.pdu.PduComposer: void arraycopy(byte[],int,int)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>
<java.awt.color.ICC_ColorSpace: float[] fromCIEXYZ(float[])>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,java.nio.IntBuffer)>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>
<org.apache.harmony.awt.wtk.NativeIM: void deactivate(boolean)>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES20: int glCreateShader(int)>
<com.android.layoutlib.bridge.BridgeTypedArray: boolean getBoolean(int,boolean)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<java.awt.geom.QuadCurve2D: java.awt.geom.Point2D getP2()>
<android.content.Context: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>
<android.database.CursorWrapper: java.lang.String getString(int)>
<android.app.ApplicationErrorReport: void <init>()>
<javax.imageio.stream.IIOByteBuffer: byte[] getData()>
<android.os.Parcel: void readStringArray(java.lang.String[])>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getIdAttributeResourceValue(int)>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.ActivityManagerService: boolean isUserAMonkey()>
<javax.microedition.khronos.opengles.GL10: void glClearDepthx(int)>
<com.google.android.mms.pdu.QuotedPrintable: byte[] decodeQuotedPrintable(byte[])>
<org.apache.harmony.awt.gl.ImageSurface: org.apache.harmony.awt.gl.Surface getImageSurface()>
<android.widget.ViewSwitcher: void reset()>
<android.telephony.ServiceState: int hashCode()>
<android.app.Instrumentation.ActivityResult: int getResultCode()>
<com.google.android.gles_jni.GLImpl: void glStencilFunc(int,int,int)>
<android.app.Activity: void onRestart()>
<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>
<android.util.Base64: byte[] decode(byte[],int,int,int)>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.GridView: int computeVerticalScrollOffset()>
<android.widget.AbsListView: int getListPaddingBottom()>
<java.awt.geom.RectangularShape: boolean contains(java.awt.geom.Point2D)>
<java.awt.HeadlessGraphicsEnvironment: boolean isHeadlessInstance()>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>
<javax.imageio.metadata.IIOMetadataNode: boolean hasAttributes()>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.view.accessibility.AccessibilityManager: void interrupt()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.pim.vcard.VCardConfig: boolean appendTypeParamName(int)>
<java.awt.font.TextLayout: int hashCode()>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>
<android.graphics.Point: void <init>()>
<javax.imageio.stream.ImageOutputStream: void writeLong(long)>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(float[],int)>
<android.os.BinderProxy: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<javax.imageio.ImageWriteParam: java.awt.Dimension[] getPreferredTileSizes()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getAttributeMaxValue(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.image.URLDecodingImageSource: java.io.InputStream getInputStream()>
<javax.microedition.khronos.opengles.GL10: void glFogf(int,float)>
<android.opengl.GLES11: void glBindBuffer(int,int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(java.nio.IntBuffer)>
<com.android.server.am.ActivityManagerService: void wakingUp()>
<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<java.awt.font.GlyphMetrics: void <init>(float,java.awt.geom.Rectangle2D,byte)>
<java.awt.geom.QuadCurve2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>
<android.database.MergeCursor: long getLong(int)>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled()>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<com.google.android.mms.pdu.NotificationInd: int getDeliveryReport()>
<java.awt.image.renderable.ParameterBlock: long getLongParameter(int)>
<java.awt.Component: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.Window.Callback: void onContentChanged()>
<java.awt.image.ImageFilter: void setColorModel(java.awt.image.ColorModel)>
<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
<org.apache.harmony.awt.gl.image.PNGData: short getColorType()>
<javax.imageio.ImageWriteParam: void <init>(java.util.Locale)>
<java.awt.image.AffineTransformOp: void <init>(java.awt.geom.AffineTransform,int)>
<java.awt.image.BandCombineOp: float[][] getMatrix()>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<android.widget.TabWidget: boolean isStripEnabled()>
<android.os.BatteryStats.Uid: void noteFullWifiLockAcquiredLocked()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeInts(int[],int,int)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalStrikethroughThickness()>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>
<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.widget.Spinner: boolean performClick()>
<java.awt.BufferCapabilities: java.awt.ImageCapabilities getBackBufferCapabilities()>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>
<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.os.BinderProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<org.apache.harmony.awt.wtk.WindowFactory: org.apache.harmony.awt.wtk.NativeWindow getWindowById(long)>
<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.pim.vcard.VCardEntry: java.lang.String getBirthday()>
<java.awt.color.ICC_Profile: int getMinorVersion()>
<android.pim.vcard.VCardEntryCommitter: java.util.ArrayList getCreatedUris()>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>
<android.hardware.Camera.Parameters: java.lang.String getColorEffect()>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<org.apache.harmony.awt.gl.Crossing.QuadCurve: void <init>(double,double,double,double,double,double)>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<java.awt.Component: boolean isShowing()>
<android.util.Base64OutputStream: void write(byte[],int,int)>
<android.widget.TableLayout: android.widget.TableLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<java.awt.font.TextMeasurer: java.lang.Object clone()>
<com.google.android.mms.pdu.EncodedStringValue: void setCharacterSet(int)>
<android.widget.AbsListView: void onMeasure(int,int)>
<android.database.AbstractWindowedCursor: boolean isNull(int)>
<android.text.format.Time: long toMillis(boolean)>
<android.content.BroadcastReceiver: void setOrderedHint(boolean)>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.os.Debug: int getBinderProxyObjectCount()>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: int getTop()>
<javax.imageio.stream.ImageInputStreamImpl: long readUnsignedInt()>
<javax.imageio.stream.FileCacheImageInputStream: void close()>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.MultiRectArea: void substract(org.apache.harmony.awt.gl.MultiRectArea)>
<android.view.VelocityTracker: float getYVelocity(int)>
<org.apache.harmony.awt.wtk.NativeWindow: void grabMouse()>
<android.view.View: float getTopFadingEdgeStrength()>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
<javax.imageio.stream.ImageInputStream: int read()>
<java.awt.image.renderable.ParameterBlock: void setParameters(java.util.Vector)>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.util.Pair: int hashCode()>
<java.awt.Component: boolean handleEvent(java.awt.Event)>
<java.awt.font.TextLayout: java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillMultiRectArea(org.apache.harmony.awt.gl.MultiRectArea)>
<android.widget.Toast: void cancel()>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.wtk.NativeEventQueue: void performTask(org.apache.harmony.awt.wtk.NativeEventQueue.Task)>
<android.text.Annotation: int describeContents()>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.text.method.DateTimeKeyListener: int getInputType()>
<java.awt.image.RenderedImage: java.util.Vector getSources()>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>
<java.awt.font.TextLayout: java.lang.String toString()>
<java.awt.im.spi.InputMethodContext: void enableClientWindowNotification(java.awt.im.spi.InputMethod,boolean)>
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>
<android.opengl.GLES20: void glUseProgram(int)>
<android.net.wifi.WifiManager.MulticastLock: void release()>
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>
<android.telephony.TelephonyManager: int getSimState()>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>
<java.awt.image.AffineTransformOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] encodeStrings(java.lang.String[])>
<javax.imageio.ImageWriter: boolean canWriteEmpty()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitLabel(org.objectweb.asm.Label)>
<android.webkit.WebView: void destroy()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>
<com.android.layoutlib.bridge.BridgeContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.media.MediaScannerConnection: boolean isConnected()>
<org.apache.harmony.awt.ListenerList: void removeUserListener(java.lang.Object)>
<javax.imageio.spi.ServiceRegistry: void registerServiceProvider(java.lang.Object)>
<java.awt.Component: boolean isFocusTraversable()>
<android.graphics.PathMeasure: float getLength()>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,int[],int)>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<java.awt.EventQueue: boolean isDispatchThread()>
<android.pim.EventRecurrence: boolean repeatsOnEveryWeekDay()>
<android.provider.Settings.Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.widget.TextView: void setHintTextColor(int)>
<org.apache.harmony.awt.gl.color.ICC_Transform: void finalize()>
<android.content.pm.PackageParser.Component: void setPackageName(java.lang.String)>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenStart(java.lang.CharSequence,int)>
<javax.imageio.metadata.IIOMetadata: void reset()>
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>
<java.awt.color.ICC_ColorSpace: float[] toCIEXYZ(float[])>
<org.apache.harmony.awt.gl.MultiRectArea: void substract(java.awt.Rectangle)>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>
<java.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int)>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>
<android.graphics.Canvas: void drawColor(int)>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.ApplicationInfo: java.lang.String toString()>
<java.awt.image.renderable.RenderContext: void concatenateTransform(java.awt.geom.AffineTransform)>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>
<com.android.server.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>
<java.awt.Adjustable: int getValue()>
<android.widget.MediaController: void onFinishInflate()>
<android.view.animation.AnimationSet: void setDuration(long)>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>
<javax.imageio.ImageWriter: boolean abortRequested()>
<java.awt.font.ImageGraphicAttribute: void <init>(java.awt.Image,int,float,float)>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
<org.apache.harmony.awt.gl.Surface: java.lang.Object getData()>
<android.widget.ResourceCursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.app.Service: void onLowMemory()>
<android.webkit.CacheManager.CacheResult: java.lang.String getExpiresString()>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>
<android.text.Layout: int getParagraphLeft(int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.view.View.AttachInfo.Callbacks: boolean performHapticFeedback(int,boolean)>
<java.awt.RenderingHints: void putAll(java.util.Map)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenx(int,int,int)>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.image.WritableRaster getRaster()>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>
<android.os.BinderProxy: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setColor(java.awt.Color)>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>
<java.awt.font.ShapeGraphicAttribute: int hashCode()>
<com.google.android.mms.ContentType: boolean isVideoType(java.lang.String)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<java.awt.event.ComponentAdapter: void componentMoved(java.awt.event.ComponentEvent)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>
<android.media.AudioService.VolumeStreamState: void adjustLastAudibleIndex(int)>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>
<org.apache.harmony.awt.im.InputMethodContext: void endComposition()>
<java.awt.Graphics2D: void shear(double,double)>
<javax.imageio.stream.ImageInputStreamImpl: long length()>
<java.awt.Component: java.util.Locale getLocale()>
<java.awt.im.InputMethodRequests: java.text.AttributedCharacterIterator getSelectedText(java.text.AttributedCharacterIterator.Attribute[])>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>
<java.awt.image.renderable.RenderableImageProducer: void setRenderContext(java.awt.image.renderable.RenderContext)>
<java.awt.event.FocusAdapter: void focusGained(java.awt.event.FocusEvent)>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<android.graphics.Canvas: void skew(float,float)>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>
<android.graphics.Rect: void <init>(int,int,int,int)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: byte[] getDataByte(java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.Crossing: int crossQuad(double,double,double,double,double,double,double,double)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: boolean is_LINEAR_RGB_CS(java.awt.color.ColorSpace)>
<javax.imageio.plugins.jpeg.JPEGQTable: int[] getTable()>
<android.widget.RadioGroup: void clearCheck()>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.ColorStateList getColorStateList(int)>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<android.view.View: int computeHorizontalScrollOffset()>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.os.Debug: void resetThreadExternalAllocSize()>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>
<java.awt.font.FontRenderContext: boolean isAntiAliased()>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,java.nio.IntBuffer)>
<android.widget.DialerFilter: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.ImageWriteParam: void <init>()>
<java.awt.image.RasterOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<java.awt.image.renderable.ParameterBlock: java.lang.Class[] getParamClasses()>
<android.widget.RemoteViews: void <init>(android.os.Parcel)>
<android.pim.vcard.VCardInterpreterCollection: void endEntry()>
<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>
<android.net.Uri: android.net.Uri.Builder buildUpon()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<javax.imageio.stream.ImageInputStreamImpl: boolean readBoolean()>
<com.android.tools.layoutlib.create.MethodAdapter: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<android.graphics.Region: boolean isRect()>
<java.awt.image.ConvolveOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.widget.RadioGroup: void check(int)>
<android.database.Cursor: boolean moveToPrevious()>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmGetProfileElement(long,int,byte[])>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>
<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>
<android.accounts.AuthenticatorDescription: int describeContents()>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.view.Window: void setCallback(android.view.Window.Callback)>
<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>
<android.graphics.Camera: void translate(float,float,float)>
<android.widget.TextView: void setLinksClickable(boolean)>
<javax.imageio.stream.ImageInputStream: long skipBytes(long)>
<android.view.ScaleGestureDetector: long getEventTime()>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<java.awt.geom.RectangularShape: double getMaxX()>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>
<android.content.res.AssetManager.AssetInputStream: void close()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.metadata.IIOMetadata getStreamMetadata()>
<java.awt.geom.Rectangle2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.view.animation.Animation: void setFillAfter(boolean)>
<android.net.wifi.WifiConfiguration: void <init>()>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>
<java.beans.PropertyDescriptor: java.lang.Class getPropertyEditorClass()>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>
<android.database.BulkCursorProxy: boolean deleteRow(int)>
<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReaderSpi: boolean canDecodeInput(java.lang.Object)>
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>
<android.net.http.RequestQueue.ConnectionManager: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>
<com.android.rs.image.ImageProcessingActivity: void surfaceDestroyed(android.view.SurfaceHolder)>
<java.awt.image.TileObserver: void tileUpdate(java.awt.image.WritableRenderedImage,int,int,boolean)>
<android.app.AlertDialog: android.widget.ListView getListView()>
<android.hardware.Camera.Parameters: int getMaxExposureCompensation()>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<android.database.Cursor: double getDouble(int)>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.database.AbstractCursor: boolean moveToNext()>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>
<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<javax.imageio.spi.ServiceRegistry: void deregisterAll(java.lang.Class)>
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<android.location.Address: java.lang.String getLocality()>
<com.android.layoutlib.bridge.BridgeResources: com.android.layoutlib.bridge.BridgeTypedArray newTypeArray(int,boolean)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void require(int,java.lang.String,java.lang.String)>
<java.awt.image.AffineTransformOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<android.os.ParcelUuid: void <init>(java.util.UUID)>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo,java.lang.String)>
<android.webkit.WebView: boolean pageUp(boolean)>
<com.android.server.LoadAverageService: void onCreate()>
<android.widget.RadioButton: void <init>(android.content.Context)>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>
<java.awt.geom.Line2D: boolean contains(double,double,double,double)>
<org.apache.harmony.awt.ComponentInternals: void shutdown()>
<android.widget.ListView: void setItemsCanFocus(boolean)>
<android.net.LocalSocket: java.lang.String toString()>
<javax.imageio.stream.ImageOutputStream: void writeShort(int)>
<android.widget.LinearLayout: float getWeightSum()>
<android.content.pm.PackageParser.Package: void setPackageName(java.lang.String)>
<java.awt.geom.QuadCurve2D: void setCurve(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.database.AbstractCursor: boolean isLast()>
<java.awt.geom.Line2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<android.database.ContentObservable: void notifyChange(boolean)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)>
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>
<java.awt.font.GraphicAttribute: void draw(java.awt.Graphics2D,float,float)>
<java.awt.color.ColorSpace: int getType()>
<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.media.MediaRecorder: void stop()>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>
<android.webkit.WebView: int getContentHeight()>
<android.location.Location: double getLatitude()>
<android.preference.CheckBoxPreference: android.os.Parcelable onSaveInstanceState()>
<java.awt.image.SampleModel: java.awt.image.DataBuffer createDataBuffer()>
<android.os.Parcel: int dataAvail()>
<android.speech.RecognitionListener: void onError(int)>
<java.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int,java.awt.ImageCapabilities,int)>
<javax.imageio.ImageReader: java.awt.image.BufferedImage readThumbnail(int,int)>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>
<android.view.View: void postInvalidate()>
<android.database.Cursor: boolean isNull(int)>
<android.net.http.SslError: boolean hasError(int)>
<com.android.providers.settings.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<java.awt.Font: java.awt.Font deriveFont(int,float)>
<android.app.Application: void onLowMemory()>
<java.awt.geom.Line2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>
<java.awt.font.TextLayout: float[] getCaretInfo(java.awt.font.TextHitInfo,java.awt.geom.Rectangle2D)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeShorts(short[],int,int)>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>
<android.pim.vcard.VCardParser_V30: int getVersion()>
<android.speech.RecognitionService.Callback: void error(int)>
<android.media.AudioManager: void playSoundEffect(int,float)>
<android.text.DynamicLayout: int getEllipsisStart(int)>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
<com.google.android.maps.MapView: boolean isStreetView()>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.Synchronizer getSynchronizer()>
<android.database.MergeCursor: boolean requery()>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
<android.graphics.Paint: void setAlpha(int)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewSizes()>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<android.location.GpsStatus: int getMaxSatellites()>
<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int[])>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>
<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String)>
<android.os.AsyncTask: boolean isCancelled()>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glPointParameterf(int,float)>
<android.opengl.GLES10: void glScissor(int,int,int,int)>
<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>
<java.awt.Color: float[] getComponents(java.awt.color.ColorSpace,float[])>
<android.graphics.Interpolator: int getValueCount()>
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>
<java.awt.image.DataBufferFloat: void <init>(float[],int)>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>
<android.renderscript.ProgramVertex.ShaderBuilder: void <init>(android.renderscript.RenderScript)>
<android.os.Parcel: void writeDoubleArray(double[])>
<android.hardware.Camera.Parameters: void removeGpsData()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: boolean isGrayPallete(java.awt.image.IndexColorModel)>
<javax.imageio.ImageWriter: void dispose()>
<java.awt.geom.FlatteningPathIterator: void next()>
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent,java.lang.String,int)>
<android.app.Dialog: void dismiss()>
<android.widget.CursorTreeAdapter: void changeCursor(android.database.Cursor)>
<java.awt.geom.Area: java.awt.Rectangle getBounds()>
<android.content.pm.PermissionInfo: java.lang.String toString()>
<android.content.Context: boolean isRestricted()>
<org.apache.harmony.awt.gl.image.PNGChunk: short getUnsignedByte(int)>
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<java.awt.image.RescaleOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<android.view.ViewGroup: void scheduleLayoutAnimation()>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>
<javax.imageio.ImageWriter: java.util.Locale getLocale()>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
<android.pim.ContactsAsyncHelper.ImageTracker: void setPhotoState(int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font)>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>
<javax.imageio.stream.ImageOutputStream: void writeBoolean(boolean)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addAttribute(java.lang.String,java.lang.String,int,boolean,java.lang.String)>
<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<java.awt.image.WritableRenderedImage: java.awt.image.WritableRaster getWritableTile(int,int)>
<android.view.VelocityTracker: void recycle()>
<android.util.MonthDisplayHelper: void <init>(int,int)>
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<java.awt.font.ShapeGraphicAttribute: float getAscent()>
<android.app.Instrumentation.ActivityMonitor: int getHits()>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<com.google.android.mms.pdu.RetrieveConf: void setMessageClass(byte[])>
<java.awt.image.DataBufferFloat: int getElem(int)>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createFromRenderedImage(java.awt.image.RenderedImage)>
<android.webkit.CookieManager: void removeSessionCookie()>
<android.media.MediaRecorder: void setAudioChannels(int)>
<android.widget.PopupWindow: boolean isFocusable()>
<java.awt.FontMetrics: int charWidth(char)>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>
<com.google.android.gles_jni.GLImpl: void glDrawTexiOES(int,int,int,int,int)>
<javax.imageio.ImageWriter: void processImageComplete()>
<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>
<java.awt.Font: int getSize()>
<android.os.Binder: void restoreCallingIdentity(long)>
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.location.LocationProvider: boolean supportsSpeed()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: void dispose()>
<android.view.View: android.content.Context getContext()>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.content.ComponentName: java.lang.String toShortString()>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>
<android.view.ViewGroup: void drawableStateChanged()>
<java.awt.geom.Rectangle2D.Float: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<android.widget.TextView: boolean onPreDraw()>
<java.awt.image.renderable.ParameterBlock: int getIntParameter(int)>
<java.awt.geom.Rectangle2D: void add(java.awt.geom.Point2D)>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<org.apache.harmony.awt.gl.font.CompositeFont: java.awt.font.LineMetrics getLineMetrics()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>
<android.content.IntentSender.OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<java.awt.geom.RectangularShape: double getX()>
<android.app.Dialog: android.content.Context getContext()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>
<android.provider.Contacts.Intents.UI: void <init>()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>
<android.app.ActivityManagerProxy: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)>
<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>
<android.hardware.Camera: android.hardware.Camera.Parameters getParameters()>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<android.pim.vcard.VCardComposer: boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String)>
<android.hardware.Camera.Parameters: float getHorizontalViewAngle()>
<com.android.server.KeyInputQueue: java.lang.String getDeviceName(int)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>
<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>
<android.gesture.GestureStore: int getSequenceType()>
<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])>
<org.apache.harmony.awt.wtk.Synchronizer: void lock()>
<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<java.awt.Component: void setFocusTraversalKeysEnabled(boolean)>
<android.util.SparseBooleanArray: void <init>(int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.view.MotionEvent: float getHistoricalY(int)>
<android.os.BinderProxy: void finalize()>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean getAttributeBooleanValue(int,boolean)>
<android.graphics.drawable.shapes.Shape: float getHeight()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeDouble(double)>
<android.graphics.Canvas: void setDensity(int)>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
<java.awt.image.ComponentColorModel: int[] getComponents(int,int[],int)>
<javax.imageio.IIOParam: int getSourceXSubsampling()>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<javax.imageio.ImageTypeSpecifier: int getBitsPerBand(int)>
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>
<com.google.android.mms.pdu.PduComposer: void appendUintvarInteger(long)>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>
<java.awt.geom.Ellipse2D: void <init>()>
<org.apache.harmony.awt.gl.font.CaretManager: void <init>(org.apache.harmony.awt.gl.font.TextRunBreaker)>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>
<android.content.ContentValues: void putNull(java.lang.String)>
<android.preference.GenericInflater.Parent: void addItemFromInflater(java.lang.Object)>
<android.view.animation.RotateAnimation: void <init>(float,float)>
<android.content.Intent: java.lang.String resolveType(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>
<android.widget.Filter: void filter(java.lang.CharSequence)>
<java.awt.image.DirectColorModel: void <init>(int,int,int,int)>
<android.telephony.NeighboringCellInfo: void <init>()>
<java.awt.HeadlessToolkit: void loadSystemColors(int[])>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<java.awt.color.ICC_Profile: int getColorSpaceType()>
<org.apache.harmony.awt.gl.render.JavaTextRenderer: void drawClipGlyphVector(java.awt.image.WritableRaster,java.lang.Object,java.awt.font.GlyphVector,int,int,int,int,int,int)>
<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>
<java.awt.GraphicsEnvironment: java.awt.Point getCenterPoint()>
<java.awt.geom.CubicCurve2D: double getFlatness(double[],int)>
<android.graphics.Paint: boolean isFakeBoldText()>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>
<android.media.MediaPlayer: int getDuration()>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.Toast: android.view.View getView()>
<android.gesture.Gesture: long getID()>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<com.android.server.status.StatusBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>
<android.text.DynamicLayout: int getParagraphDirection(int)>
<com.google.android.util.AbstractMessageParser.Link: java.util.List getInfo()>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>
<android.graphics.PointF: void offset(float,float)>
<android.location.Address: void setCountryName(java.lang.String)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<android.pim.ContactsAsyncHelper.ImageTracker: boolean isDifferentImageRequest(com.android.internal.telephony.CallerInfo)>
<android.renderscript.Allocation.Adapter2D: void data(float[])>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>
<android.webkit.WebViewDatabase: boolean hasFormData()>
<javax.microedition.khronos.opengles.GL10: void glActiveTexture(int)>
<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<com.google.android.mms.ContentType: boolean isSupportedImageType(java.lang.String)>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.Drawable: int getOpacity()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<java.awt.image.DataBuffer: void <init>(int,int,int,int)>
<android.webkit.DateSorter: java.lang.String getLabel(int)>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<java.awt.Dimension: void setSize(double,double)>
<com.android.server.status.NotificationLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.HtmlToSpannedConverter: void processingInstruction(java.lang.String,java.lang.String)>
<android.os.Debug: void dumpHprofData(java.lang.String)>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getOutline(float,float)>
<android.database.sqlite.SQLiteDatabase: int getVersion()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<org.apache.harmony.awt.gl.font.CompositeFont: int getNumGlyphs()>
<android.pim.vcard.VCardEntryCounter: void endProperty()>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>
<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform,java.awt.RenderingHints)>
<android.location.Location: long getTime()>
<java.awt.image.IndexColorModel: void getBlues(byte[])>
<android.pim.vcard.VCardEntry: java.util.List getOrganizationList()>
<android.app.SearchableInfo: int getSuggestThreshold()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: char[] getTextCharacters(int[])>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<com.android.server.am.BatteryStatsService: void noteStopGps(int)>
<android.renderscript.ProgramVertex.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element,android.renderscript.Element)>
<android.widget.GridView: void setSelection(int)>
<java.awt.image.DataBufferByte: int getElem(int,int)>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.widget.ScrollView: void smoothScrollTo(int,int)>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
<org.apache.harmony.awt.ClipRegion: java.lang.String toString()>
<android.app.Service: android.app.Application getApplication()>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<android.graphics.Matrix: boolean hasPerspective()>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>
<android.renderscript.ProgramStore.Builder: void setDepthMask(boolean)>
<android.text.style.LeadingMarginSpan.Standard: int describeContents()>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
<java.awt.ComponentBehavior: void setZOrder(int,int)>
<java.awt.font.FontRenderContext: boolean usesFractionalMetrics()>
<java.awt.Component: java.lang.String toString()>
<java.awt.geom.RectangularShape: double getMaxY()>
<android.hardware.Camera.AutoFocusCallback: void onAutoFocus(boolean,android.hardware.Camera)>
<android.content.ContentProvider: java.lang.String getWritePermission()>
<android.view.KeyEvent: boolean isAltPressed()>
<android.os.Parcel: void writeInt(int)>
<com.google.android.util.AbstractMessageParser.Smiley: java.util.List getInfo()>
<com.android.server.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int)>
<java.awt.image.WritableRaster: void <init>(java.awt.image.SampleModel,java.awt.Point)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getNumChars()>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitEnd()>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>
<android.os.Binder: int getCallingUid()>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>
<java.awt.event.ComponentListener: void componentMoved(java.awt.event.ComponentEvent)>
<android.webkit.WebBackForwardList: int getSize()>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<com.google.android.util.Procedure: void apply(java.lang.Object)>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.text.util.Rfc822Token: int hashCode()>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitNative(int,java.lang.Object)>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>
<android.database.CursorWrapper: boolean isClosed()>
<java.awt.image.DataBufferShort: void <init>(short[],int,int)>
<com.android.layoutlib.bridge.BridgeContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.PaintContext: void dispose()>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>
<java.awt.geom.QuadCurve2D.Double: double getCtrlY()>
<android.widget.AbsListView: int getListPaddingTop()>
<android.database.sqlite.SQLiteDatabase: void finalize()>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceConnected()>
<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.webkit.WebView: void clearCache()>
<android.content.IntentFilter: void <init>()>
<android.widget.Gallery: int computeHorizontalScrollOffset()>
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>
<android.database.MergeCursor: boolean isNull(int)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>
<com.google.android.mms.pdu.PduBody: void removeAll()>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>
<java.awt.Component: boolean getFocusTraversalKeysEnabled()>
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>
<android.app.ActivityManagerProxy: void killApplicationWithUid(java.lang.String,int)>
<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)>
<java.awt.geom.GeneralPath: void append(java.awt.geom.PathIterator,boolean)>
<android.text.method.ScrollingMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.database.MergeCursor: int getCount()>
<org.apache.harmony.awt.gl.MultiRectArea: boolean isEmpty()>
<android.pim.vcard.VCardParser_V21: boolean readBeginVCard(boolean)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<com.google.android.mms.pdu.GenericPdu: int getMmsVersion()>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void getData(java.io.OutputStream,int,long)>
<android.renderscript.SimpleMesh.Builder: int addVertexType(android.renderscript.Type)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>
<android.widget.ZoomControls: boolean hasFocus()>
<java.awt.event.ComponentAdapter: void componentResized(java.awt.event.ComponentEvent)>
<android.graphics.Path: void finalize()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitInsn(int)>
<java.awt.image.ComponentColorModel: int getAlpha(int)>
<com.android.layoutlib.bridge.BridgeResources: java.lang.String getString(int,java.lang.Object[])>
<android.os.PatternMatcher: int getType()>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createGrayscale(int,int,boolean)>
<java.awt.image.ComponentSampleModel: int[] getPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<com.android.layoutlib.bridge.BridgeContext: boolean stopService(android.content.Intent)>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>
<java.awt.event.MouseEvent: java.awt.Point getPoint()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<android.graphics.Matrix: void mapPoints(float[],float[])>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.view.View: android.content.res.Resources getResources()>
<com.android.server.RecognitionManagerService: void systemReady()>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>
<org.apache.harmony.awt.wtk.NativeEvent: java.lang.StringBuffer getKeyChars()>
<android.view.KeyEvent: boolean isSystem()>
<android.content.IntentFilter: int countDataTypes()>
<javax.imageio.ImageWriteParam: boolean canWriteProgressive()>
<android.media.MediaRecorder: void reset()>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>
<android.view.Display: int getDisplayId()>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>
<org.apache.harmony.awt.state.State: boolean isTextColorSet()>
<javax.imageio.ImageWriter: void endWriteSequence()>
<android.app.ListActivity: int getSelectedItemPosition()>
<android.graphics.DashPathEffect: void <init>(float[],float)>
<android.os.Message: void recycle()>
<com.google.android.mms.pdu.PduPersister: java.lang.String toIsoString(byte[])>
<android.graphics.Canvas: java.awt.image.BufferedImage getImage()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.Comparable getObjectMinValue(java.lang.String)>
<android.view.View: long getDrawingTime()>
<android.pim.ICalendar.Property: java.lang.String toString()>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>
<android.view.InflateException: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(int[],int)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.webkit.WebView: void destroy()>
<android.pim.vcard.VCardEntry.PhoneData: java.lang.String toString()>
<android.preference.Preference: java.lang.String getDependency()>
<android.os.PowerManager: void userActivity(long,boolean)>
<android.widget.GridView: int computeVerticalScrollExtent()>
<org.apache.harmony.awt.gl.font.FontManager: int getFaceIndex(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,float[],int)>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.os.Bundle: boolean isEmpty()>
<java.awt.image.DirectColorModel: int getAlpha(java.lang.Object)>
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<java.awt.Image: java.awt.image.ImageProducer getSource()>
<android.provider.Calendar.CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>
<java.awt.geom.Line2D: boolean contains(java.awt.geom.Point2D)>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>
<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getAttributeDefaultValue(java.lang.String,java.lang.String)>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>
<android.widget.TableRow.LayoutParams: void <init>(int)>
<android.database.sqlite.SQLiteException: void <init>()>
<com.google.android.gles_jni.EGLImpl: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.view.animation.Animation: long getStartOffset()>
<com.google.android.mms.pdu.PduParser: boolean isTokenCharacter(int)>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setProperties(java.util.Hashtable)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<android.widget.RelativeLayout: void setGravity(int)>
<javax.imageio.ImageWriteParam: int getTileGridXOffset()>
<android.view.Window: void onActive()>
<android.app.Dialog: void openOptionsMenu()>
<android.graphics.Region: boolean set(android.graphics.Rect)>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>
<android.net.ConnectivityManager: void setNetworkPreference(int)>
<java.awt.Toolkit.ComponentInternalsImpl: void shutdown()>
<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>
<java.awt.image.ConvolveOp: java.awt.image.Kernel getKernel()>
<android.graphics.Path: void setLastPoint(float,float)>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>
<android.widget.TextView: void cancelLongPress()>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<android.graphics.Path: void offset(float,float)>
<android.app.ActivityThread.PackageInfo: java.lang.String getDataDir()>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<com.android.server.am.ActivityManagerService: void unregisterReceiver(android.content.IIntentReceiver)>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<java.awt.image.Raster: int[] getPixel(int,int,int[])>
<android.preference.DialogPreference: void onClick()>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>
<android.graphics.Paint: void setFlags(int)>
<java.awt.Component: void setSize(java.awt.Dimension)>
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.AlertDialog: void <init>(android.content.Context,int)>
<android.widget.SlidingDrawer: void unlock()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>
<android.pim.vcard.exception.VCardNotSupportedException: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setClip(int,int,int,int)>
<android.ddm.DdmHandleProfiling: void connected()>
<android.os.Bundle: java.lang.Object clone()>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>
<java.awt.image.DataBufferDouble: void setElem(int,int,int)>
<java.awt.font.TransformAttribute: void <init>(java.awt.geom.AffineTransform)>
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>
<java.awt.event.ComponentAdapter: void <init>()>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.animation.Transformation: int getTransformationType()>
<android.os.Bundle: void putDouble(java.lang.String,double)>
<java.awt.image.ConvolveOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<com.google.android.util.SmileyResources: java.util.Set getSchemes()>
<android.widget.FrameLayout: void setForegroundGravity(int)>
<com.google.android.mms.pdu.PduParser: byte[] getWapString(java.io.ByteArrayInputStream,int)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getMaxDescent()>
<android.content.pm.ResolveInfo: int describeContents()>
<java.awt.Graphics2D: java.awt.Color getBackground()>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>
<java.awt.image.DataBuffer: int[] getOffsets()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: void <init>(javax.imageio.spi.ImageReaderSpi)>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>
<android.view.WindowManagerPolicy.WindowState: boolean hasAppShownWindows()>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>
<java.awt.FontMetrics: int getMaxDescent()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getContentFrameLw()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
<org.apache.harmony.awt.gl.font.FontManager: int getFamilyIndex(java.lang.String)>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>
<android.app.ExpandableListActivity: long getSelectedId()>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getAscent()>
<android.app.ListActivity: void onDestroy()>
<com.google.android.mms.pdu.EncodedStringValue: void setTextString(byte[])>
<android.net.TrafficStats: long getTotalRxBytes()>
<android.graphics.Point: void offset(int,int)>
<android.webkit.WebView: void externalRepresentation(android.os.Message)>
<com.android.layoutlib.bridge.BridgeTypedArray: int getDimensionPixelOffset(int,int)>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>
<org.apache.harmony.awt.gl.image.ByteArrayDecodingImageSource: void <init>(byte[])>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean isEmptyElementTag()>
<javax.imageio.ImageIO: boolean getUseCache()>
<java.awt.event.TextListener: void textValueChanged(java.awt.event.TextEvent)>
<android.preference.Preference: boolean hasKey()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getAttributeValueType(java.lang.String,java.lang.String)>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<java.beans.PropertyDescriptor: void setWriteMethod(java.lang.reflect.Method)>
<java.awt.image.DataBuffer: int getDataTypeSize(int)>
<org.apache.harmony.awt.state.MenuItemState: boolean isEnabled()>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.View: int getBaseline()>
<android.content.pm.PackageStats: java.lang.String toString()>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<android.content.IntentFilter: java.util.Iterator categoriesIterator()>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<javax.imageio.spi.RegisterableService: void onRegistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<javax.imageio.metadata.IIOMetadataFormat: int getElementMinChildren(java.lang.String)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>
<android.util.SparseIntArray: int valueAt(int)>
<java.awt.image.ImageConsumer: void setDimensions(int,int)>
<java.awt.image.SampleModel: int getDataType()>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,float[],int)>
<android.view.animation.Animation: boolean isInitialized()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterf(int,float)>
<org.apache.harmony.awt.wtk.CursorFactory: java.awt.Dimension getBestCursorSize(int,int)>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<org.apache.harmony.awt.ComponentInternals: void setDesktopProperty(java.lang.String,java.lang.Object)>
<android.graphics.Matrix: void setValues(float[])>
<android.content.SyncAdapterType: boolean supportsUploading()>
<android.text.LoginFilter: void onStart()>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<android.webkit.JsResult: void wakeUp()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: void <init>(javax.imageio.spi.ImageReaderSpi)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>
<java.awt.Component: void repaint(long,int,int,int,int)>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Matrix: boolean preRotate(float)>
<android.util.MonthDisplayHelper: void nextMonth()>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
<com.android.server.KeyInputQueue: int getSwitchState(int)>
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml.Encoding,org.xml.sax.ContentHandler)>
<java.awt.font.FontRenderContext: int hashCode()>
<javax.imageio.spi.ImageWriterSpi: javax.imageio.ImageWriter createWriterInstance(java.lang.Object)>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>
<javax.microedition.khronos.opengles.GL10: int glGetError()>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.util.FloatMath: float sqrt(float)>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>
<java.awt.geom.CubicCurve2D: double getX2()>
<java.awt.Font: java.awt.Font createFont(int,java.io.InputStream)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.BasicStroke: float[] getDashArray()>
<android.provider.Contacts.Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.Toolkit: org.apache.harmony.awt.wtk.GraphicsFactory getGraphicsFactory()>
<com.android.tools.layoutlib.create.AsmGenerator: void <init>(com.android.tools.layoutlib.create.Log,java.lang.String,java.lang.Class[],java.lang.String[],java.lang.String[],java.lang.String[])>
<android.content.res.AssetManager.AssetInputStream: void reset()>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.speech.srec.MicrophoneInputStream: int read()>
<android.renderscript.Light.Builder: void lightSetIsLocal(boolean)>
<javax.imageio.ImageReader: int getHeight(int)>
<android.ddm.DdmHandleThread: void connected()>
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>
<android.widget.TextView: void setLinkTextColor(int)>
<com.google.android.util.AbstractMessageParser.Link: java.lang.String getURL()>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>
<org.apache.harmony.awt.ContextThreadGroup: void dispose()>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>
<android.os.Bundle: int getInt(java.lang.String,int)>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ComponentInternals getComponentInternals()>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>
<java.awt.geom.Area: java.awt.geom.Area createTransformedArea(java.awt.geom.AffineTransform)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.commands.svc.Svc.Command: void <init>(java.lang.String)>
<android.util.PrintStreamPrinter: void println(java.lang.String)>
<java.awt.MenuComponent: java.awt.peer.MenuComponentPeer getPeer()>
<com.android.layoutlib.bridge.BridgeContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.text.format.Time: void <init>(android.text.format.Time)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<java.awt.geom.Line2D: void setLine(java.awt.geom.Line2D)>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>
<java.awt.image.WritableRaster: java.awt.image.WritableRaster getWritableParent()>
<java.awt.Font: boolean equals(java.lang.Object)>
<com.android.layoutlib.bridge.BridgeXmlPullAttributes: int getAttributeNameResource(int)>
<java.awt.image.PackedColorModel: void <init>(java.awt.color.ColorSpace,int,int[],int,boolean,int,int)>
<android.widget.GridView: int computeVerticalScrollRange()>
<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
<java.awt.geom.QuadCurve2D: void <init>()>
<javax.imageio.ImageReader: void removeIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)>
<android.telephony.ServiceState: void setIsManualSelection(boolean)>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>
<java.awt.AWTEvent: void <init>(java.awt.Event)>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
<com.android.layoutlib.bridge.ResourceHelper: android.util.TypedValue getValue(java.lang.String)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.lang.String getPSName()>
<com.google.android.gles_jni.GLImpl: void glShadeModel(int)>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>
<com.android.tools.layoutlib.create.AsmGenerator: void setDeps(java.util.Map)>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.app.Dialog: android.view.View findViewById(int)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.app.ActivityManagerProxy: void <init>(android.os.IBinder)>
<android.graphics.Paint: void setTextScaleX(float)>
<android.widget.Chronometer: android.widget.Chronometer.OnChronometerTickListener getOnChronometerTickListener()>
<android.widget.MediaController: void show()>
<android.view.View: void onAttachedToWindow()>
<android.debug.JNITest: void <init>()>
<java.awt.image.DataBufferDouble: void <init>(double[],int,int)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>
<java.awt.Font: java.util.Map getAttributes()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<java.awt.image.RenderedImage: int getMinTileY()>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(float[],int)>
<java.awt.Shape: boolean contains(double,double,double,double)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>
<android.content.ContentValues: int hashCode()>
<android.widget.TextSwitcher: void <init>(android.content.Context)>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.text.Spannable: void removeSpan(java.lang.Object)>
<android.graphics.Canvas: void restoreToCount(int)>
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>
<java.awt.Toolkit: java.awt.Image createImage(java.awt.image.ImageProducer)>
<java.awt.Component: void setLocation(int,int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void rotate(double)>
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,int)>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.imageio.spi.ImageTranscoderSpi: java.lang.String getReaderServiceProviderName()>
<android.widget.AbsListView: int getListPaddingRight()>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreviewSize()>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: float[] getDataFloat(java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.MultiRectArea: void print(org.apache.harmony.awt.gl.MultiRectArea,java.lang.String)>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.view.ViewGroup: void debug(int)>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.database.MatrixCursor: double getDouble(int)>
<android.opengl.GLES20: boolean glIsTexture(int)>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>
<android.text.method.TextKeyListener: void release()>
<android.content.pm.PackageParser.ActivityIntentInfo: java.lang.String toString()>
<android.os.Message: int describeContents()>
<java.awt.image.LookupOp: java.awt.image.LookupTable getTable()>
<android.graphics.PathMeasure: boolean nextContour()>
<java.awt.image.ConvolveOp: void <init>(java.awt.image.Kernel,int,java.awt.RenderingHints)>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.SearchableInfo: int getSettingsDescriptionId()>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>
<android.content.AsyncQueryHandler: void handleMessage(android.os.Message)>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>
<android.opengl.GLES10: void glCullFace(int)>
<com.android.server.status.CloseDragHandle: boolean onTouchEvent(android.view.MotionEvent)>
<javax.imageio.stream.ImageInputStreamImpl: int readInt()>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
<android.graphics.Matrix: void mapVectors(float[],float[])>
<java.awt.image.renderable.RenderableImageOp: java.awt.image.RenderedImage createDefaultRendering()>
<com.android.common.OperationScheduler: void setMoratoriumTimeMillis(long)>
<java.awt.Font: java.awt.peer.FontPeer getPeer()>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.graphics.Matrix: void setTranslate(float,float)>
<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
<com.google.android.util.AbstractMessageParser.Part: boolean isMedia()>
<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>
<javax.imageio.stream.ImageInputStream: void close()>
<android.graphics.Paint: float getStrokeWidth()>
<java.awt.geom.QuadCurve2D.Float: void <init>(float,float,float,float,float,float)>
<java.awt.geom.Area: void subtract(java.awt.geom.Area)>
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>
<java.awt.event.HierarchyEvent: void <init>(java.awt.Component,int,java.awt.Component,java.lang.Object,long)>
<android.graphics.drawable.ClipDrawable: void onBoundsChange(android.graphics.Rect)>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,int[],int)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSamples(int,int,int,int,int,double[])>
<android.database.CursorWindow: void setStartPosition(int)>
<android.text.Layout: int getLineForVertical(int)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>
<java.awt.geom.QuadCurve2D: boolean contains(double,double)>
<android.view.WindowManagerPolicy.WindowState: android.view.IApplicationToken getAppToken()>
<com.google.android.mms.pdu.RetrieveConf: int getReadReport()>
<com.android.server.ThrottleService: long getByteCount(java.lang.String,int,int,int)>
<com.android.layoutlib.bridge.BridgeTypedArray: void sealArray()>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void scale(double,double)>
<java.awt.font.GlyphVector: java.awt.Font getFont()>
<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.io.InputStream)>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: android.graphics.Path getAndroidGlyphOutline(int)>
<android.widget.AbsListView: android.widget.AbsListView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitInnerClassType(java.lang.String)>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>
<java.awt.image.BandedSampleModel: double getSampleDouble(int,int,int,java.awt.image.DataBuffer)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>
<com.google.android.mms.pdu.MultimediaMessagePdu: void addTo(com.google.android.mms.pdu.EncodedStringValue)>
<android.view.WindowManagerPolicy.WindowState: android.view.WindowManager.LayoutParams getAttrs()>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>
<android.os.BatteryStats.Uid: long getAudioTurnedOnTime(long,int)>
<android.content.pm.Signature: int hashCode()>
<java.awt.Component: void disableEvents(long)>
<com.google.android.mms.pdu.RetrieveConf: void setDeliveryReport(int)>
<com.android.server.am.BatteryStatsService: void noteWifiOff(int)>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>
<android.hardware.Camera: void startPreview()>
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View.OnTouchListener)>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.image.BufferedImage getImage()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitBaseType(char)>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitTypeInsn(int,java.lang.String)>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<java.awt.geom.AffineTransform: java.lang.Object clone()>
<android.view.Display: int getRotation()>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.google.android.mms.pdu.PduHeaders: byte[] getTextString(int)>
<android.content.Context: void setWallpaper(java.io.InputStream)>
<android.preference.PreferenceCategory: boolean isEnabled()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)>
<java.awt.Component: void setEnabled(boolean)>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>
<java.awt.geom.CubicCurve2D: double getFlatnessSq(double,double,double,double,double,double,double,double)>
<android.graphics.PathEffect: void finalize()>
<java.awt.geom.Rectangle2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.webkit.WebView: int getProgress()>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>
<java.beans.PropertyEditor: void paintValue(java.awt.Graphics,java.awt.Rectangle)>
<java.awt.geom.Line2D: int relativeCCW(double,double,double,double,double,double)>
<android.webkit.Plugin: void dispatchClickEvent(android.content.Context)>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>
<org.apache.harmony.awt.wtk.NativeEventQueue.Task: void perform()>
<java.awt.font.OpenType: byte[] getFontTable(int,int,int)>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.speech.RecognitionService.Callback: void beginningOfSpeech()>
<javax.imageio.ImageReader: void abort()>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.image.BufferedImage getBufferedImage()>
<android.hardware.Camera.Parameters: void setJpegQuality(int)>
<java.awt.image.renderable.ContextualRenderedImageFactory: boolean isDynamic()>
<android.os.Handler: boolean sendEmptyMessage(int)>
<com.android.server.LightsService.Light: void setFlashing(int,int,int,int)>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
<java.awt.Font: java.awt.geom.AffineTransform getTransform()>
<android.graphics.drawable.DrawableContainer: int getOpacity()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.android.server.status.AnimatedImageView: void <init>(android.content.Context)>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getType(boolean)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalStrikethroughOffset()>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,int[],int)>
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>
<javax.imageio.stream.ImageInputStream: void readFully(short[],int,int)>
<android.text.TextPaint: void <init>()>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.view.accessibility.AccessibilityEvent: int getAddedCount()>
<android.graphics.Paint: int getFlags()>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>
<android.location.Address: void setThoroughfare(java.lang.String)>
<java.awt.geom.Rectangle2D: boolean contains(double,double,double,double)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerName(java.lang.String)>
<android.view.View: void onWindowVisibilityChanged(int)>
<javax.imageio.ImageTypeSpecifier: int getNumBands()>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
<com.android.layoutlib.bridge.BridgeContext: void clearWallpaper()>
<android.renderscript.ScriptC.Builder: void <init>(android.renderscript.RenderScript)>
<java.awt.im.InputContext: void endComposition()>
<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<java.awt.image.renderable.RenderableImageOp: void <init>(java.awt.image.renderable.ContextualRenderedImageFactory,java.awt.image.renderable.ParameterBlock)>
<android.location.Address: void setPhone(java.lang.String)>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(int,int,int,int)>
<android.renderscript.Program.BaseProgramBuilder: void setShader(java.lang.String)>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<java.awt.geom.RectangularShape: double getMinX()>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.webkit.UrlInterceptHandler: android.webkit.CacheManager.CacheResult service(java.lang.String,java.util.Map)>
<java.awt.ImageCapabilities: java.lang.Object clone()>
<java.awt.Component: java.lang.Object getTreeLock()>
<android.widget.VideoView: void start()>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
<android.graphics.ColorFilter: void finalize()>
<android.hardware.Camera.Size: int hashCode()>
<java.awt.font.LineMetrics: float getUnderlineOffset()>
<android.webkit.WebView: void goForward()>
<java.awt.Font: boolean isPlain()>
<android.telephony.SignalStrength: int getCdmaDbm()>
<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: java.awt.image.ColorModel getColorModel()>
<android.os.Debug: void stopNativeTracing()>
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL10: void glDepthFunc(int)>
<android.text.style.QuoteSpan: int getColor()>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>
<android.util.FloatMath: float sin(float)>
<android.graphics.NinePatch: int getHeight()>
<android.util.SparseIntArray: void <init>()>
<com.android.tools.layoutlib.create.RenameClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>
<java.awt.image.DataBuffer: void setElemDouble(int,int,double)>
<android.view.ScaleGestureDetector: float getFocusX()>
<android.pim.vcard.VCardEntryConstructor: void showPerformanceInfo()>
<android.renderscript.ProgramStore.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element,android.renderscript.Element)>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>
<java.awt.Adjustable: void setUnitIncrement(int)>
<android.app.WallpaperInfo: java.lang.String toString()>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>
<org.apache.harmony.awt.state.MenuState: int getHeight()>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>
<android.app.IActivityManager.ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>
<javax.imageio.IIOImage: java.util.List getThumbnails()>
<javax.imageio.ImageIO: java.util.Iterator getImageWritersByMIMEType(java.lang.String)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: void <init>(int,int,float[],float,float,float,float,float,float,float,float,float)>
<java.awt.geom.QuadCurve2D: boolean contains(java.awt.geom.Point2D)>
<java.awt.geom.Line2D.Float: void <init>()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>
<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.imageio.ImageWriteParam: int getCompressionMode()>
<com.android.server.SystemServer: void init2()>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>
<android.telephony.SignalStrength: int getEvdoSnr()>
<android.widget.RelativeLayout.LayoutParams: void addRule(int)>
<android.text.LoginFilter.UsernameFilterGMail: void <init>()>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>
<android.text.util.Rfc822Token: void setAddress(java.lang.String)>
<android.graphics.Rect: int describeContents()>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
<android.graphics.Interpolator: int getKeyFrameCount()>
<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)>
<java.awt.event.HierarchyEvent: java.awt.Component getComponent()>
<android.location.Location: void <init>(java.lang.String)>
<com.android.server.ProcessStats: java.lang.String printCurrentState()>
<com.google.android.mms.util.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.text.Layout: float getSpacingMultiplier()>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
<android.graphics.CornerPathEffect: void <init>(float)>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeChars(java.lang.String)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<android.media.AudioTrack: float getMaxVolume()>
<java.awt.color.CMMException: void <init>(java.lang.String)>
<com.google.android.maps.MapView: void displayZoomControls(boolean)>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<com.android.server.status.AnimatedImageView: void onDetachedFromWindow()>
<android.text.style.URLSpan: int describeContents()>
<org.apache.harmony.awt.gl.Crossing: int intersectCubic(double,double,double,double,double,double,double,double,double,double,double,double)>
<com.android.layoutlib.bridge.BridgeTypedArray: float getDimension(int,float)>
<android.pim.vcard.VCardEntry: boolean isIgnorable()>
<android.opengl.GLSurfaceView: void onResume()>
<javax.imageio.stream.FileCacheImageOutputStream: boolean isCachedFile()>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,int[],int)>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>
<android.widget.ExpandableListView.OnChildClickListener: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<com.google.android.mms.pdu.ReadOrigInd: void <init>()>
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue getEncodedStringValue(int)>
<com.android.server.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>
<android.view.ViewManager: void removeView(android.view.View)>
<android.pim.vcard.VCardEntry.ImData: void <init>(int,java.lang.String,int,java.lang.String,boolean)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void setInput(java.io.Reader)>
<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>
<android.widget.ScrollView: boolean pageScroll(int)>
<android.pim.EventRecurrence: void setStartDate(android.text.format.Time)>
<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
<com.android.layoutlib.bridge.BridgeContext: android.content.Context getApplicationContext()>
<android.widget.PopupWindow: void setAnimationStyle(int)>
<org.apache.harmony.awt.gl.font.TextMetricsCalculator: float[] getBaselineOffsets()>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
<android.pim.vcard.VCardParser_V30: void handleParams(java.lang.String)>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<java.awt.image.renderable.RenderContext: void preConcatenateTransform(java.awt.geom.AffineTransform)>
<android.server.search.Searchables: void <init>(android.content.Context)>
<android.widget.AbsListView: void handleDataChanged()>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void removeConsumer(java.awt.image.ImageConsumer)>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getFamily()>
<android.view.WindowManagerPolicy.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>
<com.android.server.status.TickerView: void onSizeChanged(int,int,int,int)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: java.awt.image.BufferedImage read(int)>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.app.ActivityManagerProxy: void reportPss(android.app.IApplicationThread,int)>
<java.awt.im.spi.InputMethod: void setCharacterSubsets(java.lang.Character.Subset[])>
<com.android.server.status.StatusBarService: void deactivate()>
<android.hardware.Camera.Parameters: boolean isZoomSupported()>
<android.view.animation.Transformation: java.lang.String toShortString()>
<java.awt.image.ComponentSampleModel: int getOffset(int,int,int)>
<com.google.android.mms.pdu.PduHeaders: void appendEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>
<android.webkit.WebView: boolean zoomOut()>
<javax.imageio.ImageWriter: boolean canInsertImage(int)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>
<android.view.ViewConfiguration: int getJumpTapTimeout()>
<android.app.ActivityManagerProxy: void unregisterActivityWatcher(android.app.IActivityWatcher)>
<java.awt.image.BufferedImageFilter: void <init>(java.awt.image.BufferedImageOp)>
<java.awt.Font: boolean canDisplay(char)>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>
<android.content.AsyncQueryHandler.WorkerHandler: void <init>(android.os.Looper)>
<com.android.server.KeyInputQueue: void addExcludedDevice(java.lang.String)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock addSource(java.lang.Object)>
<com.google.android.mms.pdu.SendReq: void setDeliveryReport(int)>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<android.net.http.AndroidHttpClient: void finalize()>
<android.location.Geocoder: void <init>(android.content.Context)>
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.media.MediaPlayer: boolean isLooping()>
<java.awt.GraphicsDevice: int getAvailableAcceleratedMemory()>
<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.awt.font.LineMetrics getLineMetrics()>
<java.awt.Graphics: void clipRect(int,int,int,int)>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>
<android.text.method.TimeKeyListener: int getInputType()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>
<java.awt.Component: java.awt.event.MouseMotionListener[] getMouseMotionListeners()>
<java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
<java.awt.Toolkit: java.awt.Image getImage(java.lang.String)>
<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>
<java.awt.Color: java.awt.Color brighter()>
<android.content.AsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>
<java.awt.image.DataBufferByte: void <init>(byte[],int,int)>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>
<android.opengl.GLES10: void glLineWidth(float)>
<android.pim.vcard.VCardEntryConstructor: void propertyValues(java.util.List)>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getRetrieveText()>
<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>
<android.speech.srec.Recognizer.Grammar: void finalize()>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.Provider)>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>
<android.widget.HorizontalScrollView: void addView(android.view.View,int)>
<javax.imageio.IIOParam: int[] getSourceBands()>
<android.location.Location: boolean hasSpeed()>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void createContextMenu(android.view.ContextMenu)>
<com.android.server.NetStatService: void <init>(android.content.Context)>
<android.bluetooth.BluetoothHeadset.ServiceListener: void onServiceConnected()>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>
<android.util.AndroidException: void <init>()>
<android.content.BroadcastReceiver: java.lang.String getResultData()>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>
<org.apache.harmony.awt.ListenerList: java.util.Iterator getSystemIterator()>
<android.pim.vcard.VCardUtils: void insertStructuredPostalDataUsingContactsStruct(int,android.content.ContentProviderOperation.Builder,android.pim.vcard.VCardEntry.PostalData)>
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.commands.svc.PowerCommand: java.lang.String shortHelp()>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>
<java.awt.image.DataBufferDouble: double getElemDouble(int,int)>
<android.view.animation.Animation: long computeDurationHint()>
<java.awt.Color: java.awt.Color getColor(java.lang.String,java.awt.Color)>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>
<android.app.ActivityManager: int getMemoryClass()>
<android.webkit.Plugin: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.MotionEvent: int getActionIndex()>
<android.preference.Preference: void onAttachedToActivity()>
<com.android.layoutlib.bridge.LayoutResult: void <init>(int,java.lang.String)>
<java.beans.PropertyEditor: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
<android.ddm.DdmHandleHello: void register()>
<java.awt.image.BandedSampleModel: void setPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.app.Dialog: void setTitle(int)>
<com.google.android.mms.pdu.RetrieveConf: void <init>()>
<android.graphics.Paint: void setAntiAlias(boolean)>
<android.location.Location: void set(android.location.Location)>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>
<android.util.SparseIntArray: int size()>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>
<android.graphics.Rect: int centerY()>
<android.view.View: void setPadding(int,int,int,int)>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>
<com.google.android.mms.pdu.MultimediaMessagePdu: long getDate()>
<android.content.SearchRecentSuggestionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>
<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setFamily(java.lang.String)>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>
<javax.microedition.khronos.opengles.GL11: boolean glIsBuffer(int)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<android.util.EventLogTags: void <init>()>
<com.android.server.SystemServer: void init1(java.lang.String[])>
<javax.microedition.khronos.opengles.GL11Ext: void glTexParameterfv(int,int,float[],int)>
<android.graphics.Paint: void setStrokeMiter(float)>
<android.widget.TableLayout: void addView(android.view.View)>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>
<android.graphics.Path: void rQuadTo(float,float,float,float)>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.app.Activity: void setTitle(int)>
<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int)>
<android.util.Base64InputStream: long skip(long)>
<android.accounts.Account: int describeContents()>
<android.graphics.drawable.RotateDrawable: boolean onStateChange(int[])>
<android.database.sqlite.SQLiteProgram: void clearBindings()>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>
<javax.imageio.ImageReader: int getTileWidth(int)>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUri(java.lang.String)>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
<android.database.CrossProcessCursor: boolean onMove(int,int)>
<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>
<com.google.android.gles_jni.GLImpl: void glBufferData(int,int,java.nio.Buffer,int)>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>
<android.util.EventLog: int writeEvent(int,int)>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.media.AudioService.VolumeStreamState: boolean adjustIndex(int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph getGlyph(char)>
<android.graphics.ColorMatrix: void setSaturation(float)>
<javax.imageio.event.IIOReadProgressListener: void imageProgress(javax.imageio.ImageReader,float)>
<android.content.IntentFilter: int countActions()>
<java.awt.Graphics2D: void scale(double,double)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,int[],int)>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>
<java.awt.Component: java.awt.Dimension minimumSize()>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>
<android.content.ContentValues: java.util.Set valueSet()>
<android.view.ContextThemeWrapper: void setTheme(int)>
<android.widget.Scroller: int timePassed()>
<java.awt.image.PackedColorModel: int[] getMasks()>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo leading(int)>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.BridgeContext,boolean)>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>
<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,int[],int)>
<java.awt.image.renderable.ParameterBlock: void <init>(java.util.Vector,java.util.Vector)>
<java.awt.Rectangle: double getWidth()>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>
<com.android.commands.pm.Pm: void run(java.lang.String[])>
<android.media.MediaPlayer: void <init>()>
<android.opengl.GLES10: void glViewport(int,int,int,int)>
<com.android.server.DemoDataSet: void add(android.content.Context)>
<android.graphics.Canvas: void scale(float,float)>
<com.google.android.util.AbstractMessageParser.Video: boolean isMedia()>
<org.apache.harmony.awt.gl.Crossing: int intersectPath(java.awt.geom.PathIterator,double,double,double,double)>
<android.os.RemoteCallbackList: int beginBroadcast()>
<android.widget.ExpandableListAdapter: boolean isChildSelectable(int,int)>
<android.provider.Settings.NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>
<java.awt.font.TextLayout.CaretPolicy: void <init>()>
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean)>
<org.apache.harmony.awt.ComponentInternals: org.apache.harmony.awt.ComponentInternals getComponentInternals()>
<android.media.MediaRecorder: void setVideoSize(int,int)>
<javax.microedition.khronos.opengles.GL10: void glBlendFunc(int,int)>
<com.google.android.mms.pdu.CharacterSets: java.lang.String getMimeName(int)>
<java.awt.Toolkit: java.awt.event.AWTEventListener[] getAWTEventListeners()>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>
<android.os.Parcel: android.os.Parcel obtain()>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>
<android.webkit.CookieManager: void removeAllCookie()>
<android.view.SurfaceHolder: void setFormat(int)>
<org.apache.harmony.awt.gl.image.JpegDecoder: void decodeImage()>
<android.os.Message: long getWhen()>
<javax.imageio.stream.ImageOutputStream: void writeShorts(short[],int,int)>
<java.awt.Graphics2D: java.awt.Composite getComposite()>
<android.pim.vcard.VCardEntryConstructor: void startProperty()>
<org.apache.harmony.awt.gl.font.CompositeFont: java.lang.String toString()>
<java.awt.image.Raster: java.awt.image.WritableRaster createPackedRaster(int,int,int,int,int,java.awt.Point)>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>
<android.text.format.Time: void <init>()>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
<android.location.LocationProvider: int getPowerRequirement()>
<java.awt.image.ShortLookupTable: void <init>(int,short[][])>
<org.apache.harmony.awt.gl.image.DecodingImageSource: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onKey(int,int[])>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,int)>
<android.pim.vcard.VCardEntry: void addProperty(android.pim.vcard.VCardEntry.Property)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.speech.RecognitionService.Callback: void bufferReceived(byte[])>
<com.google.android.gles_jni.GLImpl: void glPointParameterx(int,int)>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int,int)>
<javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.NativeEventQueue getNativeEventQueue()>
<android.view.accessibility.AccessibilityEvent: boolean isFullScreen()>
<javax.imageio.stream.FileCacheImageInputStream: int read()>
<android.widget.GridView: void setHorizontalSpacing(int)>
<android.os.Debug: int setGlobalAllocationLimit(int)>
<java.awt.image.ColorModel: int getNumComponents()>
<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames(java.util.Locale)>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>
<android.renderscript.Program.BaseProgramBuilder: void addOutput(android.renderscript.Element)>
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<java.awt.font.GraphicAttribute: java.awt.geom.Rectangle2D getBounds()>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>
<javax.imageio.stream.ImageOutputStream: void write(byte[])>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>
<android.view.KeyEvent: int getMaxKeyCode()>
<android.content.IntentFilter: int describeContents()>
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>
<android.util.Base64InputStream: boolean markSupported()>
<android.provider.Telephony.Sms.Draft: boolean saveMessage(android.content.ContentResolver,android.net.Uri,java.lang.String)>
<java.awt.image.PixelGrabber: int getHeight()>
<java.awt.image.ColorModel: void finalize()>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>
<android.content.res.Configuration: boolean needNewResources(int,int)>
<java.awt.font.TextHitInfo: boolean equals(java.lang.Object)>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Paint getPaint()>
<android.provider.SyncStateContract.Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>
<java.awt.geom.AffineTransform: double getTranslateY()>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
<android.pim.vcard.VCardEntryConstructor: void <init>(java.lang.String,java.lang.String,boolean,int,android.accounts.Account)>
<android.ddm.DdmRegister: void registerHandlers()>
<android.database.MergeCursor: void deactivate()>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>
<javax.microedition.khronos.opengles.GL10: void glLoadIdentity()>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>
<java.awt.image.RenderedImage: int getMinY()>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>
<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>
<android.hardware.Camera: void finalize()>
<android.preference.Preference: boolean shouldDisableDependents()>
<android.text.Spannable.Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getDescent()>
<javax.imageio.stream.ImageInputStreamImpl: long readBits(int)>
<java.awt.image.LookupTable: int getOffset()>
<android.database.AbstractCursor: int getColumnCount()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setDataElements(int,int,int,int,java.lang.Object)>
<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.view.View: boolean isDuplicateParentStateEnabled()>
<android.os.ParcelFormatException: void <init>(java.lang.String)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<android.app.admin.DevicePolicyManager: void wipeData(int)>
<android.pim.vcard.VCardComposer.HandlerForOutputStream: void finalize()>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>
<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<org.apache.harmony.awt.gl.image.PNGChunk: long getUnsignedInt(int)>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>
<android.util.SparseArray: int size()>
<android.view.View: boolean isClickable()>
<java.awt.font.ShapeGraphicAttribute: float getAdvance()>
<java.awt.geom.Dimension2D: double getHeight()>
<android.pim.vcard.VCardConfig: boolean shouldRefrainQPToNameProperties(int)>
<android.graphics.Path: void set(android.graphics.Path)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>
<com.android.layoutlib.bridge.BridgeTypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>
<java.awt.EventQueue: java.awt.AWTEvent peekEvent(int)>
<java.awt.image.DataBufferDouble: void <init>(double[][],int)>
<java.awt.image.DataBufferDouble: double[][] getBankData()>
<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>
<java.awt.color.ICC_Profile: int getPCSType()>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>
<android.gesture.GestureOverlayView: int getGestureColor()>
<javax.imageio.stream.FileImageOutputStream: int read()>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
<android.pim.ICalendar.Component: java.util.List getProperties(java.lang.String)>
<com.google.android.mms.pdu.ReadOrigInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
<android.app.ActivityThread.PackageInfo: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>
<android.text.style.StyleSpan: void <init>(android.os.Parcel)>
<javax.imageio.ImageReader: boolean isSeekForwardOnly()>
<com.google.android.util.AbstractMessageParser.Format: void <init>(char,boolean)>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>
<com.google.android.mms.pdu.SendConf: void <init>()>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap)>
<android.pim.vcard.VCardEntry: java.lang.String getDisplayName()>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<android.graphics.ColorMatrix: void setRGB2YUV()>
<android.text.style.URLSpan: void <init>(android.os.Parcel)>
<android.pim.ICalendar.Parameter: java.lang.String toString()>
<org.apache.harmony.awt.ClipRegion: void intersect(java.awt.Rectangle)>
<android.text.Html.ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>
<android.pim.vcard.VCardConfig: boolean usesAndroidSpecificProperty(int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.os.AsyncTask: java.lang.Object get()>
<android.webkit.WebSettings: int getUserAgent()>
<android.text.method.KeyListener: int getInputType()>
<com.google.android.gles_jni.GLImpl: void glLightModelx(int,int)>
<javax.imageio.stream.FileCacheImageOutputStream: long length()>
<android.app.SearchableInfo: int getVoiceMaxResults()>
<android.view.animation.AnimationSet: void reset()>
<android.app.ApplicationThreadProxy: void scheduleConfigurationChanged(android.content.res.Configuration)>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.view.ViewParent: void requestLayout()>
<android.pim.vcard.VCardEntryCounter: void propertyParamValue(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String trimTrailingWhitespace(java.lang.String)>
<java.awt.image.BufferedImage: int getMinTileY()>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>
<android.text.Selection: void setSelection(android.text.Spannable,int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>
<android.gesture.Gesture: void <init>()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ListView: int getFooterViewsCount()>
<android.pim.vcard.VCardBuilder: void clear()>
<android.location.Address: java.lang.String getSubAdminArea()>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getClassName()>
<android.renderscript.RenderScript.RSMessage: void run()>
<java.awt.geom.Point2D: boolean equals(java.lang.Object)>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDisableClientState(int)>
<android.os.AsyncTask: void <init>()>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<android.opengl.GLES20: void glUniform2f(int,float,float)>
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>
<android.pim.vcard.VCardComposer: boolean init()>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<android.database.CursorWindow: boolean isBlob(int,int)>
<android.app.UiModeManager: int getNightMode()>
<com.android.server.am.ActivityManagerService: void unregisterActivityWatcher(android.app.IActivityWatcher)>
<javax.imageio.ImageReadParam: int getSourceMaxProgressivePass()>
<android.location.Address: boolean hasLongitude()>
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>
<android.util.StateSet: boolean stateSetMatches(int[],int)>
<android.location.Address: void setLatitude(double)>
<android.graphics.drawable.shapes.OvalShape: void <init>()>
<android.accounts.OperationCanceledException: void <init>()>
<java.beans.IndexedPropertyDescriptor: void setIndexedReadMethod(java.lang.reflect.Method)>
<java.awt.geom.Arc2D: java.awt.geom.Rectangle2D makeBounds(double,double,double,double)>
<com.android.server.status.IconData: void copyFrom(com.android.server.status.IconData)>
<java.awt.font.TextHitInfo: int getInsertionIndex()>
<com.android.server.LoadAverageService: android.os.IBinder onBind(android.content.Intent)>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>
<android.pim.vcard.VCardUtils: boolean areAllEmpty(java.lang.String[])>
<android.location.Criteria: boolean isCostAllowed()>
<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String getEncoding()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>
<android.widget.ScrollView: boolean fullScroll(int)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<android.net.Uri.Builder: void <init>()>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>
<java.awt.font.ShapeGraphicAttribute: java.awt.geom.Rectangle2D getBounds()>
<java.awt.geom.Area: void <init>()>
<android.widget.TextView: int getTotalPaddingTop()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glLineWidth(float)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,java.nio.IntBuffer)>
<java.awt.Font: byte getBaselineFor(char)>
<android.widget.DoubleDigitManager.CallBack: boolean singleDigitIntermediate(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setStroke(java.awt.Stroke)>
<android.content.pm.PackageItemInfo: void <init>()>
<org.apache.harmony.awt.gl.font.FontManager: java.awt.peer.FontPeer getDefaultFont(int,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>
<com.google.android.mms.pdu.PduParser: long parseIntegerValue(java.io.ByteArrayInputStream)>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(java.nio.IntBuffer)>
<android.content.Context: void revokeUriPermission(android.net.Uri,int)>
<java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void unsetCompression()>
<android.media.AudioTrack: void release()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<android.view.View: void setNextFocusRightId(int)>
<android.app.Dialog: android.view.Window getWindow()>
<android.pim.vcard.VCardConfig: boolean isJapaneseDevice(int)>
<java.awt.BufferCapabilities: boolean isFullScreenRequired()>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<java.awt.image.LookupOp: void <init>(java.awt.image.LookupTable,java.awt.RenderingHints)>
<com.android.layoutlib.bridge.BridgeResources: int getColor(int)>
<android.drm.mobile1.DrmRawContent: void finalize()>
<javax.imageio.spi.ImageReaderSpi: javax.imageio.ImageReader createReaderInstance()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int nextToken()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>
<android.widget.ListView: void addFooterView(android.view.View)>
<java.awt.Component: boolean isValid()>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>
<android.renderscript.ProgramStore.Builder: void setDitherEnable(boolean)>
<java.awt.image.ColorConvertOp: java.awt.color.ICC_Profile[] getICC_Profiles()>
<android.text.Annotation: int getSpanTypeId()>
<android.app.Dialog: void show()>
<android.gesture.GestureOverlayView: void setOrientation(int)>
<java.awt.color.ICC_Profile: byte[] getData()>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>
<android.preference.VolumePreference.SeekBarVolumizer: void stop()>
<android.content.res.AssetManager.AssetInputStream: int read(byte[],int,int)>
<android.webkit.WebSettings: void setSupportZoom(boolean)>
<android.pim.ICalendar.FormatException: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getNextRightHit(java.awt.font.TextHitInfo)>
<android.widget.BaseAdapter: int getViewTypeCount()>
<java.beans.IndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class)>
<android.content.Context: java.lang.CharSequence getText(int)>
<javax.imageio.ImageWriteParam: void setCompressionMode(int)>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<java.awt.Component: void setCursor(java.awt.Cursor)>
<android.media.Metadata.TimedText: void <init>(java.util.Date,int,java.lang.String)>
<android.os.HandlerThread: boolean quit()>
<java.awt.GraphicsEnvironment: void preferLocaleFonts()>
<android.view.Display: int getWidth()>
<java.beans.IndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<android.text.style.ForegroundColorSpan: int describeContents()>
<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>
<android.os.ConditionVariable: void <init>()>
<android.hardware.Camera: void addCallbackBuffer(byte[])>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceDisconnected()>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.content.res.Configuration: void setTo(android.content.res.Configuration)>
<com.android.layoutlib.bridge.BridgeContext: int checkCallingOrSelfPermission(java.lang.String)>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
<java.awt.image.Kernel: int getYOrigin()>
<java.awt.geom.Arc2D: boolean contains(double,double,double,double)>
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<android.widget.VideoView: int getDuration()>
<android.pim.vcard.VCardEntry: java.util.List getNotes()>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.peer.FontPeer getFontPeer(java.awt.Font)>
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>
<org.apache.harmony.awt.state.MenuState: boolean isFontSet()>
<android.widget.PopupWindow: void setInputMethodMode(int)>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>
<android.inputmethodservice.Keyboard: void setVerticalGap(int)>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>
<android.telephony.SmsMessage.SubmitPdu: java.lang.String toString()>
<java.awt.Component: void firePropertyChange(java.lang.String,long,long)>
<java.awt.image.ColorModel: int getTransparency()>
<android.view.View: void refreshDrawableState()>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>
<java.awt.geom.Line2D: void <init>()>
<java.awt.geom.Point2D.Double: double getY()>
<android.app.Activity: boolean moveTaskToBack(boolean)>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>
<javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeCount()>
<javax.microedition.khronos.opengles.GL10: void glColorPointer(int,int,int,java.nio.Buffer)>
<java.awt.Component: boolean keyUp(java.awt.Event,int)>
<android.os.Bundle: int[] getIntArray(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,float[],int)>
<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>
<com.android.server.status.IconMerger: void onLayout(boolean,int,int,int,int)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getRssUrl(java.lang.String)>
<android.bluetooth.BluetoothClass: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
<android.graphics.Rect: boolean isEmpty()>
<android.os.Parcel: double[] createDoubleArray()>
<android.content.pm.PackageParser.Component: android.content.ComponentName getComponentName()>
<java.awt.geom.QuadCurve2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.text.method.DigitsKeyListener: void <init>()>
<com.google.android.gles_jni.GLImpl: void glMatrixMode(int)>
<android.text.style.DrawableMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<java.awt.geom.CubicCurve2D.Double: double getX2()>
<android.os.Bundle: long getLong(java.lang.String)>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphMetrics getGlyphPointMetrics()>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>
<com.google.android.mms.pdu.ReadRecInd: void <init>(com.google.android.mms.pdu.EncodedStringValue,byte[],int,int,com.google.android.mms.pdu.EncodedStringValue[])>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPart(int)>
<java.awt.image.WritableRaster: void setSamples(int,int,int,int,int,float[])>
<java.awt.Polygon: boolean contains(java.awt.geom.Rectangle2D)>
<android.os.Bundle: int size()>
<android.app.Activity: void onWindowFocusChanged(boolean)>
<android.widget.GridView: void layoutChildren()>
<java.awt.event.MouseWheelEvent: int getScrollType()>
<android.text.Layout: int getEllipsizedWidth()>
<android.graphics.Paint: void clearShadowLayer()>
<android.content.SyncAdapterType: java.lang.String toString()>
<android.database.Cursor: boolean move(int)>
<com.android.tools.layoutlib.create.OverrideMethod: void setDefaultListener(com.android.tools.layoutlib.create.MethodListener)>
<java.awt.image.VolatileImage: int getHeight()>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: boolean getOptimizeHuffmanTables()>
<javax.imageio.ImageWriter: java.lang.Object getOutput()>
<android.widget.ViewSwitcher.ViewFactory: android.view.View makeView()>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<javax.microedition.khronos.opengles.GL10: void glHint(int,int)>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>
<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>
<java.awt.image.RenderedImage: int getMinTileX()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>
<android.widget.ExpandableListAdapter: void onGroupExpanded(int)>
<javax.imageio.IIOParam: void setSourceBands(int[])>
<android.pim.vcard.VCardParser_V21: void handleEncoding(java.lang.String)>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>
<java.awt.Toolkit: java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight)>
<java.awt.geom.Rectangle2D: void <init>()>
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabled(int)>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>
<java.awt.FontMetrics: int charsWidth(char[],int,int)>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void setNormal(float,float,float)>
<android.app.Activity: void onStart()>
<java.awt.font.LineBreakMeasurer: int nextOffset(float)>
<android.pim.vcard.VCardParser_V21: void <init>(android.pim.vcard.VCardSourceDetector)>
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>
<android.net.NetworkInfo: int getType()>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<java.awt.image.SampleModel: float[] getPixels(int,int,int,int,float[],java.awt.image.DataBuffer)>
<android.widget.DialerFilter: boolean isQwertyKeyboard()>
<android.widget.ProgressBar: void incrementProgressBy(int)>
<android.provider.Contacts.People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitSource(java.lang.String,java.lang.String)>
<android.widget.ProgressBar: void drawableStateChanged()>
<android.server.BluetoothService: boolean disable()>
<java.awt.image.SinglePixelPackedSampleModel: int getSample(int,int,int,java.awt.image.DataBuffer)>
<android.text.style.AlignmentSpan: android.text.Layout.Alignment getAlignment()>
<com.google.android.util.AbstractMessageParser.Acronym: java.util.List getInfo()>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>
<android.database.AbstractCursor: boolean isClosed()>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSample(int,int,int,double)>
<android.provider.ContactsContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.app.SearchDialog.SearchAutoComplete: void performCompletion()>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.hardware.Camera.Parameters: void setColorEffect(java.lang.String)>
<android.os.Debug: int getThreadExternalAllocSize()>
<java.awt.geom.Arc2D: void <init>(int)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.mms.pdu.DeliveryInd: long getDate()>
<android.content.pm.PackageParser.Service: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ServiceInfo)>
<android.content.res.Resources: boolean getBoolean(int)>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>
<javax.imageio.ImageReader: int getNumThumbnails(int)>
<android.net.Uri: java.lang.String getEncodedAuthority()>
<java.awt.image.IndexColorModel: java.math.BigInteger getValidPixels()>
<org.apache.harmony.awt.state.MenuState: void setSize(int,int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(int)>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>
<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>
<android.util.TypedValue: java.lang.String toString()>
<android.view.inputmethod.InputMethodSession: void finishInput()>
<android.text.Layout: android.text.Layout.Directions getLineDirections(int)>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<java.awt.image.renderable.RenderContext: void setRenderingHints(java.awt.RenderingHints)>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>
<java.awt.geom.Line2D: double getX2()>
<android.graphics.Paint: boolean isDither()>
<android.provider.Contacts.People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>
<android.graphics.Path: void <init>()>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.im.spi.InputMethodDescriptor: java.awt.Image getInputMethodIcon(java.util.Locale)>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>
<java.awt.event.WindowListener: void windowDeactivated(java.awt.event.WindowEvent)>
<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>
<javax.microedition.khronos.opengles.GL11: void glBindBuffer(int,int)>
<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.util.SparseBooleanArray: void clear()>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>
<com.android.layoutlib.bridge.BridgeTypedArray: java.lang.String getPositionDescription()>
<android.database.Cursor: int getColumnCount()>
<javax.imageio.ImageReader: javax.imageio.IIOImage readAll(int,javax.imageio.ImageReadParam)>
<java.awt.event.WindowAdapter: void windowLostFocus(java.awt.event.WindowEvent)>
<android.widget.SimpleCursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<java.awt.BasicStroke: boolean equals(java.lang.Object)>
<java.awt.Component: java.awt.Point location()>
<java.awt.Font: int canDisplayUpTo(java.lang.String)>
<java.awt.geom.Point2D.Double: void <init>()>
<android.view.View: int getSuggestedMinimumWidth()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>
<java.awt.geom.Rectangle2D.Float: double getX()>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.gl.color.NativeCMM: void removeHandle(java.awt.color.ICC_Profile)>
<com.android.tools.layoutlib.create.OverrideMethod: double invokeD(java.lang.String,boolean,java.lang.Object)>
<java.awt.GraphicsConfiguration: java.awt.geom.AffineTransform getNormalizingTransform()>
<android.renderscript.Program.BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>
<java.awt.image.IndexColorModel: int[] getComponents(int,int[],int)>
<java.awt.color.ColorSpace: float[] fromCIEXYZ(float[])>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReaderSpi: void onRegistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.pim.vcard.VCardInterpreterCollection: void propertyName(java.lang.String)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>
<javax.imageio.spi.ServiceRegistry: boolean deregisterServiceProvider(java.lang.Object,java.lang.Class)>
<android.graphics.YuvImage: int[] getStrides()>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>
<javax.imageio.spi.ServiceRegistry: void registerServiceProviders(java.util.Iterator)>
<java.awt.geom.CubicCurve2D: double getFlatnessSq(double[],int)>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.util.AttributeSet: int getAttributeListValue(int,java.lang.String[],int)>
<android.app.ActivityThread.PackageInfo: java.lang.String getPackageName()>
<java.awt.image.BufferedImage: java.awt.image.Raster getTile(int,int)>
<android.widget.ExpandableListAdapter: long getChildId(int,int)>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: android.graphics.Bitmap getBitmap()>
<android.webkit.WebView: android.webkit.PluginList getPluginList()>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.net.TrafficStats: long getTotalRxPackets()>
<java.awt.event.AdjustmentEvent: java.awt.Adjustable getAdjustable()>
<java.awt.image.PackedColorModel: java.awt.image.WritableRaster getAlphaRaster(java.awt.image.WritableRaster)>
<java.awt.HeadlessToolkit: org.apache.harmony.awt.wtk.GraphicsFactory getGraphicsFactory()>
<android.text.Layout: float getLineRight(int)>
<java.awt.color.ColorSpace: float[] toCIEXYZ(float[])>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<com.google.android.gles_jni.GLImpl: void glRotatef(float,float,float,float)>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
<android.os.Parcel: void writeLong(long)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.widget.SimpleAdapter: java.lang.Object getItem(int)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<com.android.server.am.UsageStatsService: void publish(android.content.Context)>
<org.apache.harmony.awt.gl.font.Glyph: void setImage(java.awt.image.BufferedImage)>
<java.awt.event.InputMethodEvent: void <init>(java.awt.Component,int,java.text.AttributedCharacterIterator,int,java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.apache.harmony.awt.gl.font.AndroidFontProperty: java.lang.String toString()>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>
<android.content.res.Resources.NotFoundException: void <init>()>
<com.android.commands.svc.Svc: void main(java.lang.String[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>
<android.os.Bundle: void putChar(java.lang.String,char)>
<android.content.ComponentName: int describeContents()>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>
<java.awt.image.ComponentSampleModel: int[] getSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: short[] getDataShort(java.awt.image.DataBuffer)>
<java.awt.Rectangle: boolean inside(int,int)>
<android.media.AudioManager: boolean isMusicActive()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.provider.Contacts.ContactMethods: java.lang.String encodePredefinedImProtocol(int)>
<javax.imageio.stream.ImageInputStream: long getStreamPosition()>
<com.android.common.OperationScheduler: void setTriggerTimeMillis(long)>
<javax.imageio.spi.ImageWriterSpi: javax.imageio.ImageWriter createWriterInstance()>
<android.view.View: boolean isScrollbarFadingEnabled()>
<org.apache.harmony.awt.gl.color.LUTColorConverter: short[] getFromsRGBto16lRGB_LUT()>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<org.apache.harmony.awt.wtk.NativeWindow: java.awt.Rectangle getBounds()>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(java.nio.FloatBuffer)>
<com.google.android.mms.pdu.NotificationInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
<android.os.Handler: void handleMessage(android.os.Message)>
<java.awt.Rectangle: boolean equals(java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,float[],int)>
<android.hardware.Camera.Parameters: void setGpsProcessingMethod(java.lang.String)>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>
<android.os.BatteryStats.Uid: void noteVideoTurnedOffLocked()>
<android.graphics.Matrix: boolean postRotate(float,float,float)>
<android.view.animation.LayoutAnimationController: void setDelay(float)>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
<android.pim.vcard.VCardParser_V30: java.lang.String getLine()>
<org.apache.harmony.x.imageio.spi.FileIOSSpi: javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object,boolean,java.io.File)>
<javax.imageio.stream.FileCacheImageOutputStream: boolean isCachedMemory()>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>
<android.content.Context: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>
<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,boolean,boolean)>
<android.content.Context: boolean stopService(android.content.Intent)>
<java.awt.Rectangle: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>
<android.view.ViewStub: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: void stopAppSwitches()>
<android.hardware.Camera.Parameters: void setPreviewFormat(int)>
<android.content.pm.ServiceInfo: int describeContents()>
<android.widget.ListView: void layoutChildren()>
<android.content.pm.Signature: java.lang.String toCharsString()>
<com.google.android.gles_jni.GLImpl: void glBindBuffer(int,int)>
<android.view.animation.OvershootInterpolator: void <init>()>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: void <init>()>
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>
<java.awt.image.BufferedImage: void coerceData(boolean)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
<com.google.android.mms.pdu.PduComposer: void appendDateValue(long)>
<java.awt.image.BandCombineOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<java.awt.geom.Arc2D.Double: void setArc(double,double,double,double,double,double,int)>
<com.android.server.KeyInputQueue: int getTrackballScancodeState(int)>
<com.android.defcontainer.DefaultContainerService: boolean copyToFile(java.io.File,java.io.FileOutputStream)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setTransformedClip(org.apache.harmony.awt.gl.MultiRectArea)>
<java.awt.geom.RectangularShape: double getY()>
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>
<com.android.server.am.ActivityManagerService: void forceStopPackage(java.lang.String)>
<android.telephony.ServiceState: boolean getRoaming()>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.app.IActivityManager.WaitResult: void <init>()>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package)>
<android.widget.TextView: int getLineHeight()>
<javax.imageio.stream.MemoryCacheImageInputStream: void close()>
<javax.imageio.ImageReader: float getAspectRatio(int)>
<android.view.MotionEvent: int getDeviceId()>
<android.app.ActivityManagerProxy: void moveTaskToFront(int)>
<android.app.Instrumentation: void <init>()>
<android.widget.TextView: int getBaseline()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getRootName()>
<android.os.Process: boolean supportsProcesses()>
<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
<android.widget.SlidingDrawer: void close()>
<org.apache.harmony.awt.gl.ImageSurface: long getCachedData(boolean)>
<android.app.ExpandableListActivity: long getSelectedPosition()>
<android.view.MenuItem: boolean isChecked()>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>
<org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object,boolean,java.io.File)>
<android.text.style.SubscriptSpan: void <init>()>
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitGL()>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>
<android.app.Application: void onCreate()>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>
<com.google.android.mms.pdu.CharacterSets: int getMibEnumValue(java.lang.String)>
<java.awt.image.DataBufferFloat: float[][] getBankData()>
<java.awt.geom.Arc2D.Float: void <init>(float,float,float,float,float,float,int)>
<java.awt.BufferCapabilities.FlipContents: int hashCode()>
<javax.imageio.ImageWriter: int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>
<com.google.android.gles_jni.GLImpl: void glPushMatrix()>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.net.Uri.Builder: android.net.Uri build()>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<org.apache.harmony.awt.im.InputMethodContext: java.text.AttributedCharacterIterator getCommittedText(int,int,java.text.AttributedCharacterIterator.Attribute[])>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>
<android.pim.vcard.VCardEntry.OrganizationData: java.lang.String getFormattedString()>
<javax.microedition.khronos.opengles.GL11: void glColor4ub(byte,byte,byte,byte)>
<java.awt.image.BufferedImage: boolean isTileWritable(int,int)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>
<android.content.pm.ResolveInfo: void <init>()>
<java.awt.geom.Point2D.Double: double getX()>
<java.awt.Toolkit: java.awt.Dimension getScreenSize()>
<android.text.style.AlignmentSpan.Standard: void <init>(android.os.Parcel)>
<com.google.android.mms.pdu.SendReq: long getMessageSize()>
<java.awt.image.WritableRaster: void setSample(int,int,int,double)>
<org.apache.harmony.awt.gl.font.TextRunSegment: java.lang.Object clone()>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>
<java.awt.font.GraphicAttribute: int getAlignment()>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Part getPart(int)>
<org.apache.harmony.awt.gl.font.CompositeFont: int getMissingGlyphCode()>
<android.app.ApplicationThreadProxy: void getMemoryInfo(android.os.Debug.MemoryInfo)>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>
<android.widget.ExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>
<android.net.LocalSocket: boolean isInputShutdown()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterSpi: javax.imageio.ImageWriter createWriterInstance(java.lang.Object)>
<org.apache.harmony.awt.gl.font.Glyph: char getChar()>
<com.android.layoutlib.bridge.BridgeResources: int getDimensionPixelSize(int)>
<android.view.MotionEvent: float getX(int)>
<java.awt.geom.QuadCurve2D.Float: java.awt.geom.Point2D getP2()>
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>
<android.view.View: void setAnimation(android.view.animation.Animation)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Shape getGlyphOutline(int)>
<java.awt.font.TextHitInfo: boolean equals(java.awt.font.TextHitInfo)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getJpegThumbnailSize()>
<java.awt.image.VolatileImage: java.awt.image.ImageProducer getSource()>
<org.apache.harmony.awt.im.InputMethodContext: void reconvert()>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,float[],int)>
<com.google.android.util.AbstractMessageParser.Token: boolean isMedia()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>
<java.awt.Color: java.awt.Color getColor(java.lang.String,int)>
<javax.imageio.stream.ImageOutputStream: void write(int)>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<javax.imageio.spi.ImageReaderSpi: void <init>()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>
<android.widget.DatePicker: int getDayOfMonth()>
<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>
<android.net.wifi.WifiManager: boolean saveConfiguration()>
<android.provider.Settings.Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glPointSizex(int)>
<java.awt.image.BufferedImage: int getHeight(java.awt.image.ImageObserver)>
<android.app.Activity: boolean onSearchRequested()>
<android.gesture.GestureStore: void load(java.io.InputStream)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.opengl.GLES10: void glLightModelf(int,float)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReaderSpi: java.lang.String getDescription(java.util.Locale)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.io.File getTempFontFile()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>
<android.opengl.GLES20: boolean glIsBuffer(int)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>
<javax.imageio.metadata.IIOMetadataNode: void setIdAttribute(java.lang.String,boolean)>
<java.awt.event.MouseAdapter: void mouseReleased(java.awt.event.MouseEvent)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>
<android.location.LocationProvider: int getAccuracy()>
<android.graphics.Matrix: boolean rectStaysRect()>
<android.pim.vcard.VCardEntry.OrganizationData: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>
<java.awt.Polygon: void reset()>
<java.awt.image.PixelGrabber: void <init>(java.awt.image.ImageProducer,int,int,int,int,int[],int,int)>
<android.graphics.RectF: void set(android.graphics.Rect)>
<com.google.android.mms.pdu.EncodedStringValue: void <init>(byte[])>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<com.google.android.mms.pdu.SendReq: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
<java.beans.IntrospectionException: void <init>(java.lang.String)>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.opengl.GLES20: void glLineWidth(float)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>
<android.widget.SlidingDrawer: void onMeasure(int,int)>
<java.awt.image.DirectColorModel: int getBlue(int)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterSpi: boolean canEncodeImage(javax.imageio.ImageTypeSpecifier)>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.pim.vcard.VCardParser_V30: void handleAnyParam(java.lang.String,java.lang.String)>
<java.awt.image.DataBufferShort: short[] getData(int)>
<javax.imageio.stream.ImageInputStreamImpl: int readUnsignedShort()>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>
<android.database.StaleDataException: void <init>()>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>
<android.telephony.PhoneStateListener: void onDataActivity(int)>
<android.widget.TableLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<java.awt.geom.CubicCurve2D: double getCtrlY1()>
<android.widget.VideoView: boolean canPause()>
<java.beans.FeatureDescriptor: java.lang.String getShortDescription()>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<java.awt.image.ImageConsumer: void setColorModel(java.awt.image.ColorModel)>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>
<android.app.Activity: android.view.View onCreatePanelView(int)>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>
<org.apache.harmony.awt.wtk.NativeIM: void setCharacterSubsets(java.lang.Character.Subset[])>
<com.android.server.am.ActivityManagerService: void killApplicationProcess(java.lang.String,int)>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>
<org.apache.harmony.awt.gl.Crossing: int crossCubic(double,double,double,double,double,double,double,double,double,double)>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
<android.widget.AbsListView: void setCacheColorHint(int)>
<com.google.android.mms.pdu.Base64: byte[] decodeBase64(byte[])>
<android.widget.AbsListView: boolean isInFilterMode()>
<android.view.LayoutInflater: android.view.LayoutInflater from(android.content.Context)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>
<android.database.CursorWindow: long getLong(int,int)>
<android.widget.SimpleAdapter: long getItemId(int)>
<com.android.layoutlib.bridge.BridgeContext: void sendStickyBroadcast(android.content.Intent)>
<java.awt.image.DataBuffer: void <init>(int,int,int,int[])>
<android.media.AudioTrack: int getSampleRate()>
<android.graphics.Rect: void set(android.graphics.Rect)>
<com.android.layoutlib.bridge.BridgeTypedArray: int getLayoutDimension(int,int)>
<com.android.server.DevicePolicyManagerService: void reportFailedPasswordAttempt()>
<android.os.BatteryStats.Uid.Proc: long getTimeAtCpuSpeedStep(int,int)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,int[],int)>
<javax.microedition.khronos.opengles.GL10: void glStencilFunc(int,int,int)>
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.graphics.Picture: void endRecording()>
<java.beans.FeatureDescriptor: void <init>()>
<java.beans.PropertyEditor: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<android.preference.VolumePreference.SeekBarVolumizer: void <init>(android.content.Context,android.widget.SeekBar,int)>
<java.awt.image.AffineTransformOp: java.awt.geom.AffineTransform getTransform()>
<com.google.android.mms.pdu.NotificationInd: void setContentClass(int)>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<java.awt.font.TextLayout: boolean isVertical()>
<android.database.Cursor: float getFloat(int)>
<javax.imageio.stream.IIOByteBuffer: int getOffset()>
<java.awt.font.GlyphMetrics: int getType()>
<com.android.server.status.AnimatedImageView: void setImageResource(int)>
<android.view.animation.AnimationSet: void setRepeatMode(int)>
<android.ddm.DdmHandleNativeHeap: void register()>
<android.content.pm.FeatureInfo: void <init>()>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Dialog: android.view.View onCreatePanelView(int)>
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>
<android.app.ProgressDialog: void incrementProgressBy(int)>
<android.pim.vcard.VCardInterpreter: void end()>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>
<android.os.Debug: int getGlobalFreedSize()>
<java.awt.image.IndexColorModel: java.awt.image.BufferedImage convertToIntDiscrete(java.awt.image.Raster,boolean)>
<org.apache.harmony.awt.wtk.NativeIM: java.awt.Image getInputMethodIcon(java.util.Locale)>
<android.graphics.PointF: boolean equals(float,float)>
<java.awt.image.renderable.ParameterBlock: java.util.Vector getParameters()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visit(java.lang.String,java.lang.Object)>
<org.apache.harmony.awt.wtk.NativeIM: void dispatchEvent(java.awt.AWTEvent)>
<java.awt.image.Raster: java.awt.Rectangle getBounds()>
<android.graphics.RectF: void <init>(android.graphics.RectF)>
<com.android.server.ProcessStats: int getLastIrqTime()>
<java.awt.im.spi.InputMethod: void reconvert()>
<com.android.layoutlib.bridge.Bridge: java.lang.String[] resolveResourceValue(int)>
<java.awt.Toolkit: java.awt.Image getImage(java.net.URL)>
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.media.AudioTrack: int getPlaybackHeadPosition()>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>
<java.awt.geom.Area: void intersect(java.awt.geom.Area)>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>
<javax.imageio.ImageReader: java.lang.String getFormatName()>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<android.view.ScaleGestureDetector: float getPreviousSpan()>
<com.android.server.LightsService.Light: void pulse()>
<javax.imageio.stream.ImageInputStream: int read(byte[],int,int)>
<java.awt.Component: void setBackground(java.awt.Color)>
<java.awt.geom.RectangularShape: void setFrameFromCenter(double,double,double,double)>
<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>
<android.widget.Gallery: void dispatchSetPressed(boolean)>
<android.widget.AutoCompleteTextView: void performCompletion()>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>
<android.net.Uri: java.lang.String getPath()>
<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>
<android.database.CursorJoiner: boolean hasNext()>
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>
<android.media.MediaRecorder: int getAudioSourceMax()>
<android.pim.vcard.VCardParser_V30: void handleParamWithoutName(java.lang.String)>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.preference.Preference: void notifyChanged()>
<android.telephony.gsm.SmsMessage: boolean isReplyPathPresent()>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String lookupPrefix(java.lang.String)>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStroke(java.lang.String)>
<android.view.ViewStub: int getLayoutResource()>
<android.hardware.Camera.Parameters: float getVerticalViewAngle()>
<android.renderscript.ProgramVertex.MatrixAllocation: void <init>(android.renderscript.RenderScript)>
<java.awt.geom.FlatteningPathIterator: void <init>(java.awt.geom.PathIterator,double)>
<javax.microedition.khronos.opengles.GL10: void glNormalPointer(int,int,java.nio.Buffer)>
<android.hardware.Camera.Parameters: java.util.List getSupportedFlashModes()>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>
<java.awt.image.BandCombineOp: void <init>(float[][],java.awt.RenderingHints)>
<android.graphics.Paint: float getStrokeMiter()>
<java.awt.image.DataBufferDouble: double[] getData()>
<org.apache.harmony.awt.wtk.NativeWindow: void setFocusable(boolean)>
<android.widget.ListView: int getChoiceMode()>
<android.os.Looper: java.lang.String toString()>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setCreatedFromStream(boolean)>
<android.widget.ListView: void setSelectionFromTop(int,int)>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>
<java.awt.im.InputMethodHighlight: boolean isSelected()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>
<com.google.android.mms.pdu.EncodedStringValue: java.lang.Object clone()>
<java.awt.image.renderable.ContextualRenderedImageFactory: java.awt.image.renderable.RenderContext mapRenderContext(int,java.awt.image.renderable.RenderContext,java.awt.image.renderable.ParameterBlock,java.awt.image.renderable.RenderableImage)>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>
<java.awt.Component: void list(java.io.PrintStream,int)>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>
<java.awt.geom.QuadCurve2D.Double: double getCtrlX()>
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>
<android.widget.ScrollView: void onMeasure(int,int)>
<javax.imageio.ImageReader: void processThumbnailProgress(float)>
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>
<java.awt.image.BufferedImage: void setRGB(int,int,int)>
<android.opengl.GLES20: void glStencilMask(int)>
<com.android.layoutlib.bridge.BridgeContext: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixel(int,int,float[])>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.content.IntentFilter: java.util.Iterator schemesIterator()>
<android.app.Dialog: void onStop()>
<javax.microedition.khronos.opengles.GL10: void glMaterialf(int,int,float)>
<org.apache.harmony.awt.wtk.NativeEvent: java.awt.Rectangle getWindowRect()>
<java.awt.image.ColorModel: int[] getComponents(int,int[],int)>
<android.app.DatePickerDialog: void show()>
<javax.imageio.event.IIOReadUpdateListener: void thumbnailPassStarted(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[])>
<android.graphics.Rect: boolean equals(java.lang.Object)>
<com.android.layoutlib.bridge.BridgeTypedArray: boolean getValueAt(int,android.util.TypedValue)>
<com.android.server.PackageManagerBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(java.nio.IntBuffer)>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.graphics.Paint: void setTextSkewX(float)>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmGetProfile(long,byte[])>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.content.Context: int checkCallingUriPermission(android.net.Uri,int)>
<android.view.View: void getFocusedRect(android.graphics.Rect)>
<com.android.server.status.TrackingView: void onAttachedToWindow()>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>
<java.awt.Color: float[] getColorComponents(java.awt.color.ColorSpace,float[])>
<java.awt.font.TextHitInfo: java.lang.String toString()>
<java.awt.EventQueue: void <init>()>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>
<android.media.AudioTrack: int getPlayState()>
<android.webkit.CacheManager.CacheResult: void setInputStream(java.io.InputStream)>
<android.net.Uri: int getPort()>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>
<android.content.Intent: void setSourceBounds(android.graphics.Rect)>
<java.awt.Graphics: void drawRect(int,int,int,int)>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>
<java.awt.Event: boolean metaDown()>
<javax.imageio.IIOParam: int getSourceYSubsampling()>
<android.util.TypedValue: java.lang.String coerceToString(int,int)>
<java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<android.gesture.GestureOverlayView: void cancelGesture()>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()>
<android.database.BulkCursorProxy: java.lang.String[] getColumnNames()>
<java.awt.im.spi.InputMethod: void deactivate(boolean)>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<javax.imageio.ImageReader: boolean hasThumbnails(int)>
<android.graphics.Bitmap: void <init>(java.io.File)>
<android.pim.vcard.VCardConfig: int getNameOrderType(int)>
<android.renderscript.ScriptC.Builder: void addDefines(java.lang.Class)>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getUnderlineThickness()>
<android.app.Dialog: void setContentView(android.view.View)>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>
<java.awt.HeadlessToolkit: boolean isDynamicLayoutSet()>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.view.View: void setHapticFeedbackEnabled(boolean)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSuperscriptOffsetX()>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<android.view.MotionEvent: java.lang.String toString()>
<android.renderscript.ProgramFragment.Builder: void <init>(android.renderscript.RenderScript)>
<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.widget.RelativeLayout: void requestLayout()>
<android.graphics.Path: void setLastPoint(float,float)>
<java.beans.PropertyEditor: boolean supportsCustomEditor()>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: void <init>()>
<android.app.Activity: boolean isFinishing()>
<java.awt.Component: void firePropertyChange(java.lang.String,char,char)>
<android.content.pm.PermissionInfo: int describeContents()>
<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableTranslatedChild(int,int)>
<com.google.android.gles_jni.GLImpl: void glDepthMask(boolean)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: org.apache.harmony.awt.gl.Surface getImageSurface(java.awt.Image)>
<android.telephony.TelephonyManager: int getDataActivity()>
<com.android.server.am.ActivityManagerService: void finishOtherInstances(android.os.IBinder,android.content.ComponentName)>
<java.awt.image.ShortLookupTable: int[] lookupPixel(int[],int[])>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.location.Location: void setBearing(float)>
<javax.imageio.stream.ImageInputStream: void readFully(char[],int,int)>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>
<android.content.Entity: java.lang.String toString()>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeLeft()>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: java.lang.String _glGetString(int)>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<javax.imageio.metadata.IIOMetadata: void mergeTree(java.lang.String,org.w3c.dom.Node)>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
<java.awt.geom.Arc2D.Float: void <init>(int)>
<java.awt.AWTKeyStroke: void registerSubclass(java.lang.Class)>
<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(short[],int,int)>
<org.apache.harmony.awt.gl.ImageSurface: void dataChanged()>
<org.apache.harmony.awt.gl.image.BufferedImageSource: void addConsumer(java.awt.image.ImageConsumer)>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<com.android.server.KeyInputQueue: int rotateKeyCode(int)>
<javax.imageio.spi.IIOServiceProvider: void <init>()>
<android.graphics.Interpolator: void <init>(int,int)>
<android.content.pm.LabeledIntent: void readFromParcel(android.os.Parcel)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void createAllSegments()>
<android.app.ApplicationErrorReport.AnrInfo: void dump(android.util.Printer,java.lang.String)>
<android.pim.ICalendar.Property: java.util.List getParameters(java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node item(int)>
<android.view.KeyCharacterMap: char getMatch(int,char[])>
<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<java.awt.image.renderable.RenderContext: void preConcetenateTransform(java.awt.geom.AffineTransform)>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>
<org.apache.harmony.awt.gl.image.DecodingImageSource: boolean isConsumer(java.awt.image.ImageConsumer)>
<android.webkit.PluginData: java.util.Map getHeaders()>
<java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>
<android.content.IntentFilter: java.lang.String getDataType(int)>
<com.google.android.util.AbstractMessageParser.Resources: java.util.Set getSchemes()>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.app.Activity: void onPostResume()>
<android.webkit.DateSorter: long getBoundary(int)>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>
<android.database.AbstractCursor: android.os.Bundle getExtras()>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>
<java.awt.Dimension: void <init>(int,int)>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setFontFileName(java.lang.String)>
<android.os.Messenger: int hashCode()>
<com.android.server.status.StatusBarService: void systemReady()>
<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>
<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)>
<java.awt.image.IndexColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>
<android.view.BridgeInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<java.awt.image.AreaAveragingScaleFilter: void <init>(int,int)>
<org.apache.harmony.awt.gl.color.NativeCMM: void addHandle(java.awt.color.ICC_Profile,long)>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitCode()>
<com.android.server.connectivity.Tethering: int tether(java.lang.String)>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<com.android.layoutlib.bridge.BridgeContext: android.content.pm.PackageManager getPackageManager()>
<android.graphics.Matrix: void mapPoints(float[],float[])>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.font.FontRenderContext getFontRenderContext()>
<com.google.android.util.AbstractMessageParser.Video: void <init>(java.lang.String,java.lang.String)>
<java.awt.Component: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>
<com.google.android.maps.MapView: android.view.View getZoomControls()>
<javax.imageio.ImageWriter: void addIIOWriteWarningListener(javax.imageio.event.IIOWriteWarningListener)>
<android.media.AudioManager: int getRouting(int)>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>
<com.google.android.mms.pdu.AcknowledgeInd: byte[] getTransactionId()>
<android.location.Location: void <init>(android.location.Location)>
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>
<android.os.Debug: long getNativeHeapAllocatedSize()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>
<android.widget.ImageView: void onMeasure(int,int)>
<android.content.Intent.FilterComparison: android.content.Intent getIntent()>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>
<com.android.layoutlib.bridge.BridgeContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<com.android.server.KeyInputQueue: int getDPadKeycodeState(int)>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>
<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>
<android.webkit.WebView: void resumeTimers()>
<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>
<org.apache.harmony.awt.im.InputMethodContext: void setCharacterSubsets(java.lang.Character.Subset[])>
<java.awt.geom.AffineTransform: void <init>(double,double,double,double,double,double)>
<android.webkit.Plugin: java.lang.String getDescription()>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>
<android.hardware.SensorListener: void onSensorChanged(int,float[])>
<java.awt.image.SampleModel: double getSampleDouble(int,int,int,java.awt.image.DataBuffer)>
<android.content.pm.ActivityInfo: int getThemeResource()>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>
<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>
<org.apache.harmony.awt.gl.font.AndroidFont: boolean addGlyph(char)>
<android.widget.TableLayout: boolean isColumnCollapsed(int)>
<java.awt.image.DataBuffer: void setElem(int,int)>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityThread.PackageInfo: void removeContextRegistrations(android.content.Context,java.lang.String,java.lang.String)>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>
<java.awt.Component: java.awt.event.MouseListener[] getMouseListeners()>
<android.text.style.SubscriptSpan: int getSpanTypeId()>
<org.apache.harmony.awt.gl.Surface: org.apache.harmony.awt.gl.Surface getImageSurface()>
<java.awt.EventQueue: java.awt.AWTEvent getCurrentEvent()>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<android.widget.ExpandableListView: void setSelectedGroup(int)>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>
<android.provider.Settings.System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.net.Uri: java.lang.String getEncodedQuery()>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>
<android.pim.vcard.VCardParser_V21: int getVersion()>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>
<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>
<android.graphics.drawable.Drawable: boolean setLevel(int)>
<android.webkit.WebView: void clearView()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.imageio.plugins.bmp.BMPImageWriteParam: void <init>()>
<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>
<java.awt.Component: void processMouseWheelEvent(java.awt.event.MouseWheelEvent)>
<java.awt.image.ComponentColorModel: int getAlpha(java.lang.Object)>
<android.location.Address: java.lang.String getThoroughfare()>
<android.pim.RecurrenceSet: void <init>(android.database.Cursor)>
<java.awt.geom.QuadCurve2D.Float: double getCtrlY()>
<android.os.BatteryStats.Uid: long getVideoTurnedOnTime(long,int)>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Dialog: void onDetachedFromWindow()>
<android.webkit.WebView: void clearCache(boolean)>
<java.awt.Component.BltBufferStrategy: void <init>(int,java.awt.BufferCapabilities)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getDepth()>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.speech.tts.TextToSpeech: int setSpeechRate(float)>
<org.apache.harmony.awt.gl.MultiRectArea: void intersect(java.awt.Rectangle)>
<java.awt.image.DataBufferFloat: int getElem(int,int)>
<android.media.SoundPool: void pause(int)>
<android.app.backup.BackupDataInputStream: int read()>
<android.text.StaticLayout: int getLineDescent(int)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<org.apache.harmony.awt.wtk.NativeIM: void setCompositionEnabled(boolean)>
<android.os.SystemClock: long elapsedRealtime()>
<android.os.Debug: int getGlobalExternalFreedCount()>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getFontName(java.util.Locale)>
<android.text.DynamicLayout: int getBottomPadding()>
<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>
<org.apache.harmony.awt.wtk.KeyInfo: void <init>()>
<android.view.MenuItem: char getNumericShortcut()>
<javax.imageio.ImageWriteParam: float getBitRate(float)>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixel(int,int,double[])>
<java.awt.GradientPaint: java.awt.Color getColor1()>
<java.awt.geom.NoninvertibleTransformException: void <init>(java.lang.String)>
<java.awt.font.OpenType: int getFontTableSize(java.lang.String)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>
<android.widget.TextView: void onMeasure(int,int)>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,int)>
<android.widget.TextView: void setText(int)>
<android.view.View: boolean awakenScrollBars(int,boolean)>
<android.util.EventLog: int getTagCode(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glNormal3x(int,int,int)>
<java.awt.image.Raster: float[] getPixels(int,int,int,int,float[])>
<java.awt.Component: java.awt.Dimension getSize()>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextLeftHit(int)>
<android.os.HandlerThread: void onLooperPrepared()>
<android.content.pm.ServiceInfo: java.lang.String toString()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>
<android.graphics.drawable.AnimationDrawable: void stop()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.preference.ListPreference: void setEntryValues(int)>
<com.android.commands.svc.PowerCommand: java.lang.String longHelp()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.android.mms.pdu.AcknowledgeInd: void setReportAllowed(int)>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>
<java.awt.geom.RectangularShape: void <init>()>
<com.google.android.mms.pdu.NotifyRespInd: int getReportAllowed()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>
<android.provider.Settings.System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>
<android.text.format.Formatter: java.lang.String formatIpAddress(int)>
<android.os.Binder: void <init>()>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>
<android.graphics.Rect: void setEmpty()>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>
<java.awt.image.WritableRaster: void setPixel(int,int,float[])>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>
<com.android.fountain.Fountain: void onResume()>
<org.apache.harmony.x.imageio.spi.FileIOSSpi: void <init>()>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUrl()>
<javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,javax.imageio.stream.ImageOutputStream)>
<java.awt.Dimension: int hashCode()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
<com.android.layoutlib.bridge.BridgeContext: boolean deleteDatabase(java.lang.String)>
<com.google.android.mms.pdu.PduPart: void setContentLocation(byte[])>
<java.awt.geom.Arc2D: double getAngleExtent()>
<java.awt.image.ColorConvertOp: void <init>(java.awt.color.ICC_Profile[],java.awt.RenderingHints)>
<android.view.OrientationListener: void <init>(android.content.Context,int)>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>
<android.content.Intent: java.lang.String toString()>
<android.util.AttributeSet: float getAttributeFloatValue(int,float)>
<android.view.animation.OvershootInterpolator: void <init>(float)>
<java.awt.geom.CubicCurve2D: int solveCubic(double[],double[])>
<java.awt.geom.Arc2D.Double: boolean isEmpty()>
<android.webkit.WebView: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.pim.vcard.VCardEntry.EmailData: java.lang.String toString()>
<android.view.KeyEvent: java.lang.String toString()>
<java.awt.Polygon: java.awt.geom.Rectangle2D getBounds2D()>
<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
<android.view.Window: android.view.View getCurrentFocus()>
<org.apache.harmony.awt.wtk.CursorFactory: org.apache.harmony.awt.wtk.NativeCursor createCursor(int)>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.ProgressDialog: void setProgress(int)>
<android.view.View: boolean isOpaque()>
<android.preference.PreferenceActivity: void onContentChanged()>
<android.hardware.Camera.Parameters: void setZoom(int)>
<android.graphics.Paint: void setAlpha(int)>
<android.util.AttributeSet: java.lang.String getClassAttribute()>
<com.android.server.Watchdog: void processStarted(com.android.server.Watchdog.PssRequestor,java.lang.String,int)>
<java.awt.geom.Rectangle2D.Double: double getY()>
<android.gesture.GestureLibrary: boolean isReadOnly()>
<java.awt.image.MultiPixelPackedSampleModel: int getBitOffset(int)>
<org.apache.harmony.awt.gl.ICompositeContext: void dispose()>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>
<java.awt.event.ActionEvent: int getModifiers()>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void setDate(long)>
<android.database.AbstractCursor: float getFloat(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelx(int,int)>
<android.renderscript.Type.Builder: void add(android.renderscript.Dimension,int)>
<javax.imageio.IIOImage: void <init>(java.awt.image.Raster,java.util.List,javax.imageio.metadata.IIOMetadata)>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>
<java.awt.image.IndexColorModel: int[] getComponentSize()>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>
<android.graphics.Color: int rgb(int,int,int)>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>
<android.telephony.SmsMessage: int getIndexOnSim()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void <init>(java.lang.String,int,int)>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.google.android.mms.pdu.PduComposer: void appendLongInteger(long)>
<android.widget.RatingBar: boolean isIndicator()>
<android.preference.CheckBoxPreference: void setChecked(boolean)>
<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo getOtherHit()>
<java.awt.image.DataBufferInt: void setElem(int,int)>
<android.net.LocalSocket: void close()>
<com.google.android.mms.ContentType: boolean isSupportedAudioType(java.lang.String)>
<org.apache.harmony.awt.gl.font.CompositeFont: int getCharFontIndex(char)>
<android.media.JetPlayer: boolean clearQueue()>
<android.widget.SimpleCursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<java.awt.image.Raster: java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>
<java.awt.image.renderable.RenderContext: java.awt.RenderingHints getRenderingHints()>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>
<android.widget.BaseAdapter: boolean areAllItemsEnabled()>
<android.view.ViewParent: android.view.ViewParent getParent()>
<java.awt.event.MouseMotionAdapter: void mouseDragged(java.awt.event.MouseEvent)>
<android.view.KeyEvent: boolean isPrintingKey()>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>
<android.content.Intent: boolean hasFileDescriptors()>
<android.os.Debug.InstructionCount: boolean collect()>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>
<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>
<android.app.PendingIntent: void send(int)>
<android.graphics.drawable.PaintDrawable: void <init>()>
<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<java.awt.Component.BltBufferStrategy: void createBackBuffers(int)>
<java.awt.font.GlyphVector: java.awt.geom.Rectangle2D getVisualBounds()>
<android.view.View: void setEnabled(boolean)>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.widget.AbsSpinner: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.server.status.IconData: com.android.server.status.IconData clone()>
<android.os.Debug: void resetThreadAllocSize()>
<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList)>
<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.PduBody getBody()>
<android.widget.ResourceCursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: void scale(float,float)>
<javax.microedition.khronos.opengles.GL10: void glPointSizex(int)>
<android.webkit.WebSettings: int getDefaultFontSize()>
<android.os.Parcel: android.os.Bundle readBundle()>
<javax.imageio.stream.ImageInputStream: long readUnsignedInt()>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>
<com.google.android.maps.MapView: int getLatitudeSpan()>
<android.database.Cursor: boolean isFirst()>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>
<com.google.android.mms.pdu.PduBody: int getPartsNum()>
<android.content.pm.Signature: byte[] toByteArray()>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<java.awt.event.WindowListener: void windowClosing(java.awt.event.WindowEvent)>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>
<java.awt.geom.PathIterator: int currentSegment(double[])>
<android.os.Messenger: int describeContents()>
<java.awt.event.ItemListener: void itemStateChanged(java.awt.event.ItemEvent)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>
<android.inputmethodservice.KeyboardView: void swipeDown()>
<android.os.BatteryStats.Uid: long getScanWifiLockTime(long,int)>
<android.pim.vcard.VCardEntryConstructor: void <init>()>
<android.content.Intent: void removeCategory(java.lang.String)>
<org.apache.harmony.awt.gl.render.NativeImageBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>
<android.database.AbstractCursor: long getLong(int)>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>
<java.beans.PropertyEditor: java.lang.Object getValue()>
<android.widget.ViewAnimator: int getDisplayedChild()>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>
<java.awt.Component: void removeComponentListener(java.awt.event.ComponentListener)>
<android.media.AudioManager: void setStreamMute(int,boolean)>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>
<android.graphics.Bitmap: int getWidth()>
<javax.microedition.khronos.opengles.GL10: void glPixelStorei(int,int)>
<com.google.android.gles_jni.GLImpl: void glBlendEquationSeparate(int,int)>
<java.awt.image.DirectColorModel: int getGreenMask()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>
<android.widget.ImageView: boolean onSetAlpha(int)>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>
<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>
<javax.imageio.plugins.jpeg.JPEGQTable: java.lang.String toString()>
<android.view.Surface: void unfreeze()>
<android.widget.CursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<java.awt.image.ComponentSampleModel: int getPixelStride()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeDown()>
<android.view.animation.Animation: void scaleCurrentDuration(float)>
<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: int getLineBreakIndex(int,float)>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,int,java.lang.String,android.os.Bundle,boolean)>
<java.awt.geom.QuadCurve2D: double getCtrlY()>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<android.view.View: boolean isHorizontalScrollBarEnabled()>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String)>
<org.apache.harmony.awt.state.MenuItemState: boolean isCheckBox()>
<android.speech.RecognitionListener: void onResults(android.os.Bundle)>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.webkit.WebSettings: java.lang.String getPluginsPath()>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<java.beans.PropertyEditorManager: void registerEditor(java.lang.Class,java.lang.Class)>
<android.view.BridgeInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>
<android.opengl.GLES10: void glActiveTexture(int)>
<android.text.format.Time: void set(int,int,int)>
<android.view.ViewGroup: int indexOfChild(android.view.View)>
<java.awt.Polygon: void invalidate()>
<com.google.android.mms.pdu.SendReq: void setBcc(com.google.android.mms.pdu.EncodedStringValue[])>
<android.util.TypedValue: float complexToFloat(int)>
<java.awt.event.MouseAdapter: void mouseEntered(java.awt.event.MouseEvent)>
<java.awt.image.ComponentColorModel: java.lang.Object getDataElements(float[],int,java.lang.Object)>
<android.util.SparseArray: void <init>(int)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String)>
<java.awt.image.MultiPixelPackedSampleModel: int getTransferType()>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.ArrayAdapter: void sort(java.util.Comparator)>
<java.awt.event.WindowFocusListener: void windowGainedFocus(java.awt.event.WindowEvent)>
<android.os.AsyncTask: void onPreExecute()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
<android.app.Activity: android.app.Activity getParent()>
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>
<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>
<android.database.Cursor: int getCount()>
<java.awt.geom.QuadCurve2D: double getFlatness(double[],int)>
<android.media.MediaPlayer: int getCurrentPosition()>
<java.awt.geom.CubicCurve2D.Float: double getY1()>
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.opengl.GLSurfaceView: void setRenderMode(int)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<com.google.android.util.AbstractMessageParser.TrieNode: void setValue(java.lang.String)>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>
<java.awt.image.DataBufferByte: byte[] getData(int)>
<android.widget.ScrollView: void scrollTo(int,int)>
<java.awt.image.SampleModel: void setSamples(int,int,int,int,int,float[],java.awt.image.DataBuffer)>
<android.widget.AdapterView: int getCount()>
<java.awt.geom.Rectangle2D.Float: double getY()>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Path: void transform(android.graphics.Matrix)>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffsetx(int,int)>
<java.awt.image.ByteLookupTable: byte[] lookupPixel(byte[],byte[])>
<android.view.Surface: java.lang.String toString()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(java.lang.Object,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: java.io.InputStream getInputStream()>
<java.awt.geom.Rectangle2D.Float: void setRect(float,float,float,float)>
<android.media.AudioManager: void loadSoundEffects()>
<android.text.Annotation: java.lang.String getKey()>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
<java.awt.image.ComponentColorModel: int getRGB(java.lang.Object)>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>
<java.awt.image.DataBufferFloat: double getElemDouble(int,int)>
<android.text.style.BackgroundColorSpan: int describeContents()>
<android.content.ContentValues: int describeContents()>
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>
<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.image.Raster,java.awt.color.ICC_Profile)>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<java.awt.font.GlyphVector: java.awt.Shape getOutline()>
<android.os.BatteryStats.Uid.Sensor: int getHandle()>
<android.text.style.AbsoluteSizeSpan: int describeContents()>
<javax.microedition.khronos.opengles.GL10: void glPointSize(float)>
<java.awt.font.TextLayout: java.awt.Shape[] getCaretShapes(int,java.awt.geom.Rectangle2D)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.geom.Rectangle2D getVisualBounds()>
<android.graphics.ColorMatrix: void <init>(float[])>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>
<android.app.ActivityManager.RunningServiceInfo: void <init>()>
<android.util.AttributeSet: int getAttributeResourceValue(int,int)>
<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>
<java.awt.GraphicsDevice: java.lang.String getIDstring()>
<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>
<com.google.android.mms.ContentType: boolean isAudioType(java.lang.String)>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Format: boolean setCaps()>
<android.app.ActivityManagerProxy: void unhandledBack()>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsSpinner: void requestLayout()>
<android.webkit.WebViewDatabase: void clearFormData()>
<java.awt.image.ComponentColorModel: int getDataElement(float[],int)>
<javax.imageio.spi.ServiceRegistry: boolean setOrdering(java.lang.Class,java.lang.Object,java.lang.Object)>
<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<java.awt.event.ComponentEvent: void <init>(java.awt.Component,int)>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>
<java.awt.Polygon: boolean contains(int,int)>
<java.awt.DisplayMode: int getWidth()>
<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>
<java.awt.image.ComponentColorModel: int[] getUnnormalizedComponents(float[],int,int[],int)>
<java.awt.Paint: java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)>
<android.opengl.GLES10: void glClearDepthf(float)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getInputEncoding()>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>
<android.location.GpsSatellite: boolean usedInFix()>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>
<android.text.InputFilter.LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>
<android.app.ActivityManagerProxy: boolean shutdown(int)>
<java.awt.geom.Rectangle2D.Double: java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>
<android.pim.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)>
<com.android.server.ProcessStats: int getLastSoftIrqTime()>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>
<android.widget.ZoomButtonsController: boolean isVisible()>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
<android.os.ConditionVariable: void close()>
<android.graphics.PorterDuffXfermode: android.graphics.PorterDuff.Mode getMode()>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>
<java.awt.geom.Arc2D.Double: double getHeight()>
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.RasterOp: java.awt.RenderingHints getRenderingHints()>
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>
<com.google.android.gles_jni.GLImpl: void glDrawArrays(int,int,int)>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.KeyInputQueue: boolean hasKeys(int[],boolean[])>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>
<java.awt.RenderingHints: java.lang.String toString()>
<android.pim.vcard.VCardInterpreter: void propertyValues(java.util.List)>
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>
<android.widget.CompoundButton: void setChecked(boolean)>
<android.view.View: void setLongClickable(boolean)>
<android.widget.TableRow.LayoutParams: void <init>(int,int,float)>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>
<com.android.providers.settings.SettingsHelper: void <init>(android.content.Context)>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>
<java.awt.geom.CubicCurve2D.Double: java.awt.geom.Point2D getCtrlP2()>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>
<java.awt.Toolkit: void beep()>
<android.graphics.DashPathEffect: float[] getIntervals()>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>
<java.awt.geom.RoundRectangle2D.Float: boolean isEmpty()>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>
<android.provider.Contacts.ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
<java.awt.FontMetrics: int charWidth(int)>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>
<android.content.PeriodicSync: int describeContents()>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.lang.String getTrack()>
<android.widget.RemoteViews: int describeContents()>
<android.graphics.Paint: void setFakeBoldText(boolean)>
<java.beans.PropertyEditorSupport: void setSource(java.lang.Object)>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>
<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
<android.view.ViewGroup: void measureChildren(int,int)>
<com.android.server.ProcessStats: int onMeasureProcessName(java.lang.String)>
<android.net.http.EventHandler: void data(byte[],int)>
<java.awt.font.LineMetrics: float getUnderlineThickness()>
<org.apache.harmony.awt.gl.image.PNGData: org.apache.harmony.awt.gl.image.PNGChunk getChunk(java.lang.String)>
<com.android.server.am.ActivityManagerService: void monitor()>
<android.pim.vcard.exception.VCardAgentNotSupportedException: void <init>()>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>
<java.awt.Rectangle: boolean isEmpty()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>
<org.apache.harmony.awt.wtk.SystemProperties: int getSystemColorARGB(int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: boolean equals(java.awt.font.GlyphVector)>
<android.graphics.Point: boolean equals(int,int)>
<android.gesture.GestureOverlayView: int getOrientation()>
<android.server.BluetoothService: int getBluetoothState()>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.LinearLayout: boolean isBaselineAligned()>
<android.database.AbstractCursor: void close()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: void <init>(java.awt.Font)>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>
<android.content.Intent: java.lang.Object clone()>
<android.pim.vcard.VCardParser_V30: java.lang.String getNonEmptyLine()>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<android.media.MediaPlayer: void stop()>
<java.awt.image.renderable.ContextualRenderedImageFactory: java.awt.image.RenderedImage create(java.awt.image.renderable.RenderContext,java.awt.image.renderable.ParameterBlock)>
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.server.BluetoothService: boolean cancelBondProcess(java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>
<android.opengl.GLES10: void glHint(int,int)>
<android.widget.TableLayout: void <init>(android.content.Context)>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>
<android.content.Context: java.io.File getExternalCacheDir()>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.android.server.am.BatteryStatsService: void noteScanWifiLockAcquired(int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int available()>
<android.text.style.LeadingMarginSpan.Standard: int getLeadingMargin(boolean)>
<android.telephony.SignalStrength: int hashCode()>
<com.android.defcontainer.DefaultContainerService: android.os.IBinder onBind(android.content.Intent)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>
<android.text.HtmlToSpannedConverter: void characters(char[],int,int)>
<javax.imageio.stream.ImageInputStreamImpl: boolean isCachedFile()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void unbindInput()>
<android.content.SyncResult: boolean madeSomeProgress()>
<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<com.google.android.util.AbstractMessageParser.Token: boolean isArray()>
<java.awt.ItemSelectable: void addItemListener(java.awt.event.ItemListener)>
<android.graphics.Canvas: int getWidth()>
<java.awt.event.MouseListener: void mousePressed(java.awt.event.MouseEvent)>
<java.awt.image.ColorModel: int getComponentSize(int)>
<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.preference.CheckBoxPreference: boolean getDisableDependentsState()>
<android.widget.ViewFlipper: boolean isFlipping()>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>
<android.pim.vcard.VCardEntryCommitter: void <init>(android.content.ContentResolver)>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<java.awt.im.spi.InputMethod: java.util.Locale getLocale()>
<android.renderscript.Script.Builder: void setType(boolean,int)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,int[],int)>
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>
<android.os.Looper: java.lang.Thread getThread()>
<android.text.BoringLayout: int getBottomPadding()>
<java.awt.Component: void move(int,int)>
<android.util.SparseArray: java.lang.Object get(int)>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>
<java.awt.Graphics: java.awt.Graphics create(int,int,int,int)>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>
<java.awt.geom.QuadCurve2D.Float: java.awt.geom.Point2D getCtrlPt()>
<android.view.View: int getBottomPaddingOffset()>
<java.awt.geom.Line2D: double ptLineDist(double,double)>
<java.awt.image.BufferStrategy: void show()>
<org.apache.harmony.awt.wtk.NativeIM: void hideWindows()>
<java.awt.Color: java.awt.Color getColor(java.lang.String)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>
<java.awt.geom.Area: void add(java.awt.geom.Area)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getMissingGlyphCode()>
<android.database.StaleDataException: void <init>(java.lang.String)>
<android.media.AudioService.VolumeStreamState: boolean setIndex(int,boolean)>
<android.os.Parcel: void writeList(java.util.List)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitTypeArgument()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getAttributeListMaxLength(java.lang.String,java.lang.String)>
<android.os.DropBoxManager: void <init>()>
<android.webkit.WebView: java.lang.String getUrl()>
<com.google.android.util.AbstractMessageParser: int getPartCount()>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>
<android.widget.AbsListView: int computeVerticalScrollExtent()>
<android.app.Activity: int getVolumeControlStream()>
<java.awt.image.renderable.RenderableImageOp: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>
<android.graphics.Matrix: boolean postScale(float,float)>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<java.awt.event.MouseListener: void mouseEntered(java.awt.event.MouseEvent)>
<android.os.BatteryStats.Uid: void noteScanWifiLockAcquiredLocked()>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.tools.layoutlib.create.AsmGenerator: void setKeep(java.util.Map)>
<android.widget.PopupWindow: boolean isAboveAnchor()>
<com.google.android.util.AbstractMessageParser.Token: boolean isHtml()>
<android.view.View: void measure(int,int)>
<android.os.BatteryStats.Uid: void noteWifiMulticastDisabledLocked()>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>
<java.awt.MenuComponent: void setFont(java.awt.Font)>
<java.awt.geom.Rectangle2D.Float: double getWidth()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.media.AudioManager: boolean isSpeakerphoneOn()>
<android.widget.GridView: void setGravity(int)>
<android.view.View: boolean requestFocus(int)>
<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform,java.awt.Shape)>
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>
<android.graphics.Matrix: boolean postRotate(float)>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.BridgeContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>
<android.ddm.DdmHandleAppName: void disconnected()>
<com.google.android.mms.pdu.SendConf: void setMessageId(byte[])>
<com.google.android.mms.pdu.PduPart: int getCharset()>
<android.widget.CursorTreeAdapter: int getChildrenCount(int)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,int[],int)>
<java.awt.geom.RectangularShape: double getCenterY()>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,float[],int)>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>
<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>
<java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>
<android.util.LogPrinter: void <init>(int,java.lang.String)>
<android.widget.SlidingDrawer.OnDrawerCloseListener: void onDrawerClosed()>
<com.android.layoutlib.bridge.BridgeResources: void getValue(int,android.util.TypedValue,boolean)>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
<java.awt.font.TextLayout: java.awt.Shape getLogicalHighlightShape(int,int,java.awt.geom.Rectangle2D)>
<android.graphics.Matrix: void setValues(float[])>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,int[],int)>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.view.Window: android.view.Window.Callback getCallback()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)>
<android.graphics.Rect: void sort()>
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>
<java.awt.Font: boolean isTransformed()>
<java.awt.Graphics2D: void translate(double,double)>
<android.widget.ScrollView: void requestLayout()>
<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<java.awt.event.MouseMotionAdapter: void <init>()>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.view.Surface: void hide()>
<android.graphics.Matrix: boolean setConcat()>
<android.graphics.Rect: int width()>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
<java.awt.font.LineBreakMeasurer: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>
<com.android.server.DevicePolicyManagerService: void setActivePasswordState(int,int)>
<android.renderscript.ProgramVertex.Builder: void setTextureMatrixEnable(boolean)>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.color.ColorConverter: void loadScalingData(java.awt.color.ColorSpace)>
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(float[],int)>
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>
<org.apache.harmony.awt.gl.Surface: int getWidth()>
<com.google.android.mms.pdu.PduComposer: void appendEncodedString(com.google.android.mms.pdu.EncodedStringValue)>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.text.format.Time: java.lang.String getCurrentTimezone()>
<java.awt.font.OpenType: byte[] getFontTable(java.lang.String)>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>
<android.net.Uri: boolean isAbsolute()>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,float[],int)>
<android.net.Downloads.ByUri: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>
<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>
<android.view.ViewGroup: void onAnimationEnd()>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<javax.imageio.IIOImage: void setMetadata(javax.imageio.metadata.IIOMetadata)>
<android.graphics.Paint: boolean isUnderlineText()>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.os.Parcel: void readFloatArray(float[])>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>
<java.awt.font.TextLayout: boolean isLeftToRight()>
<java.awt.image.DataBufferFloat: float getElemFloat(int,int)>
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.text.ParcelableSpan: int getSpanTypeId()>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<com.google.android.mms.pdu.RetrieveConf: void addCc(com.google.android.mms.pdu.EncodedStringValue)>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<com.google.android.maps.MapView: void setTraffic(boolean)>
<org.apache.harmony.awt.gl.render.JavaLineRasterizer: org.apache.harmony.awt.gl.MultiRectArea rasterize(int,int,int,int,org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.render.JavaLineRasterizer.LineDasher,boolean)>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>
<java.awt.Component.BltBufferStrategy: boolean contentsLost()>
<com.android.server.BrickReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.Scroller: void setFinalX(int)>
<java.awt.geom.Rectangle2D: void add(double,double)>
<android.net.UrlQuerySanitizer: void <init>()>
<com.android.layoutlib.bridge.NinePatchDrawable: int getIntrinsicWidth()>
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.widget.Chronometer: void start()>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>
<com.android.server.vpn.VpnServiceBinder: android.os.IBinder onBind(android.content.Intent)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam)>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>
<java.awt.font.GlyphVector: java.awt.Rectangle getGlyphPixelBounds(int,java.awt.font.FontRenderContext,float,float)>
<java.awt.font.TextMeasurer: float getAdvanceBetween(int,int)>
<android.media.AudioRecord: int getChannelCount()>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addObjectValue(java.lang.String,java.lang.Class,int,int)>
<android.graphics.Canvas: void drawRGB(int,int,int)>
<android.media.SoundPool: void setLoop(int,int)>
<android.widget.TabWidget: void <init>(android.content.Context)>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>
<android.graphics.RectF: float width()>
<java.awt.Component: boolean isMinimumSizeSet()>
<android.widget.TabHost: void onAttachedToWindow()>
<com.android.server.KeyInputQueue: int nativeGetKeycodeState(int)>
<android.app.WallpaperManager: void setResource(int)>
<android.graphics.Paint: java.util.List getFonts()>
<java.awt.geom.CubicCurve2D.Double: double getCtrlX2()>
<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>
<android.hardware.Camera.Parameters: void setFlashMode(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glBindTexture(int,int)>
<android.graphics.Bitmap: void prepareToDraw()>
<javax.imageio.stream.ImageInputStreamImpl: int read()>
<android.os.Looper: android.os.MessageQueue myQueue()>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<android.app.Activity: void finishActivity(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserTagsURL(java.lang.String,java.lang.String)>
<java.awt.HeadlessException: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.font.AndroidFontProperty: java.lang.String getXLFD()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<com.android.server.DropBoxManagerService: void stop()>
<android.preference.ListPreference: void <init>(android.content.Context)>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>
<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<org.apache.harmony.x.imageio.spi.RAFIISSpi: javax.imageio.stream.ImageInputStream createInputStreamInstance(java.lang.Object,boolean,java.io.File)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.widget.CursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.app.ApplicationThreadProxy: void scheduleLowMemory()>
<com.google.android.maps.MapView: int getMaxZoomLevel()>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillMultiRectAreaPaint(org.apache.harmony.awt.gl.MultiRectArea)>
<java.awt.image.ReplicateScaleFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<java.awt.geom.RoundRectangle2D: void setRoundRect(double,double,double,double,double,double)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getShownFrameLw()>
<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeListValue(int,java.lang.String[],int)>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.content.pm.PackageParser.Permission: void setPackageName(java.lang.String)>
<android.content.SharedPreferences: java.util.Map getAll()>
<java.awt.image.SampleModel: void setPixel(int,int,double[],java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>
<com.android.tools.layoutlib.create.OverrideMethod: long invokeL(java.lang.String,boolean,java.lang.Object)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo()>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<java.awt.geom.PathIterator: int currentSegment(float[])>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,float[],int)>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(byte,int)>
<android.content.ContextWrapper: void setTheme(int)>
<android.view.accessibility.AccessibilityEvent: int getItemCount()>
<android.server.BluetoothService: boolean setPasskey(java.lang.String,int)>
<android.view.View.MeasureSpec: int getSize(int)>
<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>
<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,float[],int)>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>
<android.provider.Calendar.CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>
<android.hardware.Camera: void autoFocus(android.hardware.Camera.AutoFocusCallback)>
<com.google.android.mms.pdu.SendReq: void setContentType(byte[])>
<android.util.SparseBooleanArray: boolean get(int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>
<java.awt.geom.Point2D.Float: void <init>(float,float)>
<android.media.MediaRecorder: void release()>
<android.view.KeyEvent: int getFlags()>
<javax.microedition.khronos.opengles.GL10: void glSampleCoverage(float,boolean)>
<android.widget.AnalogClock: void onDetachedFromWindow()>
<android.renderscript.Sampler.Builder: void setWrapR(android.renderscript.Sampler.Value)>
<javax.imageio.spi.ImageOutputStreamSpi: void <init>(java.lang.String,java.lang.String,java.lang.Class)>
<android.media.SoundPool: void resume(int)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>
<android.net.Proxy: java.lang.String getDefaultHost()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.pim.vcard.VCardInterpreter: void propertyParamValue(java.lang.String)>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>
<java.awt.Point: void setLocation(java.awt.Point)>
<android.location.Address: int getMaxAddressLineIndex()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,float[],int)>
<android.preference.Preference: boolean isSelectable()>
<org.apache.harmony.awt.gl.font.AndroidFont: org.apache.harmony.awt.gl.font.Glyph getGlyph(char)>
<android.widget.AbsListView: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<java.awt.Component: boolean isCursorSet()>
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.AbsListView: void smoothScrollToPosition(int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.view.Menu: boolean hasVisibleItems()>
<java.awt.font.GlyphMetrics: void <init>(boolean,float,float,java.awt.geom.Rectangle2D,byte)>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.app.Dialog: void cancel()>
<android.os.Parcel: void writeStringArray(java.lang.String[])>
<android.content.Intent.FilterComparison: int hashCode()>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<java.awt.image.IndexColorModel: java.lang.Object getDataElements(int,java.lang.Object)>
<android.graphics.Matrix: boolean postScale(float,float)>
<javax.imageio.stream.ImageOutputStream: void writeDouble(double)>
<android.pim.vcard.VCardEntry: java.util.List getPhoneList()>
<android.accounts.AccountsException: void <init>(java.lang.String)>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)>
<android.os.Vibrator: void cancel()>
<android.gesture.GestureStore: void setSequenceType(int)>
<android.media.AudioTrack: void flush()>
<android.preference.PreferenceActivity: void onDestroy()>
<java.awt.RenderingHints: void clear()>
<javax.microedition.khronos.opengles.GL10: void glEnableClientState(int)>
<android.pim.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(com.android.internal.telephony.CallerInfo,android.content.Context,android.widget.ImageView,android.net.Uri,int)>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<android.renderscript.ScriptC.Builder: void addDefines(java.lang.Object)>
<java.awt.Insets: java.lang.Object clone()>
<javax.imageio.spi.ImageInputStreamSpi: void <init>()>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleOrBehindKeyguardLw()>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.common.ArrayListCursor: void <init>(java.lang.String[],java.util.ArrayList)>
<java.awt.image.MultiPixelPackedSampleModel: int getSampleSize(int)>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>
<android.text.HtmlToSpannedConverter: void endDocument()>
<java.awt.font.TextLayout: float[] getCaretInfo(java.awt.font.TextHitInfo)>
<android.text.style.MaskFilterSpan: void <init>(android.graphics.MaskFilter)>
<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<com.google.android.util.AbstractMessageParser.Link: boolean isHtml()>
<com.google.android.util.AbstractMessageParser.MusicTrack: void <init>(java.lang.String)>
<java.awt.geom.CubicCurve2D: void setCurve(java.awt.geom.Point2D[],int)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>
<android.view.Menu: void clear()>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>
<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>
<java.awt.image.WritableRenderedImage: void addTileObserver(java.awt.image.TileObserver)>
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<android.opengl.GLU: java.lang.String gluErrorString(int)>
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.app.ActivityManagerProxy: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.content.Intent)>
<org.apache.harmony.awt.wtk.NativeEvent: java.awt.Rectangle getClipBounds()>
<android.os.Handler: boolean post(java.lang.Runnable)>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.ViewGroup: boolean addStatesFromChildren()>
<android.os.Debug: void resetAllCounts()>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>
<android.app.Notification: void <init>()>
<android.location.Address: java.lang.String getCountryCode()>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>
<android.app.TimePickerDialog: void updateTime(int,int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.util.DisplayMetrics: void <init>()>
<org.apache.harmony.awt.state.MenuItemState: boolean isMenu()>
<android.os.BatteryStats.Uid: boolean hasUserActivity()>
<android.pim.vcard.VCardParser_V21: void <init>(int)>
<android.app.SearchDialog.SearchBar: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<javax.imageio.metadata.IIOMetadata: void setFromTree(java.lang.String,org.w3c.dom.Node)>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>
<android.gesture.Prediction: java.lang.String toString()>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>
<org.apache.harmony.awt.gl.render.JavaBlitter: void javaBlt(int,int,int,int,java.awt.image.ColorModel,java.awt.image.Raster,int,int,int,int,java.awt.image.ColorModel,java.awt.image.WritableRaster,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: float getHeight()>
<android.widget.TabWidget: void setEnabled(boolean)>
<android.app.Activity: boolean isTaskRoot()>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int,int)>
<org.apache.harmony.awt.gl.font.FontProperty: int getStyle()>
<android.server.BluetoothService: java.lang.String getRemoteName(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>
<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>
<com.android.layoutlib.bridge.LayoutResult: int getSuccess()>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>
<android.graphics.Canvas: int getHeight()>
<android.app.Service: boolean onUnbind(android.content.Intent)>
<javax.imageio.stream.ImageInputStreamImpl: void flush()>
<android.app.LocalActivityManager: void removeAllActivities()>
<android.ddm.DdmHandleProfiling: void disconnected()>
<android.view.View: boolean getKeepScreenOn()>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>
<android.graphics.RectF: int describeContents()>
<android.hardware.GeomagneticField: float getDeclination()>
<android.view.Surface: void setFreezeTint(int)>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>
<javax.imageio.stream.ImageInputStreamImpl: void mark()>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,int)>
<android.telephony.SmsMessage: boolean isReplyPathPresent()>
<javax.imageio.ImageReadParam: void setSourceRenderSize(java.awt.Dimension)>
<java.awt.image.IndexColorModel: int getGreen(int)>
<android.text.method.DialerKeyListener: int getInputType()>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)>
<com.android.layoutlib.bridge.BridgeXmlPullAttributes: int getAttributeResourceValue(int,int)>
<org.apache.harmony.x.imageio.metadata.IIOMetadataUtils: javax.imageio.metadata.IIOMetadataFormat instantiateMetadataFormat(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>
<android.server.BluetoothService: int getBondState(java.lang.String)>
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>
<android.database.CursorWrapper: boolean isAfterLast()>
<org.apache.harmony.awt.wtk.NativeRobot: void mouseWheel(int)>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.view.View: int getTopPaddingOffset()>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<android.view.KeyEvent: char getDisplayLabel()>
<com.android.server.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt()>
<java.awt.GraphicsEnvironment: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>
<android.preference.DialogPreference: void onDialogClosed(boolean)>
<android.graphics.Rect: boolean contains(int,int)>
<android.opengl.GLES10: void glBindTexture(int,int)>
<javax.imageio.event.IIOReadUpdateListener: void imageUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int[])>
<java.awt.font.TextLayout: java.lang.Object clone()>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenerateMipmapOES(int)>
<android.pim.vcard.VCardParser_V21: boolean parse(java.io.InputStream,java.lang.String,android.pim.vcard.VCardInterpreter)>
<android.text.Editable: void setFilters(android.text.InputFilter[])>
<android.pim.vcard.VCardComposer.HandlerForOutputStream: void <init>(java.io.OutputStream)>
<android.content.pm.Signature: int describeContents()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.gesture.Gesture: int getStrokesCount()>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>
<javax.imageio.metadata.IIOMetadataNode: void setPrefix(java.lang.String)>
<android.renderscript.ProgramVertex.MatrixAllocation: void setupOrthoWindow(int,int)>
<javax.imageio.ImageWriteParam: int getTilingMode()>
<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>
<javax.imageio.ImageWriter: void prepareWriteSequence(javax.imageio.metadata.IIOMetadata)>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AbsListView: void clearTextFilter()>
<org.apache.harmony.awt.gl.ImageSurface: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,int)>
<android.security.MessageDigest: void update(byte[])>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<java.awt.Point: double getY()>
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int)>
<android.view.VelocityTracker: void clear()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String[] getAttributeNames(java.lang.String)>
<android.view.View: int getId()>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.widget.AbsListView: void setTranscriptMode(int)>
<com.android.server.status.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<java.awt.image.ByteLookupTable: void <init>(int,byte[])>
<android.app.Activity: void setTitleColor(int)>
<java.awt.HeadlessToolkit: boolean getLockingKeyState(int)>
<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>
<android.content.ContentProvider: java.lang.String getReadPermission()>
<java.awt.im.InputMethodHighlight: void <init>(boolean,int,int)>
<android.server.search.Searchables: void buildSearchableList()>
<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>
<android.widget.TwoLineListItem: void onFinishInflate()>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>
<java.awt.image.DataBufferInt: void <init>(int[],int)>
<java.awt.Component: boolean isEnabled()>
<java.awt.Polygon: boolean contains(double,double)>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>
<org.apache.harmony.awt.gl.image.URLDecodingImageSource: void <init>(java.net.URL)>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.Resources getResources()>
<android.graphics.RectF: void set(float,float,float,float)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: long getFontHandle()>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>
<android.widget.TextView: void setMaxLines(int)>
<android.view.Window: void setBackgroundDrawableResource(int)>
<android.database.AbstractCursor: boolean move(int)>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>
<org.apache.harmony.awt.gl.Surface: boolean isNativeDrawable()>
<android.widget.AbsListView: android.view.View getSelectedView()>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<android.pim.vcard.VCardBuilder: void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>
<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>
<java.awt.color.ICC_ColorSpace: float getMinValue(int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>
<java.awt.AWTEvent: void consume()>
<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>
<android.opengl.GLES10: void glTranslatef(float,float,float)>
<java.awt.Component: boolean prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<android.widget.SimpleCursorAdapter.CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.content.IntentFilter.AuthorityEntry: void <init>(java.lang.String,java.lang.String)>
<java.awt.event.ComponentEvent: java.awt.Component getComponent()>
<java.awt.image.ReplicateScaleFilter: void setDimensions(int,int)>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<android.view.animation.GridLayoutAnimationController: int getDirection()>
<java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
<android.telephony.SignalStrength: int getEvdoDbm()>
<android.text.Layout: int getLineStart(int)>
<android.graphics.Canvas: boolean isOpaque()>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>
<android.pim.ICalendar.Property: void addParameter(android.pim.ICalendar.Parameter)>
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>
<java.awt.Graphics: void setClip(java.awt.Shape)>
<java.awt.image.DataBufferInt: int[] getData()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(float,int)>
<com.android.commands.svc.PowerCommand: void <init>()>
<android.location.Address: void clearLatitude()>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>
<android.graphics.Paint: void <init>()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence)>
<org.apache.harmony.awt.gl.image.PNGData: void add(org.apache.harmony.awt.gl.image.PNGChunk)>
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<org.apache.harmony.awt.gl.font.AndroidFont: boolean isGlyphExists(char)>
<android.graphics.Region: boolean isComplex()>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceChange(android.preference.Preference)>
<javax.imageio.ImageReader: void removeAllIIOReadUpdateListeners()>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>
<android.widget.PopupWindow: int getInputMethodMode()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>
<android.speech.SpeechRecognizer: void destroy()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalUnderlineOffset()>
<android.preference.OnDependencyChangeListener: void onDependencyChanged(android.preference.Preference,boolean)>
<android.telephony.NeighboringCellInfo: int getPsc()>
<com.android.server.ProcessStats: int getLastIoWaitTime()>
<android.graphics.MaskFilter: void finalize()>
<javax.imageio.stream.MemoryCacheImageOutputStream: void write(byte[],int,int)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
<android.widget.ExpandableListAdapter: java.lang.Object getChild(int,int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>
<android.widget.SimpleAdapter: int getCount()>
<java.awt.image.Raster: java.awt.image.Raster getParent()>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>
<android.os.Bundle: char getChar(java.lang.String)>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>
<javax.imageio.IIOParam: void <init>()>
<java.awt.image.BandedSampleModel: void <init>(int,int,int,int)>
<android.os.Parcel: byte[] createByteArray()>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>
<android.net.LocalSocket: void setSendBufferSize(int)>
<java.awt.geom.GeneralPath: void reset()>
<java.awt.image.RGBImageFilter: void substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)>
<com.android.layoutlib.bridge.Bridge: java.lang.String resolveResourceValue(int[])>
<android.view.View: void invalidate(int,int,int,int)>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>
<android.text.StaticLayout: int getLineTop(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>
<java.awt.geom.Area: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<java.awt.image.DataBuffer: void setElem(int,int,int)>
<android.graphics.Color: int red(int)>
<android.view.SurfaceView: void onMeasure(int,int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void dispose()>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>
<android.content.pm.InstrumentationInfo: java.lang.String toString()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>
<java.awt.image.DirectColorModel: int getGreen(int)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getRootName()>
<android.widget.CompoundButton: boolean performClick()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void decodeImage()>
<android.content.Context: java.lang.String[] databaseList()>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<android.graphics.drawable.ClipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock setSource(java.lang.Object,int)>
<android.opengl.GLES10: void glNormal3f(float,float,float)>
<android.view.ViewStub: void setLayoutResource(int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void close()>
<java.awt.font.GlyphVector: float[] getGlyphPositions(int,int,float[])>
<android.hardware.Camera.Parameters: int getJpegQuality()>
<android.graphics.Paint: void finalize()>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.AssetManager getAssets()>
<javax.imageio.stream.ImageOutputStream: void writeByte(int)>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>
<android.security.Sha1MessageDigest: void <init>()>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.String getFamilyFromLogicalFace(java.lang.String)>
<java.awt.image.renderable.ParameterBlock: short getShortParameter(int)>
<android.widget.TextView: void onSelectionChanged(int,int)>
<java.awt.font.ShapeGraphicAttribute: void draw(java.awt.Graphics2D,float,float)>
<android.content.res.AssetManager.AssetInputStream: int read(byte[])>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<android.content.ContentValues: void remove(java.lang.String)>
<java.awt.image.ColorModel: java.awt.image.WritableRaster getAlphaRaster(java.awt.image.WritableRaster)>
<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>
<org.apache.harmony.x.imageio.spi.RAFIISSpi: java.lang.String getDescription(java.util.Locale)>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
<android.graphics.Picture: void finalize()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.bluetooth.BluetoothAdapter: boolean disable()>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>
<java.awt.image.DataBufferShort: void <init>(int,int)>
<android.preference.CheckBoxPreference: void setDisableDependentsState(boolean)>
<android.widget.ExpandableListView: int getPackedPositionType(long)>
<org.apache.harmony.awt.im.InputMethodContext: java.awt.im.spi.InputMethod getInputMethod()>
<com.google.android.mms.pdu.RetrieveConf: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<java.awt.Graphics: void setColor(java.awt.Color)>
<android.graphics.PathMeasure: void <init>()>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[],int,int)>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>
<android.os.PatternMatcher: void <init>(android.os.Parcel)>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getElementMinChildren(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glScalex(int,int,int)>
<com.google.android.gles_jni.GLImpl: void glSampleCoverage(float,boolean)>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>
<android.text.SpannableStringBuilder: void <init>()>
<android.graphics.Paint: float getTextScaleX()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getVisibleFrameLw()>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>
<org.apache.harmony.awt.gl.font.FontManager: java.awt.Font[] getAllFonts()>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<com.android.commands.svc.WifiCommand: java.lang.String shortHelp()>
<android.view.View: void dispatchSetSelected(boolean)>
<javax.imageio.stream.ImageOutputStream: void writeInt(int)>
<java.awt.image.MultiPixelPackedSampleModel: java.lang.Object getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.database.DatabaseUtils.InsertHelper: void close()>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>
<java.awt.event.HierarchyBoundsAdapter: void ancestorResized(java.awt.event.HierarchyEvent)>
<android.location.Location: void removeSpeed()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.lang.Object clone()>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.server.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>
<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(char[],int,int,java.awt.font.FontRenderContext)>
<android.content.pm.PackageInfo: void <init>()>
<java.awt.geom.Arc2D.Double: void setAngleStart(double)>
<javax.imageio.stream.FileCacheImageInputStream: void <init>(java.io.InputStream,java.io.File)>
<javax.imageio.metadata.IIOInvalidTreeException: org.w3c.dom.Node getOffendingNode()>
<android.widget.AdapterView: boolean canAnimate()>
<javax.imageio.event.IIOReadUpdateListener: void passStarted(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[])>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setDimensions(int,int)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>
<android.os.Debug: long threadCpuTimeNanos()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String[] getAttributeNames(java.lang.String)>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>
<javax.imageio.ImageReadParam: int getSourceNumProgressivePasses()>
<java.beans.FeatureDescriptor: void setPreferred(boolean)>
<java.awt.event.MouseEvent: int getX()>
<org.apache.harmony.awt.wtk.NativeEventQueue: void awake()>
<com.google.android.mms.util.PduCacheEntry: com.google.android.mms.pdu.GenericPdu getPdu()>
<java.awt.geom.CubicCurve2D: void subdivide(java.awt.geom.CubicCurve2D,java.awt.geom.CubicCurve2D,java.awt.geom.CubicCurve2D)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>
<android.content.AsyncQueryHandler.WorkerHandler: void handleMessage(android.os.Message)>
<android.text.HtmlToSpannedConverter: void startDocument()>
<android.view.View: boolean isInTouchMode()>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>
<android.view.View: void setMinimumWidth(int)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.server.am.UsageStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>
<android.media.AudioManager: int getMode()>
<com.google.android.gles_jni.GLImpl: void glTexGeni(int,int,int)>
<java.awt.image.ColorModel: int getGreen(int)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.widget.SimpleCursorAdapter: void changeCursor(android.database.Cursor)>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>
<java.awt.Component: java.awt.event.KeyListener[] getKeyListeners()>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>
<android.app.Service: void stopSelf()>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>
<android.text.StaticLayout: int getBottomPadding()>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void rotate(double,double,double)>
<android.preference.DialogPreference: void setNegativeButtonText(int)>
<java.awt.geom.Point2D: double distanceSq(java.awt.geom.Point2D)>
<com.android.layoutlib.bridge.BridgeResources: java.lang.CharSequence getText(int)>
<org.apache.harmony.awt.wtk.NativeWindow: void setPacked(boolean)>
<android.database.CursorWindow: boolean putNull(int,int)>
<java.awt.image.DataBufferUShort: void <init>(short[],int,int)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<java.awt.event.HierarchyEvent: long getChangeFlags()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float[] getBaselineOffsets()>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>
<java.awt.geom.QuadCurve2D.Double: java.awt.geom.Point2D getCtrlPt()>
<android.widget.TabHost: void setCurrentTab(int)>
<android.widget.Toast: void show()>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>
<android.renderscript.Allocation.Adapter1D: void data(int[])>
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>
<android.widget.RadioButton: void toggle()>
<android.media.ExifInterface: boolean hasThumbnail()>
<android.provider.Telephony.Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<java.awt.FontFormatException: void <init>(java.lang.String)>
<android.preference.Preference: java.lang.CharSequence getTitle()>
<java.awt.image.RenderedImage: int getNumYTiles()>
<java.awt.geom.Arc2D: void setArcByTangent(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,double)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>
<java.awt.Toolkit: java.awt.Cursor createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)>
<android.provider.ContactsContract.Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<android.os.Debug: int getGlobalClassInitCount()>
<android.text.BoringLayout: int getEllipsisStart(int)>
<android.view.SurfaceHolder: void setSizeFromLayout()>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>
<com.google.android.gles_jni.GLImpl: void glPolygonOffset(float,float)>
<android.preference.Preference: int getWidgetLayoutResource()>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>
<javax.imageio.ImageIO: java.awt.image.BufferedImage read(javax.imageio.stream.ImageInputStream)>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<com.android.server.am.BatteryStatsService: void noteScreenOn()>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,int[],int)>
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>
<android.app.Activity: void removeDialog(int)>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.BufferedImageOp: java.awt.RenderingHints getRenderingHints()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>
<java.awt.Color: java.awt.Color decode(java.lang.String)>
<java.awt.Component: java.awt.Color getBackground()>
<android.text.style.RelativeSizeSpan: float getSizeChange()>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<android.view.ViewGroup: void clearFocus()>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>
<android.os.IBinder.DeathRecipient: void binderDied()>
<java.awt.im.spi.InputMethod: void hideWindows()>
<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<javax.microedition.khronos.opengles.GL10: void glScalef(float,float,float)>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher.ViewFactory)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextRightHit(int,java.awt.font.TextLayout.CaretPolicy)>
<android.widget.DatePicker: void setEnabled(boolean)>
<android.opengl.GLSurfaceView: int getRenderMode()>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.TypedArray obtainTypedArray(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<org.apache.harmony.awt.gl.MultiRectArea: void intersect(org.apache.harmony.awt.gl.MultiRectArea)>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<java.awt.geom.QuadCurve2D.Double: java.awt.geom.Point2D getP1()>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<javax.imageio.IIOImage: void setRaster(java.awt.image.Raster)>
<javax.imageio.ImageWriter: void prepareReplacePixels(int,java.awt.Rectangle)>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>
<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>
<javax.microedition.khronos.opengles.GL10: void glDepthMask(boolean)>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>
<java.awt.ItemSelectable: java.lang.Object[] getSelectedObjects()>
<android.preference.Preference: void setLayoutResource(int)>
<java.awt.Font: void <init>(java.lang.String,int,int)>
<android.view.ViewGroup: void detachAllViewsFromParent()>
<com.android.server.status.DateView: void onDetachedFromWindow()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>
<java.awt.Point: double getX()>
<android.view.SurfaceHolder: android.view.Surface getSurface()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.pim.ICalendar.Component: void addChild(android.pim.ICalendar.Component)>
<com.android.common.OperationScheduler: void resetTransientError()>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fill(java.awt.Shape)>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<java.awt.geom.Rectangle2D: void setFrame(double,double,double,double)>
<android.telephony.SmsMessage: int getIndexOnIcc()>
<android.server.BluetoothService: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>
<android.text.style.TabStopSpan.Standard: int getTabStop()>
<javax.imageio.IIOParam: void setDestinationType(javax.imageio.ImageTypeSpecifier)>
<android.content.ContentProvider: boolean onCreate()>
<android.widget.DialerFilter: void <init>(android.content.Context)>
<java.awt.image.BufferStrategy: boolean contentsRestored()>
<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>
<org.apache.harmony.awt.im.InputMethodContext: boolean isCompositionEnabled()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
<android.os.Debug: void resetGlobalExternalFreedCount()>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
<android.content.DialogInterface: void cancel()>
<java.awt.font.MultipleMaster: java.lang.String[] getDesignAxisNames()>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>
<android.app.backup.BackupDataInput: java.lang.String getKey()>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>
<android.util.SparseBooleanArray: void put(int,boolean)>
<android.widget.AbsSeekBar: void drawableStateChanged()>
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>
<java.awt.geom.Arc2D: void setArc(java.awt.geom.Arc2D)>
<android.view.ViewGroup: void clearDisappearingChildren()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.apache.harmony.awt.gl.font.FontManager: int[] parseIntervals(java.lang.String)>
<android.graphics.drawable.GradientDrawable: void setShape(int)>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>
<android.widget.ImageSwitcher: void setImageResource(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setBackground(java.awt.Color)>
<javax.imageio.plugins.jpeg.JPEGQTable: void <init>(int[])>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.TextView: int getRightPaddingOffset()>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>
<com.android.layoutlib.bridge.BridgeContext: void setBridgeInflater(android.view.BridgeInflater)>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>
<java.awt.image.ComponentSampleModel: float getSampleFloat(int,int,int,java.awt.image.DataBuffer)>
<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>
<java.beans.FeatureDescriptor: void setHidden(boolean)>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.content.ContentProviderOperation: boolean isWriteOperation()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.server.BluetoothService.BondState: void addAutoPairingFailure(java.lang.String)>
<java.awt.Component.FlipBufferStrategy: java.awt.BufferCapabilities getCapabilities()>
<android.widget.ListView: boolean canAnimate()>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>
<java.awt.Event: java.lang.String paramString()>
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>
<android.graphics.Paint: void clearShadowLayer()>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int[] getWidths()>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>
<android.app.Activity: void setContentView(android.view.View)>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<java.awt.font.LineMetrics: float getHeight()>
<java.awt.image.RenderedImage: int getTileGridXOffset()>
<java.awt.Component: void resize(java.awt.Dimension)>
<android.widget.ListView: boolean getItemsCanFocus()>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String getPackageCodePath()>
<android.pim.vcard.VCardEntryCounter: void end()>
<android.view.ViewGroup: void addView(android.view.View)>
<java.awt.im.InputContext: java.lang.Object getInputMethodControlObject()>
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>
<android.os.Handler: android.os.Looper getLooper()>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>
<java.awt.font.TextLayout: java.awt.Shape[] getCaretShapes(int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>
<android.bluetooth.BluetoothAdapter: boolean isEnabled()>
<android.text.SpannableString: void removeSpan(java.lang.Object)>
<java.awt.geom.CubicCurve2D: boolean contains(java.awt.geom.Point2D)>
<android.content.Intent: void writeToParcel(android.os.Parcel,int)>
<com.android.server.KeyInputQueue: void getInputConfiguration(android.content.res.Configuration)>
<java.awt.image.ConvolveOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<javax.imageio.event.IIOReadProgressListener: void thumbnailComplete(javax.imageio.ImageReader)>
<java.awt.image.Raster: java.awt.image.WritableRaster createPackedRaster(int,int,int,int[],java.awt.Point)>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.CursorFactory getCursorFactory()>
<java.awt.image.WritableRaster: void setSample(int,int,int,int)>
<java.awt.image.DataBufferShort: void setElem(int,int)>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhoto()>
<java.beans.PropertyEditor: boolean isPaintable()>
<com.android.server.am.ActivityManagerService: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)>
<java.awt.Component: float getAlignmentX()>
<android.location.Criteria: int getAccuracy()>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<java.awt.image.renderable.RenderedImageFactory: java.awt.image.RenderedImage create(java.awt.image.renderable.ParameterBlock,java.awt.RenderingHints)>
<com.google.android.gles_jni.GLImpl: void glDepthRangef(float,float)>
<java.awt.image.RescaleOp: int getNumFactors()>
<java.awt.event.HierarchyListener: void hierarchyChanged(java.awt.event.HierarchyEvent)>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glRotatex(int,int,int,int)>
<android.text.Layout: int getLineDescent(int)>
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>
<android.pim.vcard.VCardUtils: boolean isValidInV21ButUnknownToContactsPhoteType(java.lang.String)>
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.awt.geom.Rectangle2D getVisualBounds()>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>
<android.telephony.SignalStrength: int describeContents()>
<android.view.Window: void setFlags(int,int)>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>
<android.database.CursorWrapper: boolean moveToLast()>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.view.View: void getDrawingRect(android.graphics.Rect)>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.app.SearchManager.OnCancelListener)>
<java.awt.HeadlessToolkit: java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight)>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(int,int)>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelection(java.lang.String,java.lang.String[])>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillPolygon(java.awt.Polygon)>
<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>
<java.awt.geom.RoundRectangle2D.Double: double getWidth()>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext,java.awt.geom.AffineTransform)>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
<java.awt.image.WritableRaster: void setRect(java.awt.image.Raster)>
<android.webkit.WebIconDatabase: void removeAllIcons()>
<android.view.View: int resolveSize(int,int)>
<android.content.ContentQueryMap: void requery()>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.pim.vcard.VCardUtils: boolean isV21Word(java.lang.String)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(double[],int,int)>
<java.awt.Component: java.awt.Graphics getGraphics()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String[] getChildNames(java.lang.String)>
<android.widget.ViewAnimator: void showPrevious()>
<java.awt.event.MouseListener: void mouseClicked(java.awt.event.MouseEvent)>
<java.awt.image.ColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<java.awt.image.ComponentSampleModel: int getSample(int,int,int,java.awt.image.DataBuffer)>
<android.os.BatteryStats.Uid: void noteWifiMulticastEnabledLocked()>
<java.awt.geom.AffineTransform: void rotate(double,double,double)>
<java.awt.geom.Line2D: int relativeCCW(double,double)>
<java.awt.image.ComponentSampleModel: int getScanlineStride()>
<java.awt.image.DataBuffer: int getDataType()>
<android.pim.vcard.VCardEntryConstructor: void propertyParamType(java.lang.String)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitMultiANewArrayInsn(java.lang.String,int)>
<android.pim.vcard.VCardUtils: java.lang.String getPhoneTypeString(java.lang.Integer)>
<java.awt.image.MultiPixelPackedSampleModel: int getScanlineStride()>
<java.awt.image.BufferedImageFilter: void imageComplete(int)>
<android.widget.ArrayAdapter: int getCount()>
<android.widget.GridView: int getStretchMode()>
<android.telephony.gsm.SmsMessage: int getStatusOnSim()>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.util.Base64: byte[] encode(byte[],int,int,int)>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>
<java.awt.image.DataBufferShort: int getElem(int)>
<android.app.Service: void finalize()>
<java.awt.font.GlyphVector: int getGlyphCharIndex(int)>
<org.apache.harmony.awt.ChoiceStyle: int getPopupWidth(int)>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>
<java.awt.image.BufferedImage: void <init>(int,int,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.server.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<java.awt.image.CropImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<org.apache.harmony.awt.wtk.NativeWindow: void dispose()>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>
<android.pim.vcard.VCardEntry: android.pim.vcard.VCardEntry buildFromResolver(android.content.ContentResolver,android.net.Uri)>
<com.google.android.gles_jni.GLImpl: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.app.ProgressDialog: int getProgress()>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>
<android.graphics.PointF: void set(android.graphics.PointF)>
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>
<android.content.SyncAdapterType: boolean isUserVisible()>
<java.awt.ComponentBehavior: void setEnabled(boolean)>
<java.awt.geom.RoundRectangle2D: void setFrame(double,double,double,double)>
<android.view.ViewStub: int getInflatedId()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi: javax.imageio.ImageWriter createWriterInstance(java.lang.Object)>
<com.android.server.am.ActivityManagerService: void noteWakeupAlarm(android.content.IIntentSender)>
<android.view.View: void postInvalidate(int,int,int,int)>
<android.database.CursorWrapper: boolean isFirst()>
<android.preference.RingtonePreference: void onClick()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>
<com.android.server.SystemBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.content.pm.PackageParser.Service: java.lang.String toString()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendPhotos(java.util.List)>
<android.content.DialogInterface.OnClickListener: void onClick(android.content.DialogInterface,int)>
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>
<android.content.ContentUris: android.net.Uri.Builder appendId(android.net.Uri.Builder,long)>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<java.awt.Component.FlipBufferStrategy: boolean contentsLost()>
<java.awt.color.ICC_Profile: java.lang.Object readResolve()>
<android.app.Activity: void onPause()>
<java.awt.event.InvocationEvent: void <init>(java.lang.Object,java.lang.Runnable,java.lang.Object,boolean)>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>
<android.pim.vcard.CustomBufferedReader: java.lang.String readLine()>
<android.view.View: int getVerticalFadingEdgeLength()>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(android.os.Parcel)>
<com.google.android.mms.pdu.AcknowledgeInd: int getReportAllowed()>
<javax.microedition.khronos.opengles.GL10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.database.CursorWindow: void finalize()>
<android.pim.ICalendar: android.pim.ICalendar.Component parseEvent(java.lang.String)>
<android.os.Debug: int getGlobalAllocSize()>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<java.awt.Graphics: void dispose()>
<android.view.ViewGroup: void dispatchDisplayHint(int)>
<android.server.BluetoothA2dpService: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.BridgeContext: android.os.Looper getMainLooper()>
<android.widget.PopupWindow: void update(int,int,int,int,boolean)>
<java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.String)>
<android.content.res.AssetManager.AssetInputStream: void mark(int)>
<android.pim.ICalendar.Property: java.lang.String getValue()>
<android.text.Html.TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>
<android.server.search.SearchManagerService: void <init>(android.content.Context)>
<java.awt.Graphics: java.lang.String toString()>
<android.renderscript.ProgramVertex.MatrixAllocation: void destroy()>
<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>
<android.content.Context: void startActivity(android.content.Intent)>
<java.awt.Graphics2D: void <init>()>
<android.widget.PopupWindow: int getWidth()>
<com.google.android.gles_jni.GLImpl: void glTexGenx(int,int,int)>
<javax.imageio.ImageReadParam: java.awt.Dimension getSourceRenderSize()>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>
<android.view.View: void onVisibilityChanged(android.view.View,int)>
<java.awt.image.DataBufferByte: void <init>(int,int)>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>
<java.awt.event.InputEvent: boolean isAltGraphDown()>
<java.awt.RenderingHints: void add(java.awt.RenderingHints)>
<org.apache.harmony.awt.wtk.NativeWindow: void ungrabMouse()>
<android.bluetooth.BluetoothHeadset.ServiceListener: void onServiceDisconnected()>
<com.android.server.am.ActivityManagerService: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.text.style.StrikethroughSpan: void <init>()>
<javax.imageio.stream.FileImageInputStream: int read(byte[],int,int)>
<java.awt.Component: int getY()>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Font getFont()>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>
<com.google.android.gles_jni.GLImpl: void glClearColorx(int,int,int,int)>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context,android.content.ComponentName)>
<javax.imageio.metadata.IIOMetadataFormat: int getAttributeValueType(java.lang.String,java.lang.String)>
<android.renderscript.Element.Builder: android.renderscript.Element create()>
<android.view.MotionEvent: float getRawY()>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)>
<android.webkit.WebView: android.view.View getZoomControls()>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>
<android.graphics.Canvas: void translate(float,float)>
<org.apache.harmony.awt.gl.Surface: long lock()>
<org.apache.harmony.awt.gl.font.FontManager: java.awt.peer.FontPeer createDefaultFont(int,int)>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.provider.Calendar.Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.text.style.StyleSpan: void <init>(int)>
<org.apache.harmony.awt.ReadOnlyIterator: java.lang.Object next()>
<android.text.LoginFilter: void onInvalidCharacter(char)>
<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: void copyArea(int,int,int,int,int,int)>
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.security.Sha1MessageDigest: byte[] digest()>
<org.apache.harmony.awt.gl.image.ImageLoader: void addImageSource(org.apache.harmony.awt.gl.image.DecodingImageSource)>
<android.text.format.Time: void set(int,int,int,int,int,int)>
<java.awt.image.VolatileImage: void <init>()>
<android.database.MatrixCursor: java.lang.String getString(int)>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>
<java.awt.geom.Area: boolean contains(double,double,double,double)>
<android.graphics.Matrix: boolean preRotate(float)>
<java.awt.geom.GeneralPath: void closePath()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<android.speech.srec.Recognizer: void destroy()>
<javax.imageio.ImageTypeSpecifier: java.awt.image.SampleModel getSampleModel()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeChars(char[],int,int)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>
<java.awt.image.WritableRenderedImage: void removeTileObserver(java.awt.image.TileObserver)>
<android.webkit.CacheManager.CacheResult: long getContentLength()>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>
<android.view.View: int getBottom()>
<java.awt.GraphicsConfiguration: java.awt.geom.AffineTransform getDefaultTransform()>
<android.util.Base64: byte[] encode(byte[],int)>
<java.awt.geom.QuadCurve2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<android.text.DynamicLayout: int getLineTop(int)>
<java.awt.Toolkit: java.lang.String getProperty(java.lang.String,java.lang.String)>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.content.IntentFilter: int getPriority()>
<android.telephony.NeighboringCellInfo: void setRssi(int)>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
<android.app.WallpaperInfo: java.lang.String getPackageName()>
<java.awt.Color: int getBlue()>
<javax.imageio.IIOException: void <init>(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Format: boolean controlCaps()>
<android.opengl.GLES10: void glScalex(int,int,int)>
<android.database.MergeCursor: short getShort(int)>
<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>
<com.android.server.ProcessStats: void <init>(boolean)>
<android.hardware.SensorListener: void onAccuracyChanged(int,int)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(byte[],int,int)>
<android.text.Layout: java.lang.CharSequence getText()>
<android.webkit.WebView: java.lang.String getUrl()>
<com.android.server.am.UsageStatsService: void notePauseComponent(android.content.ComponentName)>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>
<android.text.Layout: boolean getLineContainsTab(int)>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.telephony.NeighboringCellInfo: void setCid(int)>
<android.gesture.GestureLibrary: void setSequenceType(int)>
<android.graphics.Rect: int height()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>
<android.net.ConnectivityManager: int getNetworkPreference()>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>
<java.awt.Component: void addKeyListener(java.awt.event.KeyListener)>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>
<java.awt.geom.RoundRectangle2D.Double: void setRoundRect(java.awt.geom.RoundRectangle2D)>
<android.inputmethodservice.Keyboard.Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: boolean is_sRGB_CS(java.awt.color.ColorSpace)>
<java.awt.event.AdjustmentEvent: int getAdjustmentType()>
<android.view.Gravity: boolean isVertical(int)>
<android.widget.AbsListView: void onWindowFocusChanged(boolean)>
<javax.imageio.ImageReadParam: java.awt.image.BufferedImage getDestination()>
<android.content.Entity: java.util.ArrayList getSubValues()>
<android.widget.TableLayout: void onMeasure(int,int)>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<java.awt.Polygon: boolean inside(int,int)>
<com.google.android.gles_jni.GLImpl: void glOrthox(int,int,int,int,int,int)>
<android.inputmethodservice.Keyboard.Key: int[] getCurrentDrawableState()>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<javax.imageio.spi.ImageInputStreamSpi: javax.imageio.stream.ImageInputStream createInputStreamInstance(java.lang.Object)>
<java.awt.FontMetrics: java.awt.geom.Rectangle2D getMaxCharBounds(java.awt.Graphics)>
<java.awt.geom.AffineTransform: void inverseTransform(double[],int,double[],int,int)>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<java.awt.AlphaComposite: int getRule()>
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.graphics.Canvas: void dispose()>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<android.database.CursorWindow: void close()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void setGlyphPositions(float[])>
<android.os.FileObserver: void finalize()>
<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<java.awt.Component: java.awt.Point getLocationOnScreen()>
<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGroupingId()>
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>
<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>
<android.net.MailTo: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,int[],int)>
<com.android.server.status.StatusBarService: void setNotificationCallbacks(com.android.server.status.StatusBarService.NotificationCallbacks)>
<javax.imageio.stream.ImageInputStream: int readBit()>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>
<com.android.server.LightsService: void finalize()>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
<android.content.Intent: void <init>(java.lang.String)>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeResourceValue(int,int)>
<android.preference.CheckBoxPreference: boolean isChecked()>
<android.text.style.DynamicDrawableSpan: void <init>(int)>
<android.os.Parcel: long readLong()>
<javax.imageio.event.IIOReadProgressListener: void thumbnailStarted(javax.imageio.ImageReader,int,int)>
<android.util.SparseBooleanArray: void append(int,boolean)>
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>
<java.awt.image.Raster: java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer,int,int,int,int,int[],java.awt.Point)>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>
<com.android.server.am.ActivityManagerService: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int charWidth(int)>
<org.apache.harmony.awt.wtk.KeyInfo: void setKeyChars(java.lang.StringBuffer)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.database.Cursor: boolean isBeforeFirst()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvf(int,int,float)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<java.awt.event.HierarchyBoundsListener: void ancestorMoved(java.awt.event.HierarchyEvent)>
<java.awt.Adjustable: void removeAdjustmentListener(java.awt.event.AdjustmentListener)>
<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>
<com.android.commands.svc.DataCommand: void <init>()>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>
<javax.imageio.stream.ImageInputStreamImpl: void flushBefore(long)>
<java.awt.image.DataBufferUShort: void setElem(int,int,int)>
<java.awt.color.ICC_ProfileRGB: float[] getMediaWhitePoint()>
<android.media.AsyncPlayer: void stop()>
<android.text.style.URLSpan: void onClick(android.view.View)>
<android.opengl.GLES20: void glDetachShader(int,int)>
<android.pim.vcard.VCardEntryCounter: void startEntry()>
<java.awt.image.ColorConvertOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>
<android.util.SparseIntArray: void put(int,int)>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<org.apache.harmony.awt.gl.color.ColorScaler: float[][] scaleNormalize(java.awt.image.Raster)>
<java.awt.im.spi.InputMethodDescriptor: java.awt.im.spi.InputMethod createInputMethod()>
<com.android.server.status.DateView: void onAttachedToWindow()>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.hardware.Camera.Parameters: void setPictureFormat(int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getClassAttribute()>
<android.widget.AutoCompleteTextView.Validator: boolean isValid(java.lang.CharSequence)>
<android.text.method.ReplacementTransformationMethod: char[] getReplacement()>
<android.app.IntentService: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(float[],int)>
<android.gesture.GestureStroke: android.graphics.Path getPath()>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<java.awt.geom.CubicCurve2D.Float: java.awt.geom.Point2D getCtrlP2()>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>
<android.app.ActivityThread.PackageInfo: boolean isSecurityViolation()>
<org.apache.harmony.awt.gl.font.BasicMetrics: float getAdvance()>
<java.awt.Color: float[] getRGBColorComponents(float[])>
<android.speech.srec.Recognizer.Grammar: void destroy()>
<android.os.ParcelFileDescriptor: void close()>
<java.awt.image.PixelInterleavedSampleModel: int hashCode()>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>
<android.os.Bundle: void putByte(java.lang.String,byte)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributePrefix(int)>
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>
<android.content.pm.PackageParser.Instrumentation: java.lang.String toString()>
<org.apache.harmony.awt.wtk.NativeEventQueue: void performLater(org.apache.harmony.awt.wtk.NativeEventQueue.Task)>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>
<java.awt.geom.Line2D: double ptSegDistSq(java.awt.geom.Point2D)>
<java.awt.image.ColorModel: boolean isCompatibleSampleModel(java.awt.image.SampleModel)>
<android.server.BluetoothService: boolean isDiscovering()>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>
<android.hardware.Camera.Parameters: java.util.List getSupportedSceneModes()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.content.pm.PermissionGroupInfo: int describeContents()>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>
<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>
<android.os.StatFs: int getFreeBlocks()>
<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
<android.content.res.Resources: void flushLayoutCache()>
<android.widget.SlidingDrawer: void toggle()>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>
<com.google.android.util.AbstractMessageParser.Html: java.util.List getInfo()>
<android.content.res.Resources.Theme: void applyStyle(int,boolean)>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>
<android.os.Parcelable: int describeContents()>
<android.text.style.TextAppearanceSpan: int getTextSize()>
<org.apache.harmony.awt.wtk.NativeWindow: void setIMStyle()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>
<android.text.style.TabStopSpan: int getTabStop()>
<android.content.Intent: void <init>(android.content.Intent)>
<android.media.FaceDetector: void finalize()>
<com.google.android.mms.pdu.PduBody: void addPart(int,com.google.android.mms.pdu.PduPart)>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isMedia()>
<java.awt.image.ColorModel: int getTransferType()>
<android.preference.CheckBoxPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>
<java.awt.image.IndexColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.app.PendingIntent: boolean equals(java.lang.Object)>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>
<org.apache.harmony.awt.gl.font.AndroidFontProperty: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int[],java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glStencilOp(int,int,int)>
<android.text.Layout: int getParagraphDirection(int)>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>
<org.apache.harmony.awt.gl.image.FileDecodingImageSource: boolean checkConnection()>
<org.apache.harmony.awt.gl.image.OffscreenImage: boolean prepareImage(java.awt.image.ImageObserver)>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>
<android.media.ToneGenerator: void release()>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
<java.awt.image.BufferedImage: int getTileGridYOffset()>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>
<java.awt.geom.Ellipse2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<android.widget.ListView: long[] getCheckedItemIds()>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getAverageCharWidth()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>
<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>
<com.google.android.mms.pdu.PduPart: void setContentTransferEncoding(byte[])>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>
<java.awt.Rectangle: java.awt.Point getLocation()>
<android.widget.ProgressBar: void setMax(int)>
<android.os.BatteryStats.Uid.Pkg.Serv: int getStarts(int)>
<android.view.SurfaceView: void <init>(android.content.Context)>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<javax.imageio.ImageReader: void setLocale(java.util.Locale)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>
<android.view.MenuItem: int getOrder()>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<java.awt.font.LineMetrics: int getBaselineIndex()>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>
<android.database.CursorWindow: int getStartPosition()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: boolean markSupported()>
<org.apache.harmony.awt.wtk.NativeRobot: void mouseMove(int,int)>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>
<org.apache.harmony.awt.wtk.CursorFactory: org.apache.harmony.awt.wtk.NativeCursor getCursor(int)>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>
<android.server.BluetoothService: void finalize()>
<android.content.SyncContext: void onFinished(android.content.SyncResult)>
<android.pim.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.lang.String)>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.telephony.SignalStrength: java.lang.String toString()>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>
<android.content.Intent: boolean hasCategory(java.lang.String)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void setBody(com.google.android.mms.pdu.PduBody)>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String toHtml(boolean)>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>
<android.text.Spannable.Factory: android.text.Spannable.Factory getInstance()>
<android.widget.ProgressBar: void setProgress(int)>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<java.awt.geom.RoundRectangle2D.Double: void <init>()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<org.apache.harmony.awt.state.State: boolean isFontSet()>
<android.preference.VolumePreference.SeekBarVolumizer: void revertVolume()>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>
<java.awt.image.MultiPixelPackedSampleModel: boolean equals(java.lang.Object)>
<java.awt.image.SampleModel: int[] getSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffset(float,float)>
<java.awt.image.DataBufferFloat: void setElem(int,int)>
<java.awt.image.ColorModel: java.lang.Object getDataElements(int[],int,java.lang.Object)>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>
<javax.imageio.stream.ImageInputStreamImpl: long readLong()>
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmTranslateColors(long,org.apache.harmony.awt.gl.color.NativeImageFormat,org.apache.harmony.awt.gl.color.NativeImageFormat)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>
<android.pim.ICalendar.Component: java.util.LinkedList getOrCreateChildren()>
<java.awt.image.ComponentSampleModel: int[] getBankIndices()>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>
<android.database.AbstractCursor: boolean isNull(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>
<android.widget.DatePicker: void updateDate(int,int,int)>
<android.graphics.Interpolator: void <init>(int)>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
<android.inputmethodservice.Keyboard: int getHeight()>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSuperscriptSizeY()>
<android.widget.ZoomControls: void hide()>
<android.view.Menu: void setGroupVisible(int,boolean)>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>
<java.awt.image.Kernel: void <init>(int,int,float[])>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>
<java.awt.RenderingHints: void <init>(java.awt.RenderingHints.Key,java.lang.Object)>
<java.awt.geom.Rectangle2D.Double: boolean isEmpty()>
<android.widget.ListAdapter: boolean isEnabled(int)>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>
<java.awt.GraphicsConfiguration: java.awt.BufferCapabilities getBufferCapabilities()>
<java.awt.geom.RoundRectangle2D.Double: double getHeight()>
<java.awt.Graphics: java.awt.Rectangle getClipBounds()>
<java.awt.geom.AffineTransform: void <init>(float[])>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.renderscript.ProgramVertex.MatrixAllocation: void loadTexture(android.renderscript.Matrix4f)>
<android.server.BluetoothService: boolean enable()>
<android.app.Dialog: boolean isShowing()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getAttributeDescription(java.lang.String,java.lang.String,java.util.Locale)>
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>
<android.graphics.drawable.InsetDrawable: boolean onStateChange(int[])>
<javax.imageio.metadata.IIOMetadata: java.lang.String[] getMetadataFormatNames()>
<com.google.android.mms.ContentType: java.util.ArrayList getImageTypes()>
<android.content.Context: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendEmails(java.util.List)>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.Font embedFont(java.lang.String)>
<java.awt.Font: boolean isBold()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>
<java.awt.geom.GeneralPath: int getWindingRule()>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>
<java.awt.BufferCapabilities: boolean isPageFlipping()>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.Object getFeature(java.lang.String,java.lang.String)>
<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>
<java.awt.geom.QuadCurve2D: double getFlatness(double,double,double,double,double,double)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(java.nio.FloatBuffer)>
<org.apache.harmony.awt.wtk.NativeEventQueue: java.lang.Object getEventMonitor()>
<android.graphics.Region: void <init>(int,int,int,int)>
<android.widget.Toast: float getHorizontalMargin()>
<java.awt.image.PixelGrabber: java.awt.image.ColorModel getColorModel()>
<android.content.ContentProviderProxy: android.os.IBinder asBinder()>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
<javax.imageio.ImageWriter: void writeInsert(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
<android.text.StaticLayout: int getLineStart(int)>
<com.google.android.gles_jni.GLImpl: void glOrthof(float,float,float,float,float,float)>
<android.app.ActivityThread.PackageInfo: java.lang.ClassLoader getClassLoader()>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>
<android.widget.AbsListView: void draw(android.graphics.Canvas)>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>
<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle[] getRectangles()>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<com.android.server.status.AnimatedImageView: void onAttachedToWindow()>
<java.awt.EventQueue: void pop()>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
<javax.imageio.ImageReader: javax.imageio.spi.ImageReaderSpi getOriginatingProvider()>
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>
<android.location.Location: boolean hasAltitude()>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.graphics.Paint: int getAlpha()>
<android.net.Downloads.StatusInfo: boolean isComplete()>
<android.net.MailTo: java.lang.String getTo()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.widget.PopupWindow: void update()>
<java.awt.color.ICC_Profile: int getMajorVersion()>
<android.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<android.app.LauncherActivity: void onSetContentView()>
<android.widget.QuickContactBadge: void setMode(int)>
<android.os.Bundle: short[] getShortArray(java.lang.String)>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
<java.awt.event.WindowListener: void windowClosed(java.awt.event.WindowEvent)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureFormats()>
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: void <init>()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: boolean areTablesSet()>
<android.widget.TextView: int getSelectionEnd()>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>
<android.content.DialogInterface: void dismiss()>
<java.awt.image.ComponentColorModel: int getRed(int)>
<java.awt.font.GlyphVector: int getNumGlyphs()>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>
<android.media.Ringtone: void setStreamType(int)>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<android.database.sqlite.SQLiteConstraintException: void <init>()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<android.database.CursorWindow: boolean isFloat(int,int)>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>
<android.widget.ExpandableListAdapter: void onGroupCollapsed(int)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>
<android.hardware.Camera.Parameters: int getPictureFormat()>
<android.opengl.GLES20: void glActiveTexture(int)>
<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void setTexture(float,float)>
<android.view.View.MeasureSpec: int getMode(int)>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>
<java.awt.image.ColorModel: int getNumColorComponents()>
<android.content.IntentFilter: void <init>(android.content.IntentFilter)>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void transform(java.awt.geom.AffineTransform)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeBeginSnapshot(java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: boolean isSameNode(org.w3c.dom.Node)>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<android.os.Process: int getUidForName(java.lang.String)>
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getEndDate()>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>
<android.os.BatteryStats.Timer: void logState(android.util.Printer,java.lang.String)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor remove(java.lang.String)>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>
<android.app.Dialog: void takeKeyEvents(boolean)>
<android.provider.Telephony.Sms.Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getNamespaceUri(int)>
<android.content.SyncStats: void <init>()>
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.database.CursorWrapper: boolean isBeforeFirst()>
<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextRightHit(int)>
<android.widget.CursorAdapter: boolean hasStableIds()>
<android.os.Bundle: long getLong(java.lang.String,long)>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>
<android.database.AbstractCursor: void finalize()>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,float[],int)>
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter.ViewBinder getViewBinder()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<java.awt.Graphics2D: void draw3DRect(int,int,int,int,boolean)>
<java.awt.image.DataBufferUShort: int getElem(int,int)>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.gl.font.AndroidFont: void <init>(java.lang.String,int,int)>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String)>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.widget.DigitalClock: void <init>(android.content.Context)>
<android.text.style.URLSpan: java.lang.String getURL()>
<java.awt.Polygon: java.awt.Rectangle getBounds()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void setEnabled(boolean)>
<com.android.server.EntropyService: void <init>()>
<java.awt.geom.QuadCurve2D.Double: java.awt.geom.Point2D getP2()>
<android.widget.HorizontalScrollView: void addView(android.view.View)>
<com.android.tools.layoutlib.create.MethodListener: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<android.view.ViewDebug: void stopRecyclerTracing()>
<android.provider.ContactsContract.CommonDataKinds.Im: int getTypeLabelResource(int)>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<android.os.Process: void setThreadPriority(int)>
<android.pim.vcard.VCardComposer.HandlerForOutputStream: boolean onEntryCreated(java.lang.String)>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
<java.awt.EventQueue: void push(java.awt.EventQueue)>
<org.apache.harmony.awt.gl.render.JavaTextRenderer: void drawClipString(java.awt.image.WritableRaster,java.lang.Object,java.lang.String,org.apache.harmony.awt.gl.font.FontPeerImpl,int,int,int,int,int,int)>
<javax.imageio.stream.IIOByteBuffer: int getLength()>
<java.awt.image.SampleModel: void setPixels(int,int,int,int,double[],java.awt.image.DataBuffer)>
<java.awt.event.KeyEvent: void <init>(java.awt.Component,int,long,int,int,char,int)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<com.android.server.NativeDaemonConnectorException: void <init>(int,java.lang.String,java.lang.String)>
<java.awt.geom.CubicCurve2D.Double: void setCurve(double,double,double,double,double,double,double,double)>
<com.google.android.mms.pdu.PduPart: java.lang.String generateLocation()>
<android.graphics.Matrix: void reset()>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>
<java.awt.image.DataBufferByte: void <init>(int)>
<android.opengl.GLES20: void glClearDepthf(float)>
<android.pim.vcard.VCardParser_V21: void handleParams(java.lang.String)>
<android.graphics.RectF: void offsetTo(float,float)>
<java.awt.Rectangle: boolean contains(java.awt.Rectangle)>
<android.hardware.Camera.Parameters: void setExposureCompensation(int)>
<android.widget.MediaController: void setAnchorView(android.view.View)>
<java.awt.geom.Rectangle2D.Float: void setRect(double,double,double,double)>
<java.awt.image.RescaleOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.view.ViewConfiguration: void <init>()>
<javax.imageio.ImageTypeSpecifier: java.awt.image.BufferedImage createBufferedImage(int,int)>
<java.awt.geom.Arc2D.Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>
<android.graphics.Shader: void finalize()>
<android.util.AndroidException: void <init>(java.lang.String)>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>
<javax.imageio.stream.ImageOutputStream: void writeBits(long,int)>
<javax.imageio.ImageReader: int getThumbnailHeight(int,int)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.content.Context: android.content.Context getApplicationContext()>
<java.awt.Graphics2D: void setPaint(java.awt.Paint)>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void unsetEncodeTables()>
<java.awt.Component: void processComponentEvent(java.awt.event.ComponentEvent)>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<com.android.commands.pm.Pm: void main(java.lang.String[])>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>
<android.inputmethodservice.Keyboard.Key: void onPressed()>
<android.widget.PopupWindow: void showAsDropDown(android.view.View)>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>
<android.provider.ContactsContract.CommonDataKinds.Im: int getProtocolLabelResource(int)>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>
<com.android.film.Film: void onCreate(android.os.Bundle)>
<android.os.PowerManager: void reboot(java.lang.String)>
<java.awt.image.BufferedImage: int getNumYTiles()>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<java.awt.Component: boolean isDoubleBuffered()>
<android.content.IntentFilter: boolean hasCategory(java.lang.String)>
<android.graphics.NinePatch: int getDensity()>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,java.nio.FloatBuffer)>
<java.awt.ComponentBehavior: boolean isLightweight()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>
<android.database.CursorWrapper: boolean isNull(int)>
<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeBytes(java.lang.String)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>
<android.pim.vcard.VCardEntry: java.util.List getNickNameList()>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<android.os.Parcel: void writeNoException()>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>
<android.os.Parcel: java.lang.String readString()>
<java.awt.Component: boolean prepareImage(java.awt.Image,java.awt.image.ImageObserver)>
<java.awt.event.KeyAdapter: void keyPressed(java.awt.event.KeyEvent)>
<android.graphics.Matrix: boolean isIdentity()>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,int)>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: float getSubscriptSizeY()>
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<android.graphics.PointF: void <init>()>
<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D getBounds2D()>
<android.content.IntentFilter: void <init>(java.lang.String)>
<com.google.android.mms.pdu.NotificationInd: int getContentClass()>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>
<android.widget.RatingBar: void setStepSize(float)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>
<android.bluetooth.BluetoothClass: int hashCode()>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.widget.SlidingDrawer: android.view.View getContent()>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>
<java.awt.AWTPermission: void <init>(java.lang.String,java.lang.String)>
<android.provider.CallLog.Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<java.awt.geom.GeneralPath: void quadTo(float,float,float,float)>
<android.app.ActivityManagerProxy: void setProcessLimit(int)>
<android.graphics.Matrix: void mapPoints(float[])>
<android.view.View: int computeVerticalScrollExtent()>
<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.location.Criteria: void setAccuracy(int)>
<android.view.View: int getHorizontalFadingEdgeLength()>
<com.android.server.LightsService.Light: void setBrightness(int,int)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<javax.imageio.spi.ImageTranscoderSpi: void <init>(java.lang.String,java.lang.String)>
<com.google.android.maps.MapView: int getZoomLevel()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
<android.widget.Toast: void setDuration(int)>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.DialerFilter: void removeFilterWatcher(android.text.TextWatcher)>
<android.graphics.drawable.RotateDrawable: int getOpacity()>
<java.awt.Component: void firePropertyChange(java.lang.String,boolean,boolean)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: int getTypeLabelResource(int)>
<android.opengl.GLES10: void glLightf(int,int,float)>
<java.awt.image.Raster: java.awt.image.Raster createTranslatedChild(int,int)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.android.film.FilmRS: void init(android.renderscript.RenderScriptGL,android.content.res.Resources,int,int)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(java.nio.FloatBuffer)>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context,java.io.File)>
<javax.imageio.ImageIO: java.util.Iterator getImageReadersBySuffix(java.lang.String)>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<java.awt.AWTEvent: int getID()>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>
<android.content.pm.PackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>
<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>
<javax.imageio.stream.ImageInputStream: void readFully(float[],int,int)>
<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>
<android.media.AudioRecord: void finalize()>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>
<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.providers.settings.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<android.opengl.GLES20: void glDepthMask(boolean)>
<android.text.Layout: int getEllipsisStart(int)>
<com.android.layoutlib.bridge.BridgeResources: java.lang.String getResourceEntryName(int)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.Comparable getObjectMaxValue(java.lang.String)>
<org.apache.harmony.awt.gl.font.Glyph: byte[] getBitmap()>
<java.awt.geom.Rectangle2D.Double: void <init>()>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getNodeName()>
<java.awt.im.spi.InputMethod: boolean setLocale(java.util.Locale)>
<android.inputmethodservice.InputMethodService: void hideStatusIcon()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeLongs(long[],int,int)>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>
<android.os.StatFs: void finalize()>
<android.widget.TabWidget: void setStripEnabled(boolean)>
<com.android.layoutlib.bridge.BridgeTypedArray: boolean getValue(int,android.util.TypedValue)>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>
<com.google.android.mms.pdu.ReadOrigInd: long getDate()>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<com.google.android.gles_jni.GLImpl: void glDrawTexfOES(float,float,float,float,float)>
<org.apache.harmony.awt.im.InputMethodContext: void <init>()>
<android.webkit.WebView: void goBack()>
<com.google.android.util.AbstractMessageParser: java.lang.String getRawText()>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,java.nio.IntBuffer)>
<javax.imageio.spi.ImageReaderWriterSpi: javax.imageio.metadata.IIOMetadataFormat getStreamMetadataFormat(java.lang.String)>
<java.awt.Component: void addInputMethodListener(java.awt.event.InputMethodListener)>
<android.location.Criteria: void setBearingRequired(boolean)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalUnderlineThickness()>
<com.android.server.status.IconData: com.android.server.status.IconData makeIcon(java.lang.String,java.lang.String,int,int,int)>
<java.awt.event.ContainerAdapter: void componentRemoved(java.awt.event.ContainerEvent)>
<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>
<android.widget.SlidingDrawer: void open()>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>
<android.graphics.RectF: void <init>(android.graphics.Rect)>
<android.os.Parcel: void readException(int,java.lang.String)>
<android.graphics.Typeface: boolean isItalic()>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>
<android.hardware.Camera.Parameters: void setGpsAltitude(double)>
<org.apache.harmony.awt.gl.font.CompositeFont: org.apache.harmony.awt.gl.font.FontExtraMetrics getExtraMetrics()>
<android.widget.TextView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.os.storage.StorageManager: void disableUsbMassStorage()>
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<java.awt.font.GlyphVector: void <init>()>
<android.graphics.Paint: void <init>(int)>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<org.apache.harmony.awt.wtk.WindowFactory: org.apache.harmony.awt.wtk.NativeWindow attachWindow(long)>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterx(int,int)>
<android.widget.QuickContactBadge: void onClick(android.view.View)>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionGroupInfo)>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getDescent()>
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>
<java.awt.Point: void setLocation(int,int)>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.server.am.ActivityManagerService: void cancelIntentSender(android.content.IIntentSender)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.Rectangle2D getVisualBounds()>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<javax.imageio.stream.ImageInputStreamImpl: long getFlushedPosition()>
<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getDocID()>
<android.os.DropBoxManager.Entry: int describeContents()>
<android.widget.ZoomButtonsController.OnZoomListener: void onVisibilityChanged(boolean)>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>
<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)>
<android.location.Address: void setExtras(android.os.Bundle)>
<android.view.accessibility.AccessibilityEvent: java.util.List getText()>
<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<com.android.server.status.StatusBarService.NotificationCallbacks: void onClearAll()>
<com.google.android.mms.pdu.SendReq: byte[] getContentType()>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>
<com.google.android.maps.MapView: void preLoad()>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>
<java.awt.image.Raster: double[] getPixels(int,int,int,int,double[])>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>
<java.awt.geom.CubicCurve2D: void subdivide(java.awt.geom.CubicCurve2D,java.awt.geom.CubicCurve2D)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<android.text.DynamicLayout: int getLineStart(int)>
<android.preference.Preference: boolean shouldPersist()>
<java.awt.font.GlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.server.am.ActivityManagerService: void removeContentProvider(android.app.IApplicationThread,java.lang.String)>
<android.pim.vcard.VCardEntry.PhotoData: void <init>(int,java.lang.String,byte[],boolean)>
<android.content.res.Configuration: int diff(android.content.res.Configuration)>
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Color getBackground()>
<android.speech.RecognitionService.Callback: void endOfSpeech()>
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>
<android.os.Bundle: float getFloat(java.lang.String,float)>
<android.view.View: java.lang.Object getTag(int)>
<android.location.Location: float getSpeed()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.google.android.mms.pdu.PduParser: int extractByteValue(java.io.ByteArrayInputStream)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
<android.content.MutableContextWrapper: void <init>(android.content.Context)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>
<java.awt.Graphics2D: void fill3DRect(int,int,int,int,boolean)>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<java.awt.geom.CubicCurve2D: double getFlatness()>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>
<android.os.Messenger: void <init>(android.os.Handler)>
<org.apache.harmony.awt.im.InputMethodContext: java.text.AttributedCharacterIterator getSelectedText(java.text.AttributedCharacterIterator.Attribute[])>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<android.net.LocalServerSocket: void <init>(java.lang.String)>
<android.widget.Scroller: boolean computeScrollOffset()>
<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.view.ScaleGestureDetector: float getScaleFactor()>
<java.awt.geom.GeneralPath: java.lang.Object clone()>
<com.android.layoutlib.bridge.BridgeContext: void removeStickyBroadcast(android.content.Intent)>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.awt.image.ImageProducer getSource()>
<java.awt.geom.Rectangle2D.Double: double getWidth()>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>
<java.awt.geom.Line2D: boolean contains(java.awt.geom.Rectangle2D)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.lang.String[] parseXLFD(java.lang.String)>
<java.awt.image.DataBufferDouble: void setElemFloat(int,int,float)>
<android.text.Selection: void removeSelection(android.text.Spannable)>
<android.widget.TextView: void setCompoundDrawablePadding(int)>
<android.opengl.GLException: void <init>(int,java.lang.String)>
<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>
<java.awt.image.ConvolveOp: void <init>(java.awt.image.Kernel)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<android.preference.CheckBoxPreference: boolean shouldDisableDependents()>
<java.awt.Component: void setFont(java.awt.Font)>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>
<java.awt.geom.RoundRectangle2D.Float: double getY()>
<java.awt.image.DataBuffer: void <init>(int,int,int)>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>
<java.awt.geom.Arc2D.Float: void setAngleExtent(double)>
<android.webkit.WebView: boolean zoomOut()>
<android.view.OrientationEventListener: boolean canDetectOrientation()>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<android.view.View: void setKeepScreenOn(boolean)>
<com.android.layoutlib.bridge.NinePatchDrawable: void draw(android.graphics.Canvas)>
<android.os.Debug.InstructionCount: boolean resetAndStart()>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.content.pm.ResolveInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void setResourceBaseName(java.lang.String)>
<android.widget.CursorTreeAdapter: java.lang.String convertToString(android.database.Cursor)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void addRenderingHints(java.util.Map)>
<android.os.Bundle: void remove(java.lang.String)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<android.database.CursorWindow: byte[] getBlob(int,int)>
<com.google.android.util.AbstractMessageParser.Smiley: boolean isHtml()>
<java.awt.Component: void invalidate()>
<android.app.backup.BackupDataInput: int getDataSize()>
<java.awt.geom.CubicCurve2D: double getCtrlY2()>
<java.awt.Font: java.awt.Font createFont(int,java.io.File)>
<com.android.server.KeyInputQueue: int getSwitchState(int,int)>
<java.awt.BufferCapabilities: java.awt.BufferCapabilities.FlipContents getFlipContents()>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>
<java.awt.image.WritableRenderedImage: boolean hasTileWriters()>
<com.google.android.mms.util.AbstractCache: int size()>
<android.text.Layout: int getLineForOffset(int)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,float[],int)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean,android.content.res.Configuration)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>
<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCache getInstance()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setRect(java.awt.image.Raster)>
<com.android.server.status.UsbStorageActivity: void onClick(android.view.View)>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<android.content.Intent.ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalLeading()>
<android.view.View: void onAnimationEnd()>
<android.renderscript.ProgramRaster.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element,android.renderscript.Element)>
<java.awt.image.AreaAveragingScaleFilter: void setHints(int)>
<android.view.View: int computeVerticalScrollOffset()>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Component)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioTrack: void stop()>
<android.widget.ScrollView: int computeVerticalScrollOffset()>
<java.awt.image.DataBuffer: void setElemFloat(int,float)>
<android.view.View: boolean isShown()>
<com.android.common.OperationScheduler: java.lang.String toString()>
<com.google.android.maps.MapView: boolean isTraffic()>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<android.widget.TextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>
<android.pim.vcard.VCardEntry.PostalData: java.lang.String getFormattedAddress(int)>
<android.content.res.TypedArray: boolean hasValue(int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.am.UsageStatsService: void enforceCallingPermission()>
<android.text.style.BulletSpan: void <init>(android.os.Parcel)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<android.graphics.LightingColorFilter: void <init>(int,int)>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<org.apache.harmony.awt.wtk.ShutdownWatchdog: void forceShutdown()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
<android.view.View: void onDraw(android.graphics.Canvas)>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>
<android.widget.ViewFlipper: void setFlipInterval(int)>
<android.net.MailTo: java.lang.String getSubject()>
<java.awt.Image: java.awt.Image getScaledInstance(int,int,int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void setFeature(java.lang.String,boolean)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<android.pim.vcard.VCardEntry: java.lang.String getMiddleName()>
<android.hardware.Camera: void lock()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.Object getProperty(java.lang.String)>
<javax.imageio.IIOParamController: boolean activate(javax.imageio.IIOParam)>
<android.content.pm.InstrumentationInfo: int describeContents()>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>
<com.google.android.util.AbstractMessageParser.Acronym: void <init>(java.lang.String,java.lang.String)>
<android.util.SparseIntArray: int get(int,int)>
<android.graphics.RectF: void <init>(float,float,float,float)>
<android.widget.BaseAdapter: boolean isEmpty()>
<android.net.UrlQuerySanitizer: void clear()>
<android.graphics.RectF: void setEmpty()>
<android.view.KeyEvent: boolean isShiftPressed()>
<javax.imageio.IIOParam: void setSourceSubsampling(int,int,int,int)>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<javax.imageio.stream.ImageOutputStream: void writeChar(int)>
<java.beans.PropertyEditorManager: void <init>()>
<android.graphics.Movie: int height()>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: java.lang.Object getData(java.awt.image.DataBuffer)>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<java.awt.image.ShortLookupTable: void <init>(int,short[])>
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.accounts.Account: int hashCode()>
<android.widget.DialerFilter: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>
<org.apache.harmony.awt.gl.color.ICC_ProfileHelper: int getRenderingIntent(java.awt.color.ICC_Profile)>
<android.view.View: boolean hasWindowFocus()>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>
<com.android.server.status.UsbStorageActivity: void onCreate(android.os.Bundle)>
<android.os.Process: int myPid()>
<java.awt.event.InputMethodListener: void inputMethodTextChanged(java.awt.event.InputMethodEvent)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>
<android.webkit.WebView: void flingScroll(int,int)>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.text.LoginFilter.UsernameFilterGeneric: boolean isAllowed(char)>
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getStreamMetadata(java.lang.String,java.util.Set)>
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,int[],int)>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>
<android.view.MotionEvent: void recycle()>
<com.google.android.gles_jni.GLImpl: void glPointSize(float)>
<com.android.server.am.BatteryStatsService: void noteBluetoothOn()>
<org.apache.harmony.awt.gl.image.DataBufferListener: void dataTaken()>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<java.awt.image.WritableRaster: void setDataElements(int,int,int,int,java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glBindTexture(int,int)>
<android.content.pm.Signature: void <init>(byte[])>
<android.opengl.GLES20: void glDeleteProgram(int)>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.Font getFont()>
<android.content.DialogInterface.OnCancelListener: void onCancel(android.content.DialogInterface)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<android.net.Uri: boolean isHierarchical()>
<java.awt.image.ColorModel: int hashCode()>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
<android.graphics.Matrix: void mapVectors(float[])>
<java.awt.geom.QuadCurve2D.Double: double getX2()>
<android.widget.AbsListView: int pointToPosition(int,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>
<java.awt.image.CropImageFilter: void setDimensions(int,int)>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>
<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean,int)>
<android.database.sqlite.SQLiteStatement: long executeInsert()>
<android.graphics.drawable.GradientDrawable: void <init>()>
<android.graphics.Bitmap: boolean hasAlpha()>
<android.content.pm.ResolveInfo: java.lang.String toString()>
<java.awt.image.DataBuffer: void setElemDouble(int,double)>
<android.os.Process: long getElapsedCpuTime()>
<android.app.ProgressDialog: void setIndeterminate(boolean)>
<android.widget.Scroller: int getDuration()>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>
<javax.imageio.metadata.IIOMetadata: java.lang.String getNativeMetadataFormatName()>
<android.widget.PopupWindow: void setHeight(int)>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<javax.imageio.stream.ImageInputStream: void readFully(long[],int,int)>
<java.awt.Toolkit: int getScreenResolution()>
<javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.net.URL)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: boolean canDisplay(char)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Shape getGlyphLogicalBounds(int)>
<android.os.MemoryFile: boolean allowPurging(boolean)>
<android.text.HtmlToSpannedConverter: void setDocumentLocator(org.xml.sax.Locator)>
<javax.imageio.stream.ImageInputStreamImpl: int readBit()>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<com.android.server.connectivity.Tethering: void interfaceRemoved(java.lang.String)>
<android.app.WallpaperInfo: java.lang.String getServiceName()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Attr getAttributeNode(java.lang.String)>
<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean isWhitespace()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<android.view.View: void offsetLeftAndRight(int)>
<com.android.server.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>
<android.content.SearchRecentSuggestionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setPSName(java.lang.String)>
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
<android.widget.CursorTreeAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
<android.os.Message: java.lang.String toString()>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus.Listener)>
<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>
<com.android.layoutlib.bridge.BridgeContext: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withYieldAllowed(boolean)>
<java.awt.RenderingHints: int size()>
<android.view.animation.Animation: boolean willChangeBounds()>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<com.google.android.mms.pdu.NotificationInd: void setExpiry(long)>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getChild(char)>
<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService.Insets)>
<java.awt.ComponentBehavior: org.apache.harmony.awt.wtk.NativeWindow getNativeWindow()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<android.graphics.PointF: void <init>(android.graphics.Point)>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>
<android.app.Instrumentation: void startPerformanceSnapshot()>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>
<com.android.server.ThrottleService: int getThrottle(java.lang.String)>
<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.provider.ContactsContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<com.google.android.maps.MapView: void onSaveInstanceState(android.os.Bundle)>
<android.net.wifi.WifiManager.WifiLock: void finalize()>
<android.widget.VideoView: void suspend()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
<android.content.pm.LabeledIntent: int getLabelResource()>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>
<android.opengl.GLES10: void glLineWidthx(int)>
<com.google.android.util.SmileyResources: void <init>(java.lang.String[],int[])>
<javax.microedition.khronos.opengles.GL10: void glTranslatex(int,int,int)>
<org.apache.harmony.awt.gl.ImageSurface: void invalidate()>
<android.text.format.Time: void set(android.text.format.Time)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>
<java.awt.image.SinglePixelPackedSampleModel: boolean equals(java.lang.Object)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph[] getGlyphs(char,char)>
<javax.imageio.ImageWriter: boolean canReplacePixels(int)>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>
<java.awt.image.ColorModel: int getRGB(java.lang.Object)>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>
<javax.imageio.spi.ServiceRegistry: void <init>(java.util.Iterator)>
<com.android.server.DropBoxManagerService: boolean isTagEnabled(java.lang.String)>
<com.google.android.mms.pdu.PduHeaders: void setOctet(int,int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>
<android.text.format.Time: void clear(java.lang.String)>
<java.awt.font.GraphicAttribute: void <init>(int)>
<com.google.android.mms.pdu.PduComposer: void appendQuotedString(java.lang.String)>
<java.awt.image.renderable.RenderableImageOp: java.util.Vector getSources()>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.NativeIM getNativeIM()>
<android.app.SearchDialog.SearchBar: void setSearchDialog(android.app.SearchDialog)>
<java.awt.font.TextHitInfo: int getCharIndex()>
<android.graphics.Point: void <init>(android.graphics.Point)>
<org.apache.harmony.awt.gl.MultiRectArea: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<javax.imageio.ImageWriteParam: java.lang.String getCompressionType()>
<android.view.Menu: android.view.MenuItem getItem(int)>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>
<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>
<org.apache.harmony.awt.gl.image.DecodingImageSource: java.io.InputStream getInputStream()>
<org.apache.harmony.awt.gl.render.NullBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>
<android.os.Debug: void stopAllocCounting()>
<android.opengl.GLES10: void glClearStencil(int)>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.util.Base64InputStream: int read()>
<java.awt.image.PixelGrabber: void setHints(int)>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<org.apache.harmony.awt.im.InputMethodContext: void dispose()>
<java.awt.image.ColorModel: int getGreen(java.lang.Object)>
<android.content.pm.PackageParser.PermissionGroup: void setPackageName(java.lang.String)>
<android.content.Context: void clearWallpaper()>
<java.awt.font.TextLayout: java.awt.Shape getCaretShape(java.awt.font.TextHitInfo)>
<java.awt.image.DataBufferDouble: float getElemFloat(int,int)>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>
<javax.imageio.stream.ImageInputStream: long readBits(int)>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>
<java.awt.image.ReplicateScaleFilter: void <init>(int,int)>
<android.util.Xml: android.util.Xml.Encoding findEncodingByName(java.lang.String)>
<android.os.BatteryStats.Counter: void logState(android.util.Printer,java.lang.String)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.Shape getOutline(float,float)>
<org.apache.harmony.awt.gl.font.AndroidFont: java.awt.Font embedFont(java.lang.String)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi: void <init>()>
<android.net.wifi.ScanResult: java.lang.String toString()>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>
<javax.imageio.stream.IIOByteBuffer: void setLength(int)>
<android.location.LocationProvider: boolean requiresNetwork()>
<android.provider.Contacts.People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>
<android.preference.RingtonePreference: boolean getShowDefault()>
<android.renderscript.ProgramFragment.Builder: void setTexture(android.renderscript.ProgramFragment.Builder.EnvMode,android.renderscript.ProgramFragment.Builder.Format,int)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<android.opengl.GLException: void <init>(int)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<com.android.layoutlib.bridge.BridgeContext: void setWallpaper(java.io.InputStream)>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>
<android.app.Dialog: void registerForContextMenu(android.view.View)>
<java.beans.IndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.apache.harmony.awt.ContextStorage: void activateMultiContextMode()>
<javax.imageio.ImageIO: java.lang.String[] getReaderFormatNames()>
<android.telephony.ServiceState: void setState(int)>
<java.awt.DisplayMode: int getHeight()>
<android.database.DataSetObserver: void onInvalidated()>
<java.awt.Component: boolean isFocusable()>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>
<android.media.JetPlayer: boolean closeJetFile()>
<android.widget.AdapterView.OnItemSelectedListener: void onNothingSelected(android.widget.AdapterView)>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>
<android.view.View: android.os.Parcelable onSaveInstanceState()>
<java.awt.im.spi.InputMethodDescriptor: java.lang.String getInputMethodDisplayName(java.util.Locale,java.util.Locale)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,float[],int)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.widget.TextView: void setTextScaleX(float)>
<android.location.Location: void removeAltitude()>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>
<android.widget.AbsSpinner: void setSelection(int,boolean)>
<javax.imageio.stream.ImageInputStreamImpl: void readFully(char[],int,int)>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>
<java.awt.image.renderable.ParameterBlock: void removeSources()>
<android.graphics.Bitmap: int getDensity()>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)>
<java.awt.geom.QuadCurve2D: void subdivide(double[],int,double[],int,double[],int)>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4x(int,int,int,int,int)>
<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager.CacheResult getSurrogate(java.lang.String,java.util.Map)>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>
<java.awt.geom.Ellipse2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.opengl.GLES20: void glClearStencil(int)>
<javax.imageio.metadata.IIOMetadataNode: boolean hasChildNodes()>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>
<java.awt.font.MultipleMaster: float[] getDesignAxisRanges()>
<com.android.layoutlib.bridge.BridgeContext: void <init>(java.lang.Object,android.util.DisplayMetrics,com.android.layoutlib.api.IStyleResourceValue,java.util.Map,java.util.Map,java.util.Map,com.android.layoutlib.api.IProjectCallback,com.android.layoutlib.api.ILayoutLog)>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>
<android.webkit.WebSettings: int getMinimumFontSize()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<com.google.android.util.AbstractMessageParser.Acronym: java.lang.String getValue()>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.tools.layoutlib.create.MethodAdapter: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<android.graphics.Canvas: int getSaveCount()>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void setColor(float,float,float,float)>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>
<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>
<java.awt.image.ColorModel: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,boolean)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: int hashCode()>
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<com.android.tools.layoutlib.create.AsmGenerator: void generate()>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>
<java.awt.image.WritableRenderedImage: java.awt.Point[] getWritableTileIndices()>
<android.security.Md5MessageDigest: void reset()>
<java.awt.AWTException: void <init>(java.lang.String)>
<android.view.Window: void setDefaultWindowFormat(int)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>
<org.apache.harmony.awt.ContextStorage: void setGraphicsEnvironment(java.awt.GraphicsEnvironment)>
<com.google.android.gles_jni.GLImpl: void glTexEnvf(int,int,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: int glCheckFramebufferStatusOES(int)>
<java.awt.event.InputMethodEvent: void <init>(java.awt.Component,int,long,java.text.AttributedCharacterIterator,int,java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<android.content.SharedPreferences: android.content.SharedPreferences.Editor edit()>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>
<java.awt.Component: java.awt.GraphicsConfiguration getGraphicsConfiguration()>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.inputmethodservice.InputMethodService: void setTheme(int)>
<java.awt.image.DataBuffer: double getElemDouble(int)>
<java.awt.font.GlyphMetrics: boolean isLigature()>
<android.webkit.WebView: void findNext(boolean)>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>
<android.widget.ImageView: void setImageState(int[],boolean)>
<android.os.Debug: void resetThreadAllocCount()>
<org.apache.harmony.awt.wtk.NativeEvent: boolean getTrigger()>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>
<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>
<org.apache.harmony.awt.gl.image.FileDecodingImageSource: void <init>(java.lang.String)>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setHints(int)>
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
<android.os.ParcelUuid: int describeContents()>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>
<android.view.OrientationListener: void onOrientationChanged(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,java.nio.IntBuffer)>
<android.app.ActivityManagerProxy: void setPersistent(android.os.IBinder,boolean)>
<android.view.animation.Animation: void cancel()>
<android.speech.tts.TextToSpeech.OnInitListener: void onInit(int)>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>
<com.android.server.am.ActivityManagerService: void goingToSleep()>
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>
<android.graphics.Color: int alpha(int)>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.webkit.WebView: android.graphics.Picture capturePicture()>
<android.provider.Telephony.Sms.Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>
<java.awt.image.ColorModel: int getRGB(int)>
<com.android.common.ArrayListCursor: float getFloat(int)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<java.awt.image.MultiPixelPackedSampleModel: int getDataBitOffset()>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.webkit.PluginList: void addPlugin(android.webkit.Plugin)>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<java.awt.Transparency: int getTransparency()>
<com.android.providers.settings.DatabaseHelper: void <init>(android.content.Context)>
<android.content.SyncStatusObserver: void onStatusChanged(int)>
<android.content.OperationApplicationException: void <init>(java.lang.String,int)>
<android.content.ContentProvider: android.content.Context getContext()>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>
<javax.imageio.ImageWriter: void removeAllIIOWriteProgressListeners()>
<javax.imageio.ImageWriter: void write(java.awt.image.RenderedImage)>
<android.drm.mobile1.DrmRights: android.drm.mobile1.DrmConstraintInfo getConstraint(int)>
<android.media.ExifInterface: void <init>(java.lang.String)>
<android.graphics.Path: void close()>
<android.webkit.WebView: boolean canGoBack()>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.RemoteViews: java.lang.String getPackage()>
<android.os.Handler: void <init>(android.os.Handler.Callback)>
<android.bluetooth.BluetoothSocket: void close()>
<android.view.animation.Animation: int getRepeatMode()>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.webkit.CacheManager: boolean endCacheTransaction()>
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>
<javax.imageio.IIOParam: void setSourceRegion(java.awt.Rectangle)>
<android.opengl.GLES10: void glLogicOp(int)>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>
<org.apache.harmony.awt.gl.Surface: void clearValidCaches()>
<android.content.IntentFilter: java.util.Iterator typesIterator()>
<android.os.Parcel: long[] createLongArray()>
<java.awt.event.ContainerAdapter: void componentAdded(java.awt.event.ContainerEvent)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,int[],int)>
<android.view.animation.Animation: boolean isFillEnabled()>
<javax.microedition.khronos.opengles.GL10: void glFlush()>
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setColorModel(java.awt.image.ColorModel)>
<android.text.Layout: int getHeight()>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Token tokenForUrl(java.lang.String,java.lang.String)>
<android.preference.CheckBoxPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.tools.layoutlib.create.MethodAdapter: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<android.graphics.Typeface: boolean isBold()>
<android.speech.srec.MicrophoneInputStream: void finalize()>
<android.content.pm.PackageParser.Activity: void setPackageName(java.lang.String)>
<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>
<javax.microedition.khronos.opengles.GL10: void glColor4x(int,int,int,int)>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>
<android.net.Uri: java.lang.String toString()>
<android.opengl.ETC1Util: boolean isETC1Supported()>
<java.awt.image.DirectColorModel: int getRed(java.lang.Object)>
<android.drm.mobile1.DrmRawContent: void <init>(java.io.InputStream,int,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.awt.geom.Rectangle2D getLogicalBounds()>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(int)>
<java.awt.event.KeyEvent: java.lang.String getKeyModifiersText(int)>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
<android.widget.TextView: void beginBatchEdit()>
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>
<android.provider.Calendar.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentProviderClient)>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>
<java.awt.image.IndexColorModel: void getReds(byte[])>
<android.widget.ViewFlipper: void onAttachedToWindow()>
<android.graphics.Region: boolean equals(java.lang.Object)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>
<android.widget.Adapter: long getItemId(int)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.google.android.mms.pdu.MultimediaMessagePdu: int getPriority()>
<java.awt.geom.Rectangle2D: boolean intersects(double,double,double,double)>
<org.apache.harmony.awt.gl.image.PNGChunk: java.lang.String getTypeString()>
<android.preference.PreferenceActivity: void onStop()>
<android.preference.Preference: void setSummary(int)>
<android.os.Messenger: void <init>(android.os.IBinder)>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>
<java.awt.geom.QuadCurve2D: void subdivide(java.awt.geom.QuadCurve2D,java.awt.geom.QuadCurve2D)>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.widget.RatingBar: float getRating()>
<com.android.server.ProcessMap: java.util.HashMap getMap()>
<com.android.layoutlib.bridge.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: boolean isCreatedFromStream()>
<java.awt.EventQueue: void invokeAndWait(java.lang.Runnable)>
<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.graphics.ColorMatrix: void set(float[])>
<android.widget.AbsListView: void setTextFilterEnabled(boolean)>
<android.media.MediaScannerConnection: void connect()>
<android.graphics.Path: void addPath(android.graphics.Path)>
<android.content.SyncResult: int describeContents()>
<android.webkit.Plugin: java.lang.String getName()>
<java.awt.event.WindowEvent: int getNewState()>
<com.google.android.gles_jni.EGLImpl: int eglGetError()>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
<android.widget.VideoView: int getCurrentPosition()>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<java.awt.Graphics: void drawRoundRect(int,int,int,int,int,int)>
<java.awt.Component: void layout()>
<org.apache.harmony.awt.gl.font.AndroidFont: java.lang.String getFamily()>
<com.android.server.status.StatusBarService.NotificationCallbacks: void onNotificationClick(java.lang.String,java.lang.String,int)>
<com.android.commands.ime.Ime: void main(java.lang.String[])>
<android.text.style.StyleSpan: int getStyle()>
<java.beans.PropertyEditor: java.lang.String getAsText()>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<java.awt.image.renderable.ParameterBlock: java.lang.Object shallowClone()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setRect(int,int,java.awt.image.Raster)>
<org.apache.harmony.awt.gl.font.AndroidFont: void dispose()>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<android.opengl.GLES11: void glPointParameterf(int,float)>
<android.server.BluetoothA2dpService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.preference.Preference: float getPersistedFloat(float)>
<android.os.Message: void <init>()>
<java.awt.image.renderable.RenderContext: java.lang.Object clone()>
<android.pim.vcard.VCardEntry: java.lang.String getGivenName()>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String)>
<org.apache.harmony.awt.gl.MultiRectArea: java.awt.geom.Rectangle2D getBounds2D()>
<javax.imageio.stream.ImageOutputStream: void writeBit(int)>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>
<android.location.Criteria: void <init>()>
<android.graphics.Rasterizer: void finalize()>
<android.content.pm.PackageManager.NameNotFoundException: void <init>()>
<java.awt.image.ImageFilter: java.lang.Object clone()>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>
<android.sax.EndElementListener: void end()>
<java.awt.Rectangle: boolean contains(int,int,int,int)>
<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>
<org.apache.harmony.awt.wtk.ShutdownWatchdog: void start()>
<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>
<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>
<javax.microedition.khronos.opengles.GL10: void glAlphaFunc(int,float)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleased(int)>
<java.awt.event.AdjustmentListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.content.Intent: android.content.Intent cloneFilter()>
<java.awt.image.Raster: int getWidth()>
<java.awt.geom.GeneralPath: boolean contains(double,double)>
<android.view.animation.Animation: int getZAdjustment()>
<android.appwidget.AppWidgetProviderInfo: void <init>()>
<org.apache.harmony.awt.wtk.WindowFactory: void setCaretPosition(int,int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitBaseType(char)>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.text.method.ScrollingMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.text.LoginFilter.PasswordFilterGMail: void <init>()>
<android.content.ContentProviderResult: void <init>(android.os.Parcel)>
<javax.imageio.ImageWriter: boolean canRemoveImage(int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>
<org.apache.harmony.awt.wtk.NativeWindow: boolean setFocus(boolean)>
<com.google.android.mms.pdu.PduParser: void <init>(byte[])>
<java.awt.Font: int getMissingGlyphCode()>
<android.pim.vcard.VCardComposer.OneEntryHandler: boolean onEntryCreated(java.lang.String)>
<java.awt.Polygon: void <init>(int[],int[],int)>
<android.widget.Button: void <init>(android.content.Context)>
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>
<com.google.android.mms.ContentType: java.util.ArrayList getVideoTypes()>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>
<android.text.LoginFilter.UsernameFilterGMail: void <init>(boolean)>
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.graphics.Paint: void setStrokeWidth(float)>
<android.text.style.ScaleXSpan: float getScaleX()>
<android.text.style.RelativeSizeSpan: int describeContents()>
<android.os.Bundle: java.lang.String toString()>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>
<android.graphics.Matrix: void setScale(float,float,float,float)>
<android.text.format.Time: int getJulianDay(long,long)>
<com.google.android.mms.ContentType: java.util.ArrayList getSupportedTypes()>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String)>
<org.apache.harmony.awt.gl.ImageSurface: void setRaster(java.awt.image.WritableRaster)>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.String[] getAllFamilies()>
<java.awt.geom.Arc2D.Float: void <init>(java.awt.geom.Rectangle2D,float,float,int)>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>
<java.awt.image.WritableRaster: void setPixel(int,int,double[])>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: void <init>(int,float[],float[])>
<android.os.Bundle: void putInt(java.lang.String,int)>
<android.telephony.PhoneNumberUtils: boolean isDialable(char)>
<android.preference.CheckBoxPreference: void setSummaryOff(int)>
<org.apache.harmony.awt.gl.image.JpegDecoder: void returnData(byte[],int)>
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>
<android.pim.ICalendar.Component: java.lang.String getName()>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,float[],int)>
<com.google.android.gles_jni.GLImpl: boolean glIsBuffer(int)>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<android.media.AudioRecord: int getRecordingState()>
<java.awt.Toolkit: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>
<android.graphics.Matrix: void setRotate(float,float,float)>
<org.apache.harmony.awt.wtk.WindowFactory: boolean isWindowStateSupported(int)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getBaselineIndex()>
<android.widget.TableLayout: void setColumnStretchable(int,boolean)>
<android.telephony.SignalStrength: int getCdmaEcio()>
<android.inputmethodservice.InputMethodService: void showWindow(boolean)>
<android.database.sqlite.SQLiteCursor: void deactivate()>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>
<android.os.IInterface: android.os.IBinder asBinder()>
<org.apache.harmony.awt.gl.MultiRectArea: boolean contains(double,double)>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
<org.apache.harmony.awt.gl.font.FontExtraMetrics: void <init>(float[])>
<javax.microedition.khronos.opengles.GL10: void glLogicOp(int)>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>
<android.view.Window: boolean isActive()>
<android.os.BatteryStats.Uid.Pkg: java.util.Map getServiceStats()>
<com.google.android.mms.pdu.PduComposer: void appendTextString(java.lang.String)>
<android.widget.AbsListView: void smoothScrollToPosition(int,int)>
<org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.Font embedFont(java.lang.String)>
<java.awt.image.ImageFilter: void setProperties(java.util.Hashtable)>
<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean,android.content.res.Configuration)>
<android.graphics.Paint: boolean isLinearText()>
<android.graphics.Paint: float getTextScaleX()>
<android.content.pm.PackageParser.Component: java.lang.String getComponentShortName()>
<android.widget.ListView: int getHeaderViewsCount()>
<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<android.content.res.AssetManager: java.lang.String[] getLocales()>
<android.app.TabActivity: android.widget.TabHost getTabHost()>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.server.BluetoothService.BondState: boolean isAutoPairingAttemptsInProgress(java.lang.String)>
<com.android.server.KeyInputQueue: int getKeycodeState(int)>
<android.widget.TabHost: void <init>(android.content.Context)>
<android.graphics.drawable.InsetDrawable: boolean isStateful()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,int[],int)>
<java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,int[],int,int)>
<java.awt.font.GraphicAttribute: float getDescent()>
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>
<com.google.android.mms.pdu.EncodedStringValue: java.lang.String concat(com.google.android.mms.pdu.EncodedStringValue[])>
<android.hardware.Sensor: java.lang.String getVendor()>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.layoutlib.bridge.BridgeTypedArray: java.lang.String toString()>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>
<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>
<java.awt.geom.AffineTransform: void translate(double,double)>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>
<android.os.Message: android.os.Handler getTarget()>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>
<android.pim.vcard.VCardParser_V21: void handlePropertyValue(java.lang.String,java.lang.String)>
<java.awt.AWTEvent: java.lang.String toString()>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.beans.PropertyEditor: java.awt.Component getCustomEditor()>
<android.view.ScaleGestureDetector: float getFocusY()>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendWebsites(java.util.List)>
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>
<java.awt.AWTEvent: void setSource(java.lang.Object)>
<android.os.ConditionVariable: void block()>
<android.renderscript.Allocation.Adapter1D: void data(float[])>
<javax.microedition.khronos.opengles.GL10: void glColorMask(boolean,boolean,boolean,boolean)>
<android.widget.ExpandableListAdapter: int getChildrenCount(int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>
<org.apache.harmony.awt.wtk.SystemProperties: java.awt.Font getDefaultFont()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void deleteChar(java.text.AttributedCharacterIterator,int)>
<java.beans.PropertyEditorManager: java.beans.PropertyEditor findEditor(java.lang.Class)>
<com.android.server.am.ActivityManagerService: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.app.SearchDialog.SearchAutoComplete: void replaceText(java.lang.CharSequence)>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.SinglePixelPackedSampleModel: int getNumDataElements()>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>
<java.awt.Shape: boolean intersects(double,double,double,double)>
<android.os.BatteryStats.Uid: java.util.Map getProcessStats()>
<android.graphics.drawable.Drawable: boolean isStateful()>
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>
<android.widget.TextView.OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<javax.imageio.ImageReader: void checkReadParamBandSettings(javax.imageio.ImageReadParam,int,int)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>
<java.awt.font.TextLayout: java.awt.Shape getBlackBoxBounds(int,int)>
<com.android.server.ProcessStats: int getLastIdleTime()>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.content.ComponentName: java.lang.String flattenToString()>
<android.pim.vcard.VCardParser_V30: boolean isValidPropertyName(java.lang.String)>
<java.awt.GraphicsConfiguration: java.awt.image.VolatileImage createCompatibleVolatileImage(int,int,java.awt.ImageCapabilities)>
<android.pim.vcard.VCardInterpreter: void propertyParamType(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,int[],int)>
<com.android.server.ProcessStats: float getTotalCpuPercent()>
<java.awt.image.DataBufferInt: int[] getData(int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<java.awt.image.ComponentSampleModel: java.lang.Object getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.telephony.SmsMessage: boolean isMwiDontStore()>
<android.graphics.Paint: android.graphics.Shader getShader()>
<com.android.server.am.BatteryStatsService: byte[] getStatistics()>
<android.widget.AbsListView: void onDisplayHint(int)>
<android.content.pm.PackageParser.Service: void setPackageName(java.lang.String)>
<android.widget.ImageView: void setColorFilter(int)>
<android.widget.Scroller: void startScroll(int,int,int,int)>
<javax.imageio.ImageWriter: void replacePixels(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void setProperty(java.lang.String,java.lang.Object)>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>
<org.apache.harmony.awt.gl.image.DecodingImageSource: void startProduction(java.awt.image.ImageConsumer)>
<java.awt.color.ICC_Profile: void write(java.lang.String)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>
<android.view.SurfaceView: void onSizeChanged(int,int,int,int)>
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>
<android.telephony.TelephonyManager: int getCallState()>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.view.View: boolean requestFocus()>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>
<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<java.awt.image.RGBImageFilter: int filterRGB(int,int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>
<android.text.Layout: android.text.Layout.Alignment getAlignment()>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<javax.imageio.metadata.IIOMetadataFormat: int getObjectValueType(java.lang.String)>
<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<android.view.ViewGroup: int getChildCount()>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>
<android.widget.TextView: void setPaintFlags(int)>
<android.content.Context: int checkCallingPermission(java.lang.String)>
<android.graphics.Rect: boolean intersect(int,int,int,int)>
<org.apache.harmony.awt.gl.font.AndroidFont: int[] getUnicodeRanges()>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>
<java.awt.Event: boolean shiftDown()>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.im.spi.InputMethodDescriptor: java.util.Locale[] getAvailableLocales()>
<java.awt.image.BandedSampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<com.google.android.util.SmileyResources: int getSmileyRes(java.lang.String)>
<com.google.android.mms.util.AbstractCache: java.lang.Object purge(java.lang.Object)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.Context createPackageContext(java.lang.String,int)>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>
<android.webkit.SslErrorHandler: void proceed()>
<javax.imageio.stream.FileCacheImageOutputStream: void flushBefore(long)>
<android.content.pm.PackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.text.style.URLSpan: void <init>(java.lang.String)>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>
<android.webkit.WebChromeClient: void onHideCustomView()>
<com.google.android.mms.pdu.PduComposer: int checkAddressType(java.lang.String)>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getMaxAdvance()>
<java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>
<java.awt.geom.Line2D.Float: void setLine(float,float,float,float)>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>
<org.apache.harmony.awt.gl.MultiRectArea: org.apache.harmony.awt.gl.MultiRectArea union(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>
<org.apache.harmony.awt.state.MenuItemState: java.awt.Dimension getMenuSize()>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>
<org.apache.harmony.awt.gl.Surface: java.awt.image.ColorModel getColorModel()>
<android.widget.TextView: void setSelected(boolean)>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
<android.text.HtmlToSpannedConverter: android.text.Spanned convert()>
<android.os.BatteryStats.Uid: int getUserActivityCount(int,int)>
<java.awt.color.ICC_Profile: int getNumComponents()>
<android.media.AudioTrack: void pause()>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>
<android.telephony.NeighboringCellInfo: int describeContents()>
<java.awt.geom.Rectangle2D: void intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.content.res.TypedArray: float getDimension(int,float)>
<java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.widget.Gallery: void setUnselectedAlpha(float)>
<java.awt.FontMetrics: int getDescent()>
<java.awt.event.FocusEvent: void <init>(java.awt.Component,int)>
<java.awt.image.FilteredImageSource: void removeConsumer(java.awt.image.ImageConsumer)>
<javax.imageio.stream.ImageInputStream: int skipBytes(int)>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<java.awt.image.ColorModel: int getDataElement(int[],int)>
<java.awt.geom.Point2D.Double: void setLocation(double,double)>
<android.app.backup.BackupDataInputStream: int read(byte[])>
<android.pim.vcard.VCardConfig: boolean isDoCoMo(int)>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>
<android.text.AlteredCharSequence: char charAt(int)>
<java.awt.Toolkit: int getMaximumCursorColors()>
<android.widget.TextView: void onDetachedFromWindow()>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,int[],int)>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.hardware.Sensor: int getType()>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>
<android.text.Layout: int getBottomPadding()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>
<android.preference.ListPreference: void setValue(java.lang.String)>
<java.awt.geom.QuadCurve2D: double getFlatness()>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>
<org.apache.harmony.awt.gl.color.NativeCMM: long cmmCreateMultiprofileTransform(long[],int[])>
<android.graphics.Matrix: void setScale(float,float)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>
<java.awt.image.ComponentSampleModel: void setSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.android.commands.svc.Svc.Command: void run(java.lang.String[])>
<android.widget.AbsListView: void dispatchSetPressed(boolean)>
<android.content.Entity: android.content.ContentValues getEntityValues()>
<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>
<com.google.android.collect.Maps: java.util.HashMap newHashMap()>
<android.media.AudioRecord: int getSampleRate()>
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>
<com.google.android.mms.pdu.ReadOrigInd: void setReadStatus(int)>
<android.pim.vcard.CustomBufferedReader: void <init>(java.io.Reader)>
<android.widget.ImageView: void setMaxHeight(int)>
<com.android.commands.am.Am: void main(java.lang.String[])>
<org.apache.harmony.awt.gl.Crossing: boolean isZero(double)>
<android.inputmethodservice.InputMethodService: void onWindowShown()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: boolean areTablesSet()>
<javax.imageio.stream.IIOByteBuffer: void setOffset(int)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: boolean hasNativeMethods()>
<org.apache.harmony.awt.gl.Crossing: int intersectQuad(double,double,double,double,double,double,double,double,double,double)>
<java.awt.Rectangle: void add(java.awt.Rectangle)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>
<android.webkit.WebView: void documentHasImages(android.os.Message)>
<android.webkit.HttpAuthHandler: void handleMessage(android.os.Message)>
<android.graphics.Camera: void rotateY(float)>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.inputmethod.ExtractedText: int describeContents()>
<android.pim.ICalendar.Property: java.lang.String getName()>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeNameResource(int)>
<android.os.DropBoxManager.Entry: long getTimeMillis()>
<java.awt.image.ComponentSampleModel: boolean equals(java.lang.Object)>
<android.os.ParcelFileDescriptor: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,float[],int)>
<javax.imageio.metadata.IIOMetadataNode: void normalize()>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>
<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>
<java.awt.image.ComponentSampleModel: int getNumDataElements()>
<java.awt.font.TextHitInfo: boolean isLeadingEdge()>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<java.awt.Font: float getItalicAngle()>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>
<com.google.android.mms.pdu.NotificationInd: long getMessageSize()>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<com.google.android.mms.pdu.PduPart: byte[] getContentDisposition()>
<android.text.ClipboardManager: boolean hasText()>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>
<android.content.Intent: void readFromParcel(android.os.Parcel)>
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera.PreviewCallback)>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<android.util.TypedValue: float complexToFraction(int,float,float)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getTempFontFileName()>
<android.provider.MediaStore.Video.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.widget.TextView: int getLeftPaddingOffset()>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.os.Debug: long getNativeHeapFreeSize()>
<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.view.View: int getVisibility()>
<android.view.WindowManager.LayoutParams: int describeContents()>
<android.util.Base64: byte[] decode(byte[],int)>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>
<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<java.awt.event.ContainerListener: void componentRemoved(java.awt.event.ContainerEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByFileName(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.HistoryRecord)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>
<android.view.Window: android.os.Bundle saveHierarchyState()>
<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCacheEntry purge(android.net.Uri)>
<javax.imageio.stream.FileCacheImageOutputStream: void write(int)>
<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)>
<java.awt.BufferCapabilities: java.lang.Object clone()>
<java.awt.Image: void flush()>
<android.graphics.drawable.ScaleDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>
<android.widget.ImageView: boolean setFrame(int,int,int,int)>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>
<android.location.Location: void setSpeed(float)>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<android.widget.LinearLayout: void setHorizontalGravity(int)>
<android.widget.ListView: android.view.View findViewTraversal(int)>
<java.awt.image.ColorModel: void <init>(int)>
<java.awt.im.spi.InputMethod: void dispatchEvent(java.awt.AWTEvent)>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.view.ViewGroup: int getPersistentDrawingCache()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<android.os.Handler: void dispatchMessage(android.os.Message)>
<javax.imageio.stream.FileImageOutputStream: void write(int)>
<java.awt.Graphics: void drawChars(char[],int,int,int,int)>
<android.database.sqlite.SQLiteDoneException: void <init>()>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL10: void glClearDepthf(float)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.preference.ListPreference: void setValueIndex(int)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,float)>
<javax.imageio.spi.ImageOutputStreamSpi: java.lang.Class getOutputClass()>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeLong(long)>
<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<java.awt.PaintContext: java.awt.image.ColorModel getColorModel()>
<javax.imageio.ImageWriter: void processWarningOccurred(int,java.lang.String)>
<android.content.ContentProviderProxy: void <init>(android.os.IBinder)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>
<javax.imageio.ImageWriter: void setLocale(java.util.Locale)>
<java.awt.FontMetrics: int stringWidth(java.lang.String)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: void unsetDecodeTables()>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>
<android.widget.SectionIndexer: int getPositionForSection(int)>
<android.app.ApplicationThreadProxy: android.os.IBinder asBinder()>
<android.widget.EditText: void extendSelection(int)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>
<android.media.FaceDetector.Face: float pose(int)>
<org.apache.harmony.awt.gl.ImageSurface: java.lang.Object getData()>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>
<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>
<android.preference.EditTextPreference: void setText(java.lang.String)>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>
<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin.PreferencesClickHandler)>
<android.app.Activity: int getRequestedOrientation()>
<android.content.pm.ConfigurationInfo: void <init>()>
<android.pim.EventRecurrence: java.lang.String toString()>
<android.widget.CursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.view.WindowManager.LayoutParams: void <init>()>
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>
<android.pim.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>
<android.graphics.Matrix: boolean postConcat()>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>
<android.widget.TextView: boolean setFrame(int,int,int,int)>
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus.Listener)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<javax.imageio.ImageTranscoder: javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)>
<java.awt.image.DirectColorModel: int getRGB(java.lang.Object)>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>
<java.awt.Graphics: void drawPolygon(int[],int[],int)>
<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>
<java.awt.Component: boolean requestFocus(boolean)>
<android.os.MemoryFile: void <init>(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glClear(int)>
<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
<android.widget.PopupWindow: void setIgnoreCheekPress()>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>
<android.database.AbstractCursor: boolean moveToLast()>
<android.widget.TabHost.ContentStrategy: android.view.View getContentView()>
<android.opengl.GLES10: void glLightx(int,int,int)>
<java.awt.geom.AffineTransform: double getTranslateX()>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.provider.Settings.SettingNotFoundException: void <init>(java.lang.String)>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>
<com.google.android.gles_jni.GLImpl: int glGetError()>
<java.beans.PropertyVetoException: void <init>(java.lang.String,java.beans.PropertyChangeEvent)>
<java.awt.geom.AffineTransform: void <init>(double[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glStencilOp(int,int,int)>
<android.widget.AbsListView: boolean isScrollingCacheEnabled()>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<javax.imageio.stream.FileImageOutputStream: void write(byte[],int,int)>
<com.google.android.gles_jni.GLImpl: void glFlush()>
<android.widget.Spinner: void setPromptId(int)>
<android.app.ProgressDialog: int getMax()>
<com.android.common.ArrayListCursor: int getCount()>
<android.text.Layout: float getPrimaryHorizontal(int)>
<android.database.CursorWrapper: void close()>
<java.awt.geom.Rectangle2D.Float: void setRect(java.awt.geom.Rectangle2D)>
<java.awt.geom.Point2D.Float: java.lang.String toString()>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>
<android.widget.SeekBar: void <init>(android.content.Context)>
<java.awt.image.BufferedImage: java.awt.Point[] getWritableTileIndices()>
<org.apache.harmony.awt.wtk.ShutdownThread: void run()>
<java.awt.geom.Arc2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeIntValue(int,int)>
<android.app.ActivityManagerProxy: boolean isUserAMonkey()>
<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setDataElements(int,int,java.lang.Object)>
<android.inputmethodservice.InputMethodService: void onBindInput()>
<android.inputmethodservice.KeyboardView: void swipeRight()>
<android.preference.Preference: boolean isEnabled()>
<java.awt.Dimension: double getHeight()>
<java.awt.Component: void enableInputMethods(boolean)>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<android.security.MessageDigest: byte[] digest(byte[])>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>
<java.awt.geom.Ellipse2D.Float: boolean isEmpty()>
<android.opengl.GLES10: void glMaterialx(int,int,int)>
<android.widget.RelativeLayout.LayoutParams: void <init>(int,int)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitInterface()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.GlyphMetrics getGlyphMetrics(int)>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.awt.Adjustable: int getOrientation()>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>
<org.apache.harmony.awt.wtk.NativeIM: boolean isCompositionEnabled()>
<android.hardware.Sensor: float getMaximumRange()>
<javax.imageio.metadata.IIOMetadata: boolean hasController()>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>
<java.awt.Component: void setBounds(java.awt.Rectangle)>
<android.graphics.Paint: void setStrikeThruText(boolean)>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>
<android.os.RemoteCallbackList: void finishBroadcast()>
<android.net.Uri: java.lang.String getAuthority()>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glFinish()>
<android.graphics.Paint: boolean isLinearText()>
<java.beans.PropertyEditorSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<java.awt.geom.QuadCurve2D.Float: void setCurve(float,float,float,float,float,float)>
<android.view.View: int getNextFocusDownId()>
<com.google.android.util.AbstractMessageParser.Format: java.lang.String toHtml(boolean)>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>
<android.os.BatteryStats.Timer: long getTotalTimeLocked(long,int)>
<android.net.http.Headers.HeaderCallback: void header(java.lang.String,java.lang.String)>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<android.widget.ExpandableListAdapter: boolean hasStableIds()>
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>
<android.database.Cursor: java.lang.String[] getColumnNames()>
<android.webkit.JsResult: void cancel()>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>
<java.awt.IllegalComponentStateException: void <init>(java.lang.String)>
<com.android.server.am.ActivityManagerService: void reportPss(android.app.IApplicationThread,int)>
<javax.imageio.ImageWriter: void replacePixels(java.awt.image.Raster,javax.imageio.ImageWriteParam)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View: boolean willNotCacheDrawing()>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<android.text.util.Rfc822Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>
<javax.imageio.ImageReader: void removeAllIIOReadWarningListeners()>
<android.content.ContextWrapper: boolean isRestricted()>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
<android.renderscript.Script.Builder: void setType(android.renderscript.Type,java.lang.String,int)>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>
<android.content.Context: android.graphics.drawable.Drawable peekWallpaper()>
<android.os.BatteryStats.Uid: long getFullWifiLockTime(long,int)>
<android.webkit.WebView: void clearHistory()>
<android.provider.ContactsContract.RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<java.awt.geom.Rectangle2D.Double: void setRect(java.awt.geom.Rectangle2D)>
<android.media.AudioRecord: int getAudioFormat()>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void putData(int,long)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
<android.widget.Spinner: int getBaseline()>
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>
<org.apache.harmony.awt.gl.CommonGraphicsEnvironment: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>
<java.awt.Component: java.awt.event.HierarchyBoundsListener[] getHierarchyBoundsListeners()>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<org.apache.harmony.awt.im.InputMethodContext: int getInsertPositionOffset()>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.util.Printer: void println(java.lang.String)>
<android.util.AttributeSet: int getStyleAttribute()>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.net.http.AndroidHttpClient: void close()>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>
<android.media.MediaPlayer: void setLooping(boolean)>
<android.os.Debug: void startAllocCounting()>
<org.apache.harmony.awt.gl.color.NativeCMM: int cmmGetProfileSize(long)>
<android.hardware.Camera.Parameters: float getExposureCompensationStep()>
<javax.imageio.stream.ImageOutputStream: void writeFloat(float)>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<com.android.layoutlib.bridge.BridgeTypedArray: int getColor(int,int)>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>
<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.awt.peer.FontPeer createPhysicalFontPeer(java.lang.String,int,int)>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES10: void glLightModelx(int,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.widget.TextView: void <init>(android.content.Context)>
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>
<android.provider.Settings.System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<java.awt.Component: void print(java.awt.Graphics)>
<java.awt.image.Raster: int getTransferType()>
<org.apache.harmony.awt.wtk.NativeEvent: int getVKey()>
<java.beans.FeatureDescriptor: void setShortDescription(java.lang.String)>
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)>
<android.server.BluetoothService: boolean getTrustState(java.lang.String)>
<android.renderscript.ScriptC.Builder: void setScript(java.lang.String)>
<org.apache.harmony.x.imageio.spi.InputStreamIISSpi: javax.imageio.stream.ImageInputStream createInputStreamInstance(java.lang.Object,boolean,java.io.File)>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>
<android.widget.Toast: void setView(android.view.View)>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>
<javax.imageio.stream.FileImageOutputStream: void <init>(java.io.RandomAccessFile)>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,float[],int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphLogicalBounds(int)>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>
<java.awt.geom.RectangularShape: void setFrameFromDiagonal(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.os.Process: void killProcess(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>
<org.apache.harmony.awt.gl.image.JpegDecoder: void returnHeader()>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>
<java.awt.image.SampleModel: int getWidth()>
<android.widget.PopupWindow: void setSoftInputMode(int)>
<android.pim.ICalendar.Property: java.util.Set getParameterNames()>
<java.awt.image.ComponentColorModel: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,boolean)>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>
<java.awt.Font: java.lang.String toString()>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>
<android.view.View: void setScrollBarStyle(int)>
<java.awt.ItemSelectable: void removeItemListener(java.awt.event.ItemListener)>
<com.google.android.maps.MapView: void <init>(android.content.Context)>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>
<java.awt.image.ImageProducer: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
<android.database.CharArrayBuffer: void <init>(int)>
<java.awt.Rectangle: double getX()>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,int[],int)>
<java.awt.geom.CubicCurve2D.Double: void <init>(double,double,double,double,double,double,double,double)>
<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()>
<android.content.res.ColorStateList: int getDefaultColor()>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.Canvas: void drawColor(int)>
<android.widget.TextView: java.lang.CharSequence getText()>
<org.apache.harmony.awt.ContextThreadGroup: void <init>(java.lang.String)>
<android.content.res.Resources: int getColor(int)>
<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>
<java.awt.image.renderable.RenderableImage: java.util.Vector getSources()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node getFirstChild()>
<android.widget.PopupWindow: int getHeight()>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>
<com.google.android.gles_jni.GLImpl: void glGetPointerv(int,java.nio.Buffer[])>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>
<java.awt.image.DataBufferUShort: void setElem(int,int)>
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>
<org.apache.harmony.awt.ListenerList: java.util.Iterator getUserIterator()>
<org.apache.harmony.awt.gl.MultiRectArea: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>
<android.graphics.Rect: void inset(int,int)>
<com.google.android.mms.pdu.PduPart: void setData(byte[])>
<javax.imageio.IIOParam: java.awt.Point getDestinationOffset()>
<java.awt.Cursor: int getType()>
<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.location.LocationProvider: java.lang.String getName()>
<android.content.pm.PackageInfo: int describeContents()>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>
<android.graphics.Path: void quadTo(float,float,float,float)>
<javax.microedition.khronos.opengles.GL10: void glPopMatrix()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getColumnNumber()>
<javax.imageio.ImageReadParam: void setDestinationBands(int[])>
<java.awt.image.DirectColorModel: java.lang.String toString()>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.RenderingHints getRenderingHints()>
<android.view.Window: boolean hasSoftInputMode()>
<android.view.Window: void setTitleColor(int)>
<android.hardware.Camera.Parameters: java.util.List getZoomRatios()>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<java.awt.Component: void processKeyEvent(java.awt.event.KeyEvent)>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>
<android.widget.AdapterView: long getItemIdAtPosition(int)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<android.server.BluetoothService: int getDiscoverableTimeout()>
<android.security.MessageDigest: android.security.MessageDigest getInstance(java.lang.String)>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>
<java.awt.event.MouseEvent: boolean isPopupTrigger()>
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder,android.os.Bundle)>
<android.speech.RecognitionListener: void onBeginningOfSpeech()>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>
<java.awt.geom.Ellipse2D.Double: double getHeight()>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>
<android.graphics.Region: boolean union(android.graphics.Rect)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>
<android.graphics.RectF: boolean isEmpty()>
<java.awt.image.IndexColorModel: int getRGB(int)>
<android.os.Parcel: void writeFloat(float)>
<javax.imageio.ImageReader: boolean isIgnoringMetadata()>
<android.content.ComponentName: java.lang.String getClassName()>
<android.preference.Preference: boolean persistBoolean(boolean)>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,int)>
<android.widget.TextView: void onEndBatchEdit()>
<java.awt.Component: void update(java.awt.Graphics)>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(int[],int)>
<android.view.KeyEvent: boolean isTracking()>
<javax.imageio.metadata.IIOMetadataNode: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>
<java.awt.Component: void firePropertyChange(java.lang.String,float,float)>
<javax.imageio.stream.MemoryCacheImageOutputStream: boolean isCachedFile()>
<java.awt.event.InputEvent: int getModifiers()>
<android.widget.LinearLayout: void setBaselineAligned(boolean)>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>
<android.media.MediaRecorder: void setMaxFileSize(long)>
<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>
<com.android.layoutlib.bridge.Bridge.StaticMethodNotImplementedException: void <init>(java.lang.String)>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Region: void <init>(android.graphics.Rect)>
<android.content.Intent.FilterComparison: void <init>(android.content.Intent)>
<java.awt.image.Raster: double getSampleDouble(int,int,int)>
<com.android.server.ProcessStats: int countWorkingStats()>
<java.awt.RenderingHints: java.util.Set keySet()>
<android.app.Dialog: void setCancelable(boolean)>
<android.content.SyncAdapterType: boolean equals(java.lang.Object)>
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>
<android.os.BatteryStats.Uid: long getWifiTurnedOnTime(long,int)>
<javax.imageio.ImageReader: void processThumbnailPassComplete(java.awt.image.BufferedImage)>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>
<org.apache.harmony.awt.gl.font.FontManager: java.awt.peer.FontPeer getFontPeer(java.lang.String,int,int)>
<com.android.server.status.StatusBarService: void updateIcon(android.os.IBinder,com.android.server.status.IconData,com.android.server.status.NotificationData)>
<com.google.android.mms.pdu.ReadOrigInd: void setMessageId(byte[])>
<org.apache.harmony.awt.wtk.NativeEvent: int getWheelRotation()>
<com.android.layoutlib.bridge.BridgeContext: com.android.layoutlib.api.IResourceValue getProjectResource(java.lang.String,java.lang.String)>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<android.location.Location: boolean hasAccuracy()>
<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardTileNode()>
<com.google.android.mms.pdu.NotificationInd: void <init>()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi: java.lang.String getDescription(java.util.Locale)>
<android.provider.Telephony.Sms.Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.text.format.DateUtils: boolean isToday(long)>
<android.pim.vcard.VCardEntryConstructor: void propertyName(java.lang.String)>
<java.awt.geom.CubicCurve2D.Double: double getX1()>
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent,java.lang.String,int)>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataController getController()>
<android.pim.vcard.VCardParser_V21: void parse(java.io.InputStream,java.lang.String,android.pim.vcard.VCardInterpreter,boolean)>
<java.awt.im.InputContext: java.util.Locale getLocale()>
<java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
<org.apache.harmony.awt.gl.image.OffscreenImage: java.lang.Object getProperty(java.lang.String,java.awt.image.ImageObserver)>
<android.app.SearchableInfo: int getImeOptions()>
<android.os.Parcel: void readCharArray(char[])>
<android.location.GpsSatellite: boolean hasAlmanac()>
<android.speech.srec.Recognizer.Grammar: void setupRecognizer()>
<android.widget.ToggleButton: void setChecked(boolean)>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>
<javax.imageio.spi.ImageOutputStreamSpi: javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object)>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<android.database.sqlite.SQLiteStatement: void execute()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<java.awt.geom.Rectangle2D.Double: java.lang.String toString()>
<org.apache.harmony.awt.wtk.NativeEventQueue: boolean waitEvent()>
<android.provider.Settings.System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<android.app.Activity: void setIntent(android.content.Intent)>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<java.awt.geom.PathIterator: void next()>
<java.awt.Component: java.awt.Component getComponentAt(int,int)>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>
<android.view.MotionEvent: float getHistoricalPressure(int)>
<android.pim.vcard.VCardEntryCounter: int getCount()>
<android.location.Location: void removeBearing()>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<java.awt.Component: java.lang.String getName()>
<android.widget.AbsListView: int getCacheColorHint()>
<android.media.JetPlayer: void finalize()>
<android.view.SurfaceHolder: boolean isCreating()>
<org.apache.harmony.awt.gl.font.BasicMetrics: int getBaseLineIndex()>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.graphics.ColorMatrix: void setYUV2RGB()>
<com.google.android.gles_jni.EGLSurfaceImpl: void <init>()>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>
<com.google.android.util.AbstractMessageParser.Video: java.util.List getInfo()>
<java.awt.geom.Dimension2D: void <init>()>
<java.awt.image.RGBImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<java.awt.image.PackedColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<javax.imageio.metadata.IIOMetadataNode: void setIdAttributeNode(org.w3c.dom.Attr,boolean)>
<com.android.defcontainer.DefaultContainerService: void <init>()>
<java.awt.Insets: void <init>(int,int,int,int)>
<java.awt.DisplayMode: boolean equals(java.lang.Object)>
<android.view.accessibility.AccessibilityEvent: boolean isChecked()>
<android.speech.srec.Recognizer: int putAudio(byte[],int,int,boolean)>
<java.awt.image.ImageFilter: void <init>()>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>
<android.app.LocalActivityManager: void dispatchStop()>
<java.awt.image.DataBufferInt: void <init>(int)>
<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>
<java.awt.geom.Line2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.graphics.drawable.LayerDrawable: int getOpacity()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>
<android.view.Display: int getHeight()>
<android.opengl.GLES11: boolean glIsEnabled(int)>
<org.apache.harmony.awt.gl.image.URLDecodingImageSource: boolean checkConnection()>
<java.awt.image.BufferedImageOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: int getNumGlyphs()>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>
<android.view.GestureDetector: boolean isLongpressEnabled()>
<android.preference.Preference: java.lang.String getKey()>
<android.app.Instrumentation: void stopAllocCounting()>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>
<android.provider.ContactsContract.CommonDataKinds.Event: int getTypeResource(java.lang.Integer)>
<android.pim.vcard.VCardComposer: java.lang.String getErrorReason()>
<java.awt.Toolkit: java.awt.peer.FontPeer getFontPeer(java.lang.String,int)>
<java.awt.geom.Rectangle2D.Float: int outcode(double,double)>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>
<java.awt.Toolkit: void sync()>
<android.view.View: int getRight()>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>
<android.net.Uri: java.lang.String getEncodedFragment()>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.app.Notification: int describeContents()>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>
<android.provider.Settings.Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<javax.microedition.khronos.opengles.GL11: void glGetPointerv(int,java.nio.Buffer[])>
<android.net.http.EventHandler: void error(int,java.lang.String)>
<org.apache.harmony.awt.wtk.NativeIM: java.util.Locale getLocale()>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>
<android.os.ServiceManager: java.lang.String[] listServices()>
<com.android.layoutlib.bridge.BridgeTypedArray: boolean hasValue(int)>
<android.app.Service: void startForeground(int,android.app.Notification)>
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>
<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.widget.Scroller: void setFinalY(int)>
<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>
<android.provider.Settings.Secure: android.net.Uri getUriFor(java.lang.String)>
<android.pim.vcard.VCardBuilder: java.lang.String toString()>
<android.pim.vcard.VCardParser_V21: java.lang.String unescapeCharacter(char)>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendFuncSeparate(int,int,int,int)>
<android.widget.TabWidget: void setDividerDrawable(int)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<java.awt.Point: void translate(int,int)>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
<android.os.Bundle: void clear()>
<com.android.film.FilmRS: void setFilmStripPosition(int,int)>
<java.awt.font.TransformAttribute: boolean isIdentity()>
<android.app.PendingIntent: java.lang.String getTargetPackage()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<java.awt.Graphics2D: void clip(java.awt.Shape)>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>
<android.hardware.GeomagneticField: float getY()>
<android.widget.ImageView: void setImageLevel(int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>
<org.apache.harmony.awt.ListenerList: java.lang.Object[] getUserListeners(java.lang.Object[])>
<android.view.View: boolean requestFocusFromTouch()>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>
<android.widget.ListView: android.os.Parcelable onSaveInstanceState()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>
<android.database.Cursor: int getPosition()>
<android.pim.vcard.VCardParser_V21: void handleCharset(java.lang.String)>
<java.awt.GraphicsConfiguration: java.awt.GraphicsDevice getDevice()>
<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.content.pm.PackageParser.ServiceIntentInfo: void <init>(android.content.pm.PackageParser.Service)>
<com.google.android.mms.pdu.DeliveryInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
<java.awt.event.MouseEvent: java.lang.String paramString()>
<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>
<android.location.GpsSatellite: float getAzimuth()>
<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.BandedSampleModel: int[] getPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<java.awt.font.TextLayout: float getLeading()>
<java.awt.Toolkit: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>
<javax.imageio.stream.ImageInputStream: java.lang.String readLine()>
<android.view.View: void buildDrawingCache()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.graphics.Canvas: void <init>()>
<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>
<com.android.layoutlib.bridge.BridgeTypedArray: int getResourceId(int,int)>
<org.apache.harmony.awt.gl.MultiRectArea: boolean contains(java.awt.geom.Rectangle2D)>
<com.google.android.mms.pdu.PduParser: byte[] parseWapString(java.io.ByteArrayInputStream,int)>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>
<com.android.server.connectivity.Tethering: boolean isWifi(java.lang.String)>
<org.apache.harmony.awt.gl.image.JpegDecoder: void returnData(int[],int)>
<android.text.method.ScrollingMovementMethod: boolean canSelectArbitrarily()>
<com.google.android.mms.pdu.NotificationInd: void setMessageClass(byte[])>
<java.awt.geom.Line2D: double ptSegDist(double,double)>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>
<java.awt.image.DataBufferFloat: double getElemDouble(int)>
<android.inputmethodservice.KeyboardView: void swipeUp()>
<java.awt.image.Raster: int getMinX()>
<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.text.style.QuoteSpan: int describeContents()>
<android.content.IntentFilter: android.content.IntentFilter.AuthorityEntry getDataAuthority(int)>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>
<android.content.ContentProviderResult: java.lang.String toString()>
<com.android.layoutlib.bridge.NinePatchDrawable: int getMinimumWidth()>
<java.awt.image.FilteredImageSource: void startProduction(java.awt.image.ImageConsumer)>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,int[],int)>
<android.text.TextPaint: void <init>(android.graphics.Paint)>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<android.text.Editable: android.text.Editable append(char)>
<android.widget.DatePicker: int getMonth()>
<android.ddm.DdmHandleThread: void disconnected()>
<android.webkit.PluginData: long getContentLength()>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>
<com.google.android.mms.pdu.SendReq: byte[] getTransactionId()>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>
<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>
<android.pim.vcard.VCardEntry: java.lang.String getPhoneticFamilyName()>
<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>
<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<org.apache.harmony.awt.gl.color.NativeCMM: void cmmSetProfileElement(long,int,byte[])>
<android.widget.ImageView: void drawableStateChanged()>
<java.awt.Toolkit: java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration)>
<java.awt.image.MultiPixelPackedSampleModel: void setPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<javax.imageio.ImageReader: java.awt.image.RenderedImage readAsRenderedImage(int,javax.imageio.ImageReadParam)>
<android.graphics.drawable.ClipDrawable: void setAlpha(int)>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>
<android.content.pm.PackageParser.Activity: java.lang.String toString()>
<android.location.Address: java.lang.String getPremises()>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>
<javax.imageio.spi.ImageReaderSpi: boolean isOwnReader(javax.imageio.ImageReader)>
<android.pim.vcard.VCardInterpreterCollection: void propertyValues(java.util.List)>
<android.os.Bundle: long[] getLongArray(java.lang.String)>
<android.text.util.Rfc822Token: java.lang.String quoteName(java.lang.String)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getNodeValue()>
<android.ddm.DdmHandleHello: void disconnected()>
<org.apache.harmony.awt.state.MenuItemState: java.awt.Rectangle getItemBounds()>
<android.content.Context: java.lang.String getPackageResourcePath()>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>
<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>
<java.awt.Toolkit: void initializeDesktopProperties()>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>
<org.apache.harmony.awt.gl.MultiRectAreaOp: int[] checkBufSize(int[],int)>
<android.widget.ListView: void onRestoreInstanceState(android.os.Parcelable)>
<android.webkit.WebView: void onDetachedFromWindow()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(java.lang.String,java.awt.font.FontRenderContext,java.awt.Font)>
<java.awt.Component: java.awt.event.HierarchyListener[] getHierarchyListeners()>
<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.PduHeaders parseHeaders(java.io.ByteArrayInputStream)>
<android.ddm.DdmHandleExit: void register()>
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>
<java.awt.image.Raster: double[] getPixel(int,int,double[])>
<android.provider.Calendar.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String,java.lang.String)>
<java.awt.Adjustable: int getMinimum()>
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.graphics.Matrix: void mapVectors(float[],float[])>
<org.apache.harmony.awt.gl.font.FontPeerImpl: float getItalicAngle()>
<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>
<android.os.BatteryStats.Uid.Proc: int getStarts(int)>
<android.hardware.Camera.PictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>
<android.os.DropBoxManager.Entry: void close()>
<java.awt.geom.QuadCurve2D.Double: double getY1()>
<android.graphics.Bitmap: int getWidth()>
<com.google.android.gles_jni.EGLImpl: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.graphics.Matrix: boolean rectStaysRect()>
<android.app.Activity: void setDefaultKeyMode(int)>
<android.app.backup.RestoreObserver: void restoreStarting(int)>
<com.google.android.gles_jni.GLImpl: void glBlendFuncSeparate(int,int,int,int)>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
<javax.imageio.stream.ImageInputStreamImpl: void close()>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<android.view.View: android.view.animation.Animation getAnimation()>
<android.preference.RingtonePreference: void <init>(android.content.Context)>
<android.pim.vcard.VCardEntryCounter: void propertyValues(java.util.List)>
<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>
<android.net.LocalSocket: void setSoTimeout(int)>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>
<org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: boolean canUseCacheFile()>
<android.text.HtmlToSpannedConverter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<java.awt.Component: java.awt.event.FocusListener[] getFocusListeners()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<org.apache.harmony.awt.im.InputMethodContext: java.util.Locale getLocale()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<android.os.TokenWatcher: void release(android.os.IBinder)>
<android.widget.AbsListView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.AttributeCache.Package: void <init>(android.content.Context)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>
<java.awt.event.FocusEvent: boolean isTemporary()>
<javax.imageio.stream.ImageOutputStreamImpl: void write(int)>
<java.awt.image.SampleModel: void setSample(int,int,int,double,java.awt.image.DataBuffer)>
<android.appwidget.AppWidgetHost: void deleteHost()>
<android.pim.ICalendar: android.pim.ICalendar.Component parseComponent(android.pim.ICalendar.Component,java.lang.String)>
<java.awt.Toolkit: java.awt.Image createImage(java.net.URL)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String getPackageResourcePath()>
<com.android.layoutlib.bridge.Bridge: boolean init(java.lang.String,java.util.Map)>
<android.widget.SimpleAdapter: void setDropDownViewResource(int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.Object getViewKey()>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>
<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
<android.database.sqlite.SQLiteAbortException: void <init>()>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>
<android.widget.EditText: void <init>(android.content.Context)>
<android.location.Location: void setLongitude(double)>
<android.database.sqlite.SQLiteProgram: void native_bind_double(int,double)>
<android.pim.vcard.VCardParser_V21: void handleLanguage(java.lang.String)>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>
<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>
<android.content.Intent: android.os.Bundle getExtras()>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>
<android.graphics.Canvas: void <init>(javax.microedition.khronos.opengles.GL)>
<javax.imageio.ImageWriter: void replaceImageMetadata(int,javax.imageio.metadata.IIOMetadata)>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
<java.awt.Shape: java.awt.Rectangle getBounds()>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
<android.database.CursorWindow: float getFloat(int,int)>
<javax.imageio.stream.ImageOutputStreamImpl: void <init>()>
<android.app.ActivityThread.PackageInfo: android.content.res.AssetManager getAssets(android.app.ActivityThread)>
<android.provider.MediaStore.Audio.Playlists: android.net.Uri getContentUri(java.lang.String)>
<android.opengl.GLES10: void glMatrixMode(int)>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>
<android.view.MotionEvent: float getX()>
<android.database.DataSetObserver: void onChanged()>
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>
<android.graphics.Matrix: void setTranslate(float,float)>
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,int[],int)>
<java.awt.image.Raster: float[] getSamples(int,int,int,int,int,float[])>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>
<android.text.BoringLayout: int getHeight()>
<java.awt.color.ICC_ProfileGray: float getGamma()>
<java.awt.geom.QuadCurve2D: double getX1()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>
<java.awt.GraphicsConfiguration: java.awt.ImageCapabilities getImageCapabilities()>
<android.inputmethodservice.InputMethodService: void onUnbindInput()>
<org.apache.harmony.awt.gl.MultiRectArea: java.awt.Rectangle getBounds()>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>
<javax.imageio.stream.FileImageOutputStream: void seek(long)>
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>
<java.awt.geom.Ellipse2D.Double: void setFrame(double,double,double,double)>
<java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
<org.apache.harmony.awt.ClipRegion: void <init>(org.apache.harmony.awt.gl.MultiRectArea)>
<java.awt.image.DirectColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
<javax.imageio.stream.ImageInputStream: double readDouble()>
<java.awt.Adjustable: int getVisibleAmount()>
<javax.imageio.event.IIOWriteProgressListener: void thumbnailProgress(javax.imageio.ImageWriter,float)>
<android.server.BluetoothService.BondState: void attempt(java.lang.String)>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.pim.EventRecurrence: boolean repeatsMonthlyOnDayCount()>
<java.awt.Component: void removeKeyListener(java.awt.event.KeyListener)>
<android.graphics.Movie: int duration()>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>
<android.database.ContentObserver: void onChange(boolean)>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<com.google.android.mms.pdu.PduPart: byte[] getContentTransferEncoding()>
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>
<android.view.ViewStub: android.view.View inflate()>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>
<org.apache.harmony.awt.im.InputMethodContext: void enableClientWindowNotification(java.awt.im.spi.InputMethod,boolean)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>
<android.bluetooth.BluetoothClass: int getDeviceClass()>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>
<android.widget.TableRow: void <init>(android.content.Context)>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>
<android.app.Dialog: void onContentChanged()>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>
<java.awt.Toolkit: int getMenuShortcutKeyMask()>
<org.apache.harmony.awt.gl.ImageSurface: void dataReleased()>
<java.awt.Graphics: void drawString(java.lang.String,int,int)>
<android.widget.ImageView: void <init>(android.content.Context)>
<java.awt.image.ImageObserver: boolean imageUpdate(java.awt.Image,int,int,int,int,int)>
<java.awt.MenuContainer: java.awt.Font getFont()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] getFrom8lRGBtosRGB_LUT()>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,float[],int)>
<android.telephony.SmsMessage: android.telephony.SmsMessage.MessageClass getMessageClass()>
<android.location.Location: float bearingTo(android.location.Location)>
<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>
<android.text.style.DynamicDrawableSpan: void <init>()>
<java.awt.im.InputMethodHighlight: void <init>(boolean,int)>
<java.awt.event.MouseMotionListener: void mouseDragged(java.awt.event.MouseEvent)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<android.view.View: void addFocusables(java.util.ArrayList,int)>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>
<java.awt.CompositeContext: void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>
<android.app.PendingIntent.CanceledException: void <init>()>
<java.awt.Image: java.awt.Graphics getGraphics()>
<android.database.MatrixCursor: int getInt(int)>
<java.awt.image.DataBufferDouble: int getElem(int)>
<android.pim.vcard.CustomBufferedReader: long getTotalmillisecond()>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>
<android.gesture.GesturePoint: java.lang.Object clone()>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>
<javax.imageio.stream.FileImageOutputStream: void <init>(java.io.File)>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>
<android.pim.vcard.VCardBuilder: void appendEmailLine(int,java.lang.String,java.lang.String,boolean)>
<com.android.server.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long)>
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>
<android.pim.vcard.VCardParser: void parse(java.io.InputStream,java.lang.String,android.pim.vcard.VCardInterpreter,boolean)>
<com.android.server.status.StatusBarView: void dispatchDraw(android.graphics.Canvas)>
<javax.imageio.plugins.jpeg.JPEGHuffmanTable: short[] getValues()>
<java.awt.Rectangle: double getY()>
<android.view.inputmethod.InputBinding: int describeContents()>
<com.google.android.mms.pdu.DeliveryInd: void <init>()>
<android.widget.TableLayout.LayoutParams: void <init>(int,int)>
<org.apache.harmony.awt.wtk.NativeWindow: void toBack()>
<com.android.server.status.TrackingView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>
<java.awt.Font: java.lang.String getName()>
<java.awt.geom.Rectangle2D.Double: double getX()>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>
<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>
<android.content.Context: android.content.ContentResolver getContentResolver()>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDocumentNode()>
<com.android.server.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>
<com.android.server.status.StorageNotification: void onUsbMassStorageConnectionChanged(boolean)>
<org.apache.harmony.awt.gl.GLVolatileImage: org.apache.harmony.awt.gl.Surface getImageSurface()>
<org.apache.harmony.awt.wtk.NativeIM: java.util.Locale[] getAvailableLocales()>
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] split(java.lang.String)>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>
<android.content.Context: android.os.Looper getMainLooper()>
<javax.imageio.spi.ServiceRegistry: boolean contains(java.lang.Object)>
<com.android.layoutlib.bridge.BridgeContentResolver: void cancelSync(android.net.Uri)>
<com.google.android.util.AbstractMessageParser.Part: void <init>()>
<android.content.SyncStats: void <init>(android.os.Parcel)>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<android.location.Criteria: void setSpeedRequired(boolean)>
<android.graphics.DrawFilter: void finalize()>
<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.text.CharacterIterator,int,int,java.awt.Graphics)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: boolean equals(java.lang.Object)>
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(android.view.View)>
<android.view.Window: android.view.Window getContainer()>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(double)>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.database.sqlite.SQLiteQuery: void close()>
<android.database.SQLException: void <init>()>
<java.awt.geom.QuadCurve2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<java.awt.event.TextEvent: java.lang.String paramString()>
<com.android.layoutlib.bridge.BridgeTypedArray: int getInteger(int,int)>
<java.awt.font.TextLayout: boolean equals(java.awt.font.TextLayout)>
<java.awt.Component: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>
<android.opengl.GLES10: void glStencilOp(int,int,int)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
<java.awt.geom.Point2D: void setLocation(java.awt.geom.Point2D)>
<android.text.format.Time: boolean before(android.text.format.Time)>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: void setFontName(java.lang.String)>
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>
<javax.imageio.event.IIOWriteProgressListener: void imageProgress(javax.imageio.ImageWriter,float)>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.inputmethodservice.InputMethodService: void onWindowHidden()>
<org.apache.harmony.awt.wtk.NativeRobot: void keyEvent(int,boolean)>
<android.util.SparseIntArray: int indexOfValue(int)>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.view.ViewGroup: void removeAllViews()>
<android.view.Window: boolean hasChildren()>
<org.apache.harmony.awt.gl.MultiRectArea: void add(org.apache.harmony.awt.gl.MultiRectArea)>
<android.media.JetPlayer: int getMaxTracks()>
<android.view.KeyEvent: int describeContents()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: java.awt.image.BufferedImage read(int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributeValue(int)>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.renderscript.ProgramStore.Builder: void setColorMask(boolean,boolean,boolean,boolean)>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>
<android.view.View: void setClickable(boolean)>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>
<com.google.android.gles_jni.GLImpl: void glPixelStorei(int,int)>
<android.graphics.Paint: float getFontSpacing()>
<android.app.Instrumentation: void onDestroy()>
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<android.content.Context: void sendStickyBroadcast(android.content.Intent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenf(int,int,float)>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>
<java.awt.image.BufferedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>
<javax.imageio.ImageWriter: javax.imageio.spi.ImageWriterSpi getOriginatingProvider()>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getResourceBaseName()>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean getFeature(java.lang.String)>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.database.CursorWindow: boolean putLong(long,int,int)>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>
<java.awt.image.ColorModel: java.lang.String toString()>
<com.google.android.mms.MmsException: void <init>(java.lang.String)>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>
<android.media.Metadata.TimedText: java.lang.String toString()>
<android.drm.mobile1.DrmConstraintInfo: long getInterval()>
<java.awt.image.DirectColorModel: int getGreen(java.lang.Object)>
<android.os.Debug: int setAllocationLimit(int)>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>
<java.awt.font.ShapeGraphicAttribute: float getDescent()>
<android.text.method.NumberKeyListener: char[] getAcceptedChars()>
<java.awt.font.ImageGraphicAttribute: java.awt.geom.Rectangle2D getBounds()>
<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>
<android.widget.ImageView: void setScaleType(android.widget.ImageView.ScaleType)>
<java.awt.image.ColorModel: int[] getComponentSize()>
<java.awt.event.FocusAdapter: void focusLost(java.awt.event.FocusEvent)>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String)>
<java.awt.Component: boolean isDisplayable()>
<android.graphics.Typeface: boolean isItalic()>
<java.awt.image.Raster: int getSampleModelTranslateY()>
<javax.imageio.stream.ImageInputStream: short readShort()>
<android.graphics.Path: void rQuadTo(float,float,float,float)>
<com.android.server.vpn.VpnServiceBinder: void onCreate()>
<android.media.AudioManager: boolean shouldVibrate(int)>
<com.android.layoutlib.bridge.BridgeContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<java.awt.image.Raster: void <init>(java.awt.image.SampleModel,java.awt.Point)>
<android.view.View: void setScrollbarFadingEnabled(boolean)>
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>
<android.view.Surface: void setFlags(int,int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)>
<android.pim.EventRecurrence: int day2CalendarDay(int)>
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>
<java.awt.Polygon: boolean contains(java.awt.geom.Point2D)>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: java.awt.image.WritableRaster getWritableRaster()>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>
<android.view.MotionEvent: float getPressure(int)>
<android.graphics.drawable.ColorDrawable: void <init>()>
<android.view.KeyEvent: boolean isSymPressed()>
<org.apache.harmony.awt.im.InputMethodContext: void setCompositionEnabled(boolean)>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>
<java.awt.Component: boolean postEvent(java.awt.Event)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,int[],int)>
<javax.imageio.ImageWriteParam: java.lang.String getLocalizedCompressionTypeName()>
<java.awt.Insets: boolean equals(java.lang.Object)>
<android.widget.Chronometer: void onDetachedFromWindow()>
<java.awt.Dimension: void <init>()>
<java.awt.geom.CubicCurve2D: boolean contains(double,double,double,double)>
<android.util.AndroidRuntimeException: void <init>()>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>
<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRightsManager getInstance()>
<android.database.ContentObserver: void dispatchChange(boolean)>
<java.awt.color.ICC_ProfileGray: short[] getTRC()>
<android.content.ActivityNotFoundException: void <init>()>
<java.awt.image.BufferedImage: void <init>(int,int,int,java.awt.image.IndexColorModel)>
<android.app.admin.DevicePolicyManager: void lockNow()>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>
<android.graphics.Paint: float getFontSpacing()>
<java.awt.image.BufferedImage: java.lang.String[] getPropertyNames()>
<android.graphics.Region: boolean set(android.graphics.Region)>
<javax.microedition.khronos.opengles.GL10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.pim.vcard.VCardParser_V30: java.lang.String getVersionString()>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>
<android.text.util.Rfc822Token: java.lang.String toString()>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>
<android.text.Layout: int getWidth()>
<android.app.Activity: void startActivity(android.content.Intent)>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: int getHeight(int)>
<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int)>
<android.media.RingtoneManager: void stopPreviousRingtone()>
<java.awt.image.MemoryImageSource: void setAnimated(boolean)>
<android.pim.vcard.VCardEntry.OrganizationData: boolean equals(java.lang.Object)>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>
<java.beans.PropertyEditorSupport: void paintValue(java.awt.Graphics,java.awt.Rectangle)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] extract(java.lang.String)>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>
<org.apache.harmony.awt.gl.image.FileDecodingImageSource: java.io.InputStream getInputStream()>
<android.graphics.Bitmap: void finalize()>
<android.widget.DialerFilter: void onFinishInflate()>
<java.awt.image.Raster: double[] getSamples(int,int,int,int,int,double[])>
<java.awt.geom.Ellipse2D.Float: void <init>()>
<android.widget.TableLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: void setInput(java.io.InputStream,java.lang.String)>
<android.widget.PopupWindow: void setOutsideTouchable(boolean)>
<android.view.Window: void clearFlags(int)>
<java.awt.Toolkit: int checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<android.widget.ExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>
<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>
<com.google.android.mms.pdu.ReadRecInd: void setDate(long)>
<java.awt.RenderingHints: boolean equals(java.lang.Object)>
<android.widget.LinearLayout: int getBaseline()>
<java.awt.Component: boolean keyDown(java.awt.Event,int)>
<android.gesture.GestureLibrary: int getOrientationStyle()>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>
<java.awt.image.SinglePixelPackedSampleModel: void setPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.view.View: void setTag(java.lang.Object)>
<android.database.AbstractCursor: void deactivate()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>
<java.awt.Color: int getTransparency()>
<com.google.android.mms.pdu.ReadRecInd: void setMessageId(byte[])>
<android.text.util.Rfc822Token: java.lang.String getComment()>
<com.android.server.ThrottleService: long getResetTime(java.lang.String)>
<android.view.MotionEvent: int getPointerCount()>
<android.widget.ExpandableListAdapter: long getCombinedChildId(long,long)>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>
<java.awt.image.SampleModel: double[] getPixel(int,int,double[],java.awt.image.DataBuffer)>
<android.util.FloatMath: float floor(float)>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.Drawable: boolean isVisible()>
<android.pim.vcard.VCardComposer: void finalize()>
<android.net.NetworkInfo: java.lang.String getReason()>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.os.IBinder: boolean pingBinder()>
<android.inputmethodservice.Keyboard: boolean isShifted()>
<org.apache.harmony.awt.im.InputMethodContext: java.lang.Object getInputMethodControlObject()>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendEvents(java.util.List)>
<android.widget.PopupWindow: void setTouchable(boolean)>
<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>
<java.awt.geom.Line2D.Double: double getY2()>
<android.media.ToneGenerator: boolean startTone(int)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>
<android.os.Parcel: void readException()>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,java.nio.FloatBuffer)>
<com.google.android.mms.ContentType: java.util.ArrayList getAudioTypes()>
<org.apache.harmony.awt.wtk.NativeEventQueue: void setShutdownWatchdog(org.apache.harmony.awt.wtk.ShutdownWatchdog)>
<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<java.awt.event.MouseAdapter: void mousePressed(java.awt.event.MouseEvent)>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>
<com.android.layoutlib.bridge.BridgeContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Canvas: int getHeight()>
<android.pim.vcard.VCardEntryCounter: void propertyParamType(java.lang.String)>
<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserSetsURL(java.lang.String,java.lang.String)>
<javax.imageio.spi.ImageInputStreamSpi: void <init>(java.lang.String,java.lang.String,java.lang.Class)>
<android.pim.ContactsAsyncHelper.ImageTracker: void setPhotoRequest(com.android.internal.telephony.CallerInfo)>
<android.opengl.GLES10: void glPopMatrix()>
<android.content.Intent: android.net.Uri getData()>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>
<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>
<java.awt.im.InputContext: void setCharacterSubsets(java.lang.Character.Subset[])>
<org.apache.harmony.awt.gl.color.ColorScaler: void loadScalingData(java.awt.image.SampleModel)>
<javax.imageio.ImageWriter: void removeImage(int)>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>
<android.util.TimingLogger: void addSplit(java.lang.String)>
<java.awt.geom.Area: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>
<java.awt.geom.Point2D: double distance(double,double)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getStrikethroughThickness()>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>
<java.awt.FontMetrics: java.awt.Font getFont()>
<android.content.Intent: boolean filterEquals(android.content.Intent)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>
<android.util.AttributeSet: int getAttributeCount()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<android.net.NetworkInfo: boolean isRoaming()>
<android.provider.Settings.NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
<android.util.SparseBooleanArray: int keyAt(int)>
<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>
<android.telephony.NeighboringCellInfo: int getCid()>
<android.graphics.Movie: boolean isOpaque()>
<android.graphics.RectF: boolean contains(float,float,float,float)>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeRobot getNativeRobot(java.awt.GraphicsDevice)>
<java.awt.geom.Arc2D.Float: void setArc(double,double,double,double,double,double,int)>
<com.android.layoutlib.bridge.BridgeResources: android.graphics.drawable.Drawable getDrawable(int)>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>
<android.widget.Checkable: void setChecked(boolean)>
<android.app.Instrumentation: void onStart()>
<com.google.android.mms.pdu.SendReq: int getReadReport()>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void justify(float)>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.net.http.SslCertificate: java.lang.String toString()>
<java.awt.Graphics: void drawBytes(byte[],int,int,int,int)>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>
<android.preference.DialogPreference: void setPositiveButtonText(int)>
<java.awt.image.Raster: float[] getPixel(int,int,float[])>
<android.view.View: int getDefaultSize(int,int)>
<android.view.MotionEvent: void setEdgeFlags(int)>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>
<org.apache.harmony.awt.ListenerList: void addSystemListener(java.util.EventListener)>
<android.graphics.drawable.PictureDrawable: void setDither(boolean)>
<android.app.Instrumentation: void waitForIdleSync()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: void setOutput(java.lang.Object)>
<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>
<javax.microedition.khronos.opengles.GL10: void glFrustumx(int,int,int,int,int,int)>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>
<javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
<com.android.server.KeyInputQueue: void setOrientation(int)>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>
<android.widget.ImageView: int getBaseline()>
<android.view.animation.LayoutAnimationController: float getDelay()>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>
<android.widget.TextView: void computeScroll()>
<java.awt.geom.Line2D: java.awt.geom.Point2D getP2()>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>
<java.awt.image.BufferedImage: int getMinTileX()>
<java.awt.image.FilteredImageSource: boolean isConsumer(java.awt.image.ImageConsumer)>
<android.text.StaticLayout: int getParagraphDirection(int)>
<java.awt.Insets: void set(int,int,int,int)>
<android.os.Environment: java.io.File getDataDirectory()>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<android.preference.Preference: boolean persistInt(int)>
<java.awt.HeadlessToolkit: java.awt.Dimension getScreenSize()>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>
<android.text.style.BulletSpan: void <init>(int)>
<javax.imageio.stream.ImageInputStream: int readInt()>
<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>
<javax.imageio.ImageWriteParam: int getProgressiveMode()>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>
<org.apache.harmony.awt.gl.color.ICC_Transform: void <init>(java.awt.color.ICC_Profile[])>
<android.widget.VideoView: int getBufferPercentage()>
<android.graphics.Path: void quadTo(float,float,float,float)>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<java.awt.image.WritableRenderedImage: boolean isTileWritable(int,int)>
<android.widget.TableLayout.LayoutParams: void <init>(int,int,float)>
<android.content.ContentQueryMap: void close()>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>
<android.pim.vcard.VCardEntryConstructor: void <init>(java.lang.String,boolean,int,android.accounts.Account)>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>
<android.location.Address: java.lang.String getCountryName()>
<android.widget.AdapterView: void setEmptyView(android.view.View)>
<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>
<android.widget.Toast: void <init>(android.content.Context)>
<android.content.res.XmlResourceParser: void close()>
<java.awt.Component: java.awt.event.InputMethodListener[] getInputMethodListeners()>
<com.google.android.mms.pdu.GenericPdu: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
<android.widget.TableLayout: boolean isColumnStretchable(int)>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>
<android.view.ViewConfiguration: int getScrollBarSize()>
<java.awt.image.BufferedImage: int getTileGridXOffset()>
<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<java.awt.Font: java.awt.Font getFont(java.lang.String)>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>
<android.content.IntentSender: java.lang.String toString()>
<java.awt.Component.FlipBufferStrategy: void flip(java.awt.BufferCapabilities.FlipContents)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<java.awt.Cursor: void <init>(int)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>
<android.preference.Preference: long getPersistedLong(long)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>
<android.provider.Telephony.Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean,long)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.widget.TableLayout: void onLayout(boolean,int,int,int,int)>
<android.widget.TableRow.LayoutParams: void <init>(int,int)>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<android.pim.vcard.VCardParser_V21: void handleAnyParam(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.image.PNGChunk: void <init>(byte[],byte[])>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<java.awt.HeadlessException: void <init>()>
<com.google.android.mms.pdu.SendReq: void setCc(com.google.android.mms.pdu.EncodedStringValue[])>
<android.preference.DialogPreference: android.app.Dialog getDialog()>
<android.net.http.SslCertificate.DName: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glPushMatrix()>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeIM getNativeIM()>
<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String,int)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<org.apache.harmony.awt.wtk.NativeEventThread: void start(org.apache.harmony.awt.wtk.NativeEventThread.Init)>
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>
<android.view.View: boolean isVerticalScrollBarEnabled()>
<android.app.Activity: android.content.Intent getIntent()>
<java.beans.PropertyEditorSupport: java.lang.String[] getTags()>
<android.text.style.LineHeightSpan.WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.media.AudioManager: boolean isBluetoothScoOn()>
<android.app.ActivityThread.PackageInfo: android.app.IServiceConnection forgetServiceDispatcher(android.content.Context,android.content.ServiceConnection)>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>
<android.graphics.Matrix: java.awt.geom.AffineTransform getTransform()>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.view.Surface: void readFromParcel(android.os.Parcel)>
<android.location.Location: double convert(java.lang.String)>
<android.graphics.Paint: void setARGB(int,int,int,int)>
<android.database.sqlite.SQLiteDatabase: void close()>
<android.app.SearchableInfo: int getVoiceLanguageId()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>
<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.lang.String getFamily()>
<com.google.android.mms.pdu.DeliveryInd: void setStatus(int)>
<android.widget.AutoCompleteTextView: void dismissDropDown()>
<android.graphics.Matrix: void setScale(float,float,float,float)>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>
<java.awt.Component: java.awt.Point getLocation(java.awt.Point)>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void drawSegments(java.awt.Graphics2D,float,float)>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam)>
<java.awt.image.ReplicateScaleFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo trailing(int)>
<java.awt.geom.Arc2D.Float: java.awt.geom.Rectangle2D makeBounds(double,double,double,double)>
<android.text.Layout: float getLineWidth(int)>
<android.widget.TextView: void endBatchEdit()>
<org.apache.harmony.awt.ClipRegion: void convertRegion(java.awt.Component,org.apache.harmony.awt.gl.MultiRectArea,java.awt.Component)>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>
<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>
<android.content.ContentProviderProxy: android.database.IBulkCursor bulkQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.database.IContentObserver,android.database.CursorWindow)>
<java.awt.Graphics2D: void setRenderingHints(java.util.Map)>
<java.awt.MenuComponent: void dispatchEvent(java.awt.AWTEvent)>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>
<org.apache.harmony.x.imageio.plugins.jpeg.IISDecodingImageSource: void <init>(javax.imageio.stream.ImageInputStream)>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<org.apache.harmony.awt.wtk.NativeIM: boolean hasDynamicLocaleList()>
<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>
<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>
<java.beans.PropertyDescriptor: void setPropertyEditorClass(java.lang.Class)>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>
<com.android.server.am.ActivityManagerService: void resumeAppSwitches()>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>
<java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,int[],int,int)>
<android.content.IntentFilter: java.lang.String getCategory(int)>
<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>
<java.awt.image.SampleModel: int[] getPixel(int,int,int[],java.awt.image.DataBuffer)>
<java.awt.image.LookupTable: int[] lookupPixel(int[],int[])>
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>
<java.awt.image.SampleModel: void <init>(int,int,int,int)>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.GraphicsEnvironment createGraphicsEnvironment(org.apache.harmony.awt.wtk.WindowFactory)>
<android.ddm.DdmHandleHeap: void disconnected()>
<android.opengl.GLES11: boolean glIsTexture(int)>
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>
<android.server.BluetoothService: java.lang.String[] listBonds()>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES10: void glFogxv(int,int[],int)>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>
<java.awt.im.InputMethodRequests: int getCommittedTextLength()>
<android.widget.ViewAnimator: void removeViews(int,int)>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>
<java.awt.event.InvocationEvent: void dispatch()>
<android.widget.DoubleDigitManager.CallBack: boolean twoDigitsFinal(int,int)>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>
<android.text.Layout: boolean isSpanned()>
<android.os.Process: int myTid()>
<org.apache.harmony.awt.gl.image.PNGData: byte[] getImageData()>
<android.widget.ZoomControls: void <init>(android.content.Context)>
<android.inputmethodservice.Keyboard: int getVerticalGap()>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>
<com.google.android.util.AbstractMessageParser.TrieNode: void <init>()>
<android.pim.ICalendar.Property: android.pim.ICalendar.Parameter getFirstParameter(java.lang.String)>
<java.awt.image.DataBufferByte: void setElem(int,int,int)>
<java.awt.AWTKeyStroke: int getKeyEventType()>
<android.widget.SectionIndexer: java.lang.Object[] getSections()>
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>
<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>
<android.content.pm.ComponentInfo: int getIconResource()>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>
<java.awt.geom.GeneralPath: boolean contains(double,double,double,double)>
<android.widget.ProgressBar: int getSecondaryProgress()>
<javax.microedition.khronos.opengles.GL10: void glClientActiveTexture(int)>
<android.content.pm.PermissionInfo: void <init>()>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>
<android.webkit.PluginList: void <init>()>
<java.awt.Polygon: boolean intersects(java.awt.geom.Rectangle2D)>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<org.apache.harmony.awt.wtk.NativeEventThread: void run()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<java.awt.event.MouseAdapter: void <init>()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<android.os.Debug: void resetGlobalExternalAllocSize()>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: com.android.layoutlib.api.ILayoutResult.ILayoutViewInfo[] getChildren()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>
<android.os.Looper: void dump(android.util.Printer,java.lang.String)>
<android.webkit.WebView: void pauseTimers()>
<android.webkit.SslErrorHandler: void handleMessage(android.os.Message)>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>
<com.android.server.am.ActivityManagerService: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<org.apache.harmony.awt.gl.Crossing: int solveCubic(double[],double[])>
<android.view.View: int[] getDrawableState()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>
<android.graphics.Paint: float getTextSkewX()>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<android.widget.VideoView: boolean canSeekBackward()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.Class getObjectClass(java.lang.String)>
<android.provider.Settings.Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>
<java.awt.Component: void addNotify()>
<android.widget.ScrollView: boolean arrowScroll(int)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: org.apache.harmony.awt.gl.font.Glyph getDefaultGlyph()>
<java.awt.AlphaComposite: boolean equals(java.lang.Object)>
<java.beans.PropertyDescriptor: void setConstrained(boolean)>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<android.text.Layout: int getParagraphRight(int)>
<android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.harmony.awt.gl.CommonGraphicsEnvironment: java.awt.Font[] getAllFonts()>
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<org.apache.harmony.awt.im.InputMethodContext: java.awt.Rectangle getTextLocation(java.awt.font.TextHitInfo)>
<com.google.android.gles_jni.GLImpl: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>
<android.content.pm.PackageParser.ActivityIntentInfo: void <init>(android.content.pm.PackageParser.Activity)>
<android.webkit.WebView: void documentAsText(android.os.Message)>
<android.app.Activity: void onContentChanged()>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>
<android.pim.ContactsAsyncHelper: void handleMessage(android.os.Message)>
<android.preference.CheckBoxPreference: void setSummaryOn(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glTexParameterf(int,int,float)>
<android.content.Context: android.content.res.Resources.Theme getTheme()>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>
<android.hardware.Camera: void cancelAutoFocus()>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>
<java.awt.geom.CubicCurve2D.Double: void <init>()>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<android.preference.Preference: java.lang.CharSequence getSummary()>
<org.apache.harmony.awt.gl.render.NativeImageBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<com.android.server.am.ActivityManagerService: void registerActivityWatcher(android.app.IActivityWatcher)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void <init>(char[],java.awt.font.FontRenderContext,java.awt.Font,int)>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.android.server.status.UsbStorageActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>
<android.graphics.drawable.GradientDrawable: int getOpacity()>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)>
<android.renderscript.SimpleMesh.Builder: int addVertexType(android.renderscript.Element,int)>
<android.widget.ListView: boolean performItemClick(android.view.View,int,long)>
<android.view.ViewConfiguration: float getScrollFriction()>
<android.graphics.Bitmap: int getHeight()>
<android.view.animation.AnimationSet: void setStartTime(long)>
<org.apache.harmony.awt.gl.MultiRectArea: org.apache.harmony.awt.gl.MultiRectArea subtract(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>
<java.awt.im.InputContext: boolean selectInputMethod(java.util.Locale)>
<android.graphics.Region: boolean quickContains(int,int,int,int)>
<com.google.android.mms.pdu.PduBody: void <init>()>
<javax.imageio.spi.ImageOutputStreamSpi: javax.imageio.stream.ImageOutputStream createOutputStreamInstance(java.lang.Object,boolean,java.io.File)>
<java.awt.image.BufferedImage: void removeTileObserver(java.awt.image.TileObserver)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.gl.font.FontManager: java.io.File getFontPropertyFile()>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
<android.os.Message: void setTarget(android.os.Handler)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,float[],int)>
<android.hardware.Camera.Parameters: java.lang.String get(java.lang.String)>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.android.server.am.ActivityManagerService: void setSystemProcess()>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>
<android.webkit.WebBackForwardList: int getCurrentIndex()>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<org.apache.harmony.awt.gl.image.OffscreenImage: int getHeight(java.awt.image.ImageObserver)>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glEnable(int)>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>
<android.widget.Gallery: int computeHorizontalScrollRange()>
<javax.imageio.spi.ServiceRegistry: java.util.Iterator lookupProviders(java.lang.Class,java.lang.ClassLoader)>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>
<com.android.server.am.BatteryStatsService: void noteScreenBrightness(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerSignature(java.lang.String)>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>()>
<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()>
<android.net.LocalSocket: void setReceiveBufferSize(int)>
<android.widget.TabHost: android.view.View getCurrentView()>
<android.graphics.Matrix: float mapRadius(float)>
<android.content.res.ColorStateList: void <init>(int[][],int[])>
<android.view.View: int getSolidColor()>
<java.awt.Font: java.awt.Font deriveFont(int)>
<android.os.Debug: void resetGlobalGcInvocationCount()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsRenderbufferOES(int)>
<java.awt.Component: void setMaximumSize(java.awt.Dimension)>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
<com.android.common.OperationScheduler: long getLastAttemptTimeMillis()>
<android.widget.Filter: void <init>()>
<java.awt.geom.Ellipse2D: boolean contains(double,double,double,double)>
<android.graphics.Point: boolean equals(java.lang.Object)>
<com.google.android.mms.pdu.PduHeaders: void <init>()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.awt.color.ICC_ProfileRGB: short[] getTRC(int)>
<android.view.MenuItem: boolean hasSubMenu()>
<java.awt.geom.Line2D.Float: double getX1()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,long)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getLeading()>
<android.pim.vcard.VCardParser_V21: void parseItems()>
<android.widget.TextView: android.text.Layout getLayout()>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,java.nio.IntBuffer)>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
<android.content.Entity: void <init>(android.content.ContentValues)>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitLdcInsn(java.lang.Object)>
<android.hardware.Camera.Parameters: java.util.List getSupportedColorEffects()>
<android.graphics.Rect: void offset(int,int)>
<java.awt.image.DirectColorModel: int getRGB(int)>
<android.ddm.DdmHandleNativeHeap: void connected()>
<com.android.tools.layoutlib.create.OverrideMethod: int invokeI(java.lang.String,boolean,java.lang.Object)>
<android.speech.srec.Recognizer: java.lang.String eventToString(int)>
<org.apache.harmony.awt.gl.ImageSurface: boolean isNativeDrawable()>
<android.server.BluetoothService: boolean removeBond(java.lang.String)>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addChildElement(java.lang.String,java.lang.String)>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>
<android.pim.EventRecurrence: void parse(java.lang.String)>
<android.text.Annotation: java.lang.String getValue()>
<android.view.KeyEvent: boolean isCanceled()>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<com.android.server.am.BatteryStatsService: void notePhoneOff()>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>
<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>
<android.os.Bundle: double[] getDoubleArray(java.lang.String)>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<com.android.server.Watchdog.PssRequestor: void requestPss()>
<java.awt.Polygon: boolean intersects(double,double,double,double)>
<android.os.BatteryStats.Uid: void noteUserActivityLocked(int)>
<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)>
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)>
<java.awt.geom.CubicCurve2D.Double: double getCtrlX1()>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>
<android.widget.TabHost: void onTouchModeChanged(boolean)>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<java.awt.im.InputMethodRequests: java.awt.Rectangle getTextLocation(java.awt.font.TextHitInfo)>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>
<com.google.android.mms.ContentType: boolean isTextType(java.lang.String)>
<java.awt.image.ColorModel: int getAlpha(java.lang.Object)>
<android.os.Parcel: void readLongArray(long[])>
<android.os.StatFs: int getBlockSize()>
<com.android.layoutlib.bridge.BridgeContext: java.lang.Object getViewKey(android.view.View)>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.webkit.WebView: boolean zoomIn()>
<java.awt.event.AWTEventListenerProxy: void <init>(long,java.awt.event.AWTEventListener)>
<android.view.Surface: void freeze()>
<java.awt.Component: java.awt.Dimension preferredSize()>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>
<javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
<org.apache.harmony.awt.wtk.NativeCursor: void destroyCursor()>
<android.graphics.Matrix: boolean preSkew(float,float)>
<java.awt.im.InputContext: void reconvert()>
<java.awt.Rectangle: void add(java.awt.Point)>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>
<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>
<android.speech.srec.MicrophoneInputStream: void <init>(int,int)>
<java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
<java.awt.image.ReplicateScaleFilter: void setProperties(java.util.Hashtable)>
<java.awt.geom.Rectangle2D: boolean intersectsLine(double,double,double,double)>
<com.android.server.DropBoxManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<java.awt.geom.AffineTransform: int hashCode()>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>
<android.text.DynamicLayout: int getLineCount()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: void setNumChars(int)>
<javax.imageio.stream.ImageInputStream: java.lang.String readUTF()>
<android.view.View: boolean awakenScrollBars()>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>
<java.awt.font.TextLayout: java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo,java.awt.geom.Rectangle2D)>
<android.media.ToneGenerator: void finalize()>
<android.widget.MediaController: void setEnabled(boolean)>
<android.os.PowerManager: void goToSleep(long)>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>
<android.text.method.DateKeyListener: int getInputType()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<java.awt.image.MultiPixelPackedSampleModel: void <init>(int,int,int,int)>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int)>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>
<java.awt.Component: void addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)>
<android.content.pm.PackageParser.Instrumentation: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.InstrumentationInfo)>
<android.content.res.Configuration: boolean equals(java.lang.Object)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>
<com.google.android.mms.pdu.ReadRecInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
<android.widget.PopupWindow: void dismiss()>
<org.apache.harmony.awt.gl.ImageSurface: int getSurfaceType()>
<com.android.server.Watchdog: void init(android.content.Context,com.android.server.BatteryService,com.android.server.PowerManagerService,com.android.server.AlarmManagerService,com.android.server.am.ActivityManagerService)>
<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.MenuItem: int getItemId()>
<javax.imageio.ImageReader: int getTileGridXOffset(int)>
<android.hardware.Camera.Parameters: void setFocusMode(java.lang.String)>
<org.apache.harmony.awt.wtk.NativeWindow: void setState(int)>
<android.database.sqlite.SQLiteProgram: void compile(java.lang.String,boolean)>
<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>
<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>
<android.webkit.WebView: void finalize()>
<java.awt.event.HierarchyEvent: java.awt.Component getChanged()>
<java.awt.RenderingHints: boolean isEmpty()>
<com.android.server.KeyInputQueue: int getScancodeState(int,int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getPositionDescription()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getElementMaxChildren(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setPaint(java.awt.Paint)>
<javax.imageio.ImageWriter: javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<android.media.AudioManager: void startBluetoothSco()>
<com.google.android.maps.MapView: int getLongitudeSpan()>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void reset()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterSpi: void <init>()>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvx(int,int,int)>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor getCursor()>
<android.text.TextUtils.EllipsizeCallback: void ellipsized(int,int)>
<java.awt.geom.Point2D.Double: void <init>(double,double)>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String[] databaseList()>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>
<java.awt.geom.Line2D: int relativeCCW(java.awt.geom.Point2D)>
<android.provider.ContactsContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>
<org.apache.harmony.awt.wtk.NativeWindow: void setResizable(boolean)>
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<org.apache.harmony.awt.gl.image.OffscreenImage: int checkImage(java.awt.image.ImageObserver)>
<java.awt.Color: java.awt.Color darker()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>
<java.awt.Rectangle: void setSize(java.awt.Dimension)>
<android.graphics.Path: void <init>(android.graphics.Path)>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
<java.awt.event.MouseEvent: java.lang.String getMouseModifiersText(int)>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>
<java.awt.im.spi.InputMethod: boolean isCompositionEnabled()>
<android.webkit.WebSettings: void setUserAgent(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>
<java.awt.ComponentOrientation: boolean isLeftToRight()>
<android.view.Window: android.view.View getDecorView()>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>
<android.os.Debug: void startMethodTracing()>
<android.location.GpsStatus: int getTimeToFirstFix()>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>
<android.view.View: void addTouchables(java.util.ArrayList)>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>
<android.database.CursorWrapper: void deactivate()>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>
<org.apache.harmony.awt.wtk.NativeEvent: int getEventId()>
<android.graphics.Interpolator: void reset(int,int)>
<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
<java.awt.Rectangle: boolean contains(int,int)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.view.View: void playSoundEffect(int)>
<android.server.BluetoothService: java.lang.String readDockBluetoothAddress()>
<android.database.Cursor: boolean moveToFirst()>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>
<java.awt.geom.Arc2D.Double: void setAngleExtent(double)>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
<android.webkit.WebView: void setInitialScale(int)>
<android.widget.TableLayout: boolean isColumnShrinkable(int)>
<android.pim.vcard.VCardConfig: boolean shouldUseQuotedPrintable(int)>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
<android.database.CursorWrapper: byte[] getBlob(int)>
<android.telephony.gsm.SmsMessage: boolean isMWIClearMessage()>
<com.google.android.mms.pdu.RetrieveConf: byte[] getContentType()>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(short,int)>
<android.content.OperationApplicationException: void <init>(int)>
<android.gesture.Gesture: android.graphics.Path toPath()>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RatingBar: float getStepSize()>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.status.StatusBarView: void onAttachedToWindow()>
<android.text.style.AlignmentSpan.Standard: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void setGravity(int)>
<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>
<javax.microedition.khronos.opengles.GL10: void glEnable(int)>
<android.app.SearchDialog.SearchAutoComplete: void <init>(android.content.Context)>
<java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
<android.media.SoundPool: void autoResume()>
<android.media.MediaPlayer: void seekTo(int)>
<org.apache.harmony.awt.state.MenuState: java.awt.Font getFont()>
<android.os.BatteryStats.Uid: void noteAudioTurnedOnLocked()>
<org.apache.harmony.awt.wtk.GraphicsFactory: java.awt.Graphics2D getGraphics2D(android.graphics.Canvas,android.graphics.Paint)>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<java.awt.font.GlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>
<org.apache.harmony.awt.wtk.NativeIM: java.lang.String getInputMethodDisplayName(java.util.Locale,java.util.Locale)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>
<java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,byte[],int,int)>
<java.awt.geom.CubicCurve2D.Float: double getCtrlX1()>
<android.media.AudioTrack: void setState(int)>
<android.graphics.Paint: void setStrokeMiter(float)>
<android.app.ActivityGroup: void onResume()>
<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<java.awt.geom.Point2D.Float: void <init>()>
<com.google.android.util.AbstractMessageParser.Html: void trimTrailingWhitespace()>
<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>
<java.awt.image.ColorModel: int getRed(java.lang.Object)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>
<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>
<org.apache.harmony.awt.gl.MultiRectArea: boolean contains(double,double,double,double)>
<com.android.common.OperationScheduler: long getNextTimeMillis(com.android.common.OperationScheduler.Options)>
<java.awt.image.renderable.RenderableImage: java.lang.String[] getPropertyNames()>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>
<com.android.layoutlib.bridge.Bridge: com.android.layoutlib.api.ILayoutResult computeLayout(com.android.layoutlib.api.IXmlPullParser,java.lang.Object,int,int,java.lang.String,boolean,java.util.Map,java.util.Map,com.android.layoutlib.api.IProjectCallback,com.android.layoutlib.api.ILayoutLog)>
<javax.imageio.stream.FileCacheImageOutputStream: void <init>(java.io.OutputStream,java.io.File)>
<android.os.Handler: void removeMessages(int)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>
<javax.imageio.ImageReader: void processReadAborted()>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<com.google.android.mms.pdu.PduPart: byte[] getFilename()>
<com.android.layoutlib.bridge.BridgeResources: android.content.res.XmlResourceParser getLayout(int)>
<android.preference.Preference: void setTitle(int)>
<com.google.android.mms.pdu.PduParser: int skipWapValue(java.io.ByteArrayInputStream,int)>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>
<java.awt.image.CropImageFilter: void <init>(int,int,int,int)>
<java.awt.image.IndexColorModel: int getRed(int)>
<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.location.Address: void <init>(java.util.Locale)>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>
<javax.imageio.stream.ImageInputStream: void readFully(double[],int,int)>
<android.hardware.Camera.Size: void <init>(int,int)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>
<java.awt.Event: void <init>(java.lang.Object,int,java.lang.Object)>
<android.inputmethodservice.InputMethodService: void hideWindow()>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.CheckedTextView: void toggle()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: boolean equals(java.awt.font.GlyphVector)>
<java.awt.font.GlyphVector: int getLayoutFlags()>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>
<com.google.android.gles_jni.GLImpl: void glHint(int,int)>
<java.awt.BasicStroke: void <init>(float,int,int)>
<android.view.animation.CycleInterpolator: void <init>(float)>
<android.app.Activity: void finish()>
<android.app.Activity: void openOptionsMenu()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<java.awt.image.RasterOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<java.awt.Component.FlipBufferStrategy: void destroyBuffers()>
<java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>
<android.os.MessageQueue.IdleHandler: boolean queueIdle()>
<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>
<android.graphics.drawable.Drawable: void setAlpha(int)>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>
<com.google.android.mms.pdu.ReadRecInd: void setReadStatus(int)>
<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glMaterialx(int,int,int)>
<android.widget.ZoomButton: void setEnabled(boolean)>
<android.os.Debug.MemoryInfo: int getTotalPss()>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>
<java.awt.geom.Arc2D: void setAngleStart(double)>
<javax.imageio.metadata.IIOMetadata: boolean isStandardMetadataFormatSupported()>
<android.view.SurfaceHolder: void setType(int)>
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>
<android.pim.vcard.VCardInterpreterCollection: void startProperty()>
<com.android.server.status.StatusBarService.NotificationCallbacks: void onSetDisabled(int)>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>
<org.apache.harmony.awt.gl.Crossing: boolean isInsideNonZero(int)>
<android.widget.TextView: void setError(java.lang.CharSequence)>
<java.awt.image.RenderedImage: java.awt.image.Raster getData(java.awt.Rectangle)>
<org.apache.harmony.awt.gl.font.CompositeFont: int charWidth(char)>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>
<com.google.android.mms.pdu.AcknowledgeInd: void <init>(int,byte[])>
<android.content.SyncStats: void clear()>
<android.text.DynamicLayout: int getEllipsizedWidth()>
<android.view.accessibility.AccessibilityEvent: boolean isEnabled()>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>
<android.text.Layout: void draw(android.graphics.Canvas)>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,int[],int)>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>
<java.awt.image.BandedSampleModel: java.lang.Object getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>
<android.ddm.DdmHandleThread: void register()>
<android.app.ApplicationThreadProxy: void scheduleSuicide()>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>
<java.awt.geom.CubicCurve2D.Float: void setCurve(double,double,double,double,double,double,double,double)>
<android.os.HandlerThread: void <init>(java.lang.String,int)>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ProviderInfo)>
<android.app.ApplicationErrorReport.BatteryInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.View: boolean isEnabled()>
<android.text.StaticLayout: int getEllipsisStart(int)>
<android.provider.MediaStore.Audio.Albums: android.net.Uri getContentUri(java.lang.String)>
<java.awt.geom.Arc2D.Double: double getWidth()>
<java.awt.geom.CubicCurve2D.Float: void <init>()>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<android.media.RingtoneManager: int inferStreamType()>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,int[],int)>
<android.speech.RecognitionService.Callback: void readyForSpeech(android.os.Bundle)>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>
<java.beans.FeatureDescriptor: java.lang.Object getValue(java.lang.String)>
<java.awt.image.DataBufferShort: void <init>(int)>
<java.awt.Color: java.awt.Color getHSBColor(float,float,float)>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>
<android.preference.Preference: int getPersistedInt(int)>
<java.awt.RenderingHints: java.util.Collection values()>
<android.provider.Telephony.Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.server.BluetoothService.BondState: int getBondState(java.lang.String)>
<android.media.SoundPool: void setVolume(int,float,float)>
<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>
<java.awt.event.WindowAdapter: void <init>()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<android.widget.TextView: int getPaintFlags()>
<javax.imageio.stream.ImageInputStream: long length()>
<javax.imageio.ImageReader: java.util.Iterator readAll(java.util.Iterator)>
<java.awt.image.BufferedImage: java.lang.Object getProperty(java.lang.String,java.awt.image.ImageObserver)>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
<android.view.accessibility.AccessibilityEvent: int getCurrentItemIndex()>
<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.EventLogTags: android.util.EventLogTags.Description get(java.lang.String)>
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.opengl.GLES10: void glFogfv(int,float[],int)>
<android.view.View: void onFinishTemporaryDetach()>
<java.awt.image.renderable.ContextualRenderedImageFactory: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.renderable.ParameterBlock)>
<java.awt.HeadlessToolkit: void setLockingKeyState(int,boolean)>
<java.awt.GraphicsEnvironment: java.awt.GraphicsDevice getDefaultScreenDevice()>
<android.provider.ContactsContract.CommonDataKinds.Phone: int getTypeLabelResource(int)>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>
<org.apache.harmony.awt.gl.image.PngDecoderJava: org.apache.harmony.awt.gl.image.PNGData readChunks(java.io.DataInputStream)>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<java.awt.image.MultiPixelPackedSampleModel: int getSample(int,int,int,java.awt.image.DataBuffer)>
<java.awt.MenuComponent: boolean postEvent(java.awt.Event)>
<android.view.MotionEvent: int findPointerIndex(int)>
<org.apache.harmony.awt.im.InputMethodContext: int getCommittedTextLength()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<android.database.AbstractWindowedCursor: short getShort(int)>
<android.server.BluetoothService: boolean isBluetoothDock(java.lang.String)>
<android.location.Address: void clearLongitude()>
<android.renderscript.Sampler.Builder: void setMin(android.renderscript.Sampler.Value)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<java.awt.Graphics2D: void setComposite(java.awt.Composite)>
<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<android.graphics.Canvas: void <init>(int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiOn(int)>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>
<java.awt.ComponentBehavior: boolean isOpaque()>
<android.graphics.Path: void rLineTo(float,float)>
<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.WindowManagerService)>
<android.graphics.drawable.ClipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.google.android.mms.pdu.SendConf: void setTransactionId(byte[])>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.webkit.WebView: void enablePlatformNotifications()>
<android.content.SharedPreferences.Editor: boolean commit()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: javax.imageio.metadata.IIOMetadata getStreamMetadata()>
<android.util.SparseArray: void remove(int)>
<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>
<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<java.awt.geom.CubicCurve2D.Float: java.awt.geom.Point2D getCtrlP1()>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<org.apache.harmony.awt.wtk.NativeIM: void activate()>
<android.pim.ICalendar.Parameter: void <init>(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.content.SyncResult: boolean hasError()>
<java.awt.font.ImageGraphicAttribute: int hashCode()>
<android.media.SoundPool: void stop(int)>
<android.database.Cursor: java.lang.String getColumnName(int)>
<android.graphics.Bitmap: void setDensity(int)>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>
<android.ddm.DdmHandleHello: void sendWAIT(int)>
<java.awt.geom.CubicCurve2D.Double: double getY1()>
<android.preference.Preference: int getLayoutResource()>
<android.graphics.Bitmap: int getHeight()>
<javax.microedition.khronos.opengles.GL10: void glLightModelf(int,float)>
<android.widget.DialerFilter: void append(java.lang.String)>
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>
<javax.imageio.ImageReader: boolean abortRequested()>
<android.speech.RecognitionService: void onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>
<java.awt.ImageCapabilities: boolean isTrueVolatile()>
<org.apache.harmony.awt.gl.font.Glyph: int getWidth()>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.graphics.Paint: void setSubpixelText(boolean)>
<android.widget.AbsListView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<java.awt.Rectangle: double getHeight()>
<android.widget.RatingBar: int getNumStars()>
<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>
<android.graphics.Matrix: void <init>()>
<java.awt.image.WritableRaster: void setDataElements(int,int,java.awt.image.Raster)>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>
<com.android.tools.layoutlib.create.Log: void errPrintln(java.lang.String)>
<org.apache.harmony.awt.wtk.NativeIM: boolean setLocale(java.util.Locale)>
<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Format: void setMatched(boolean)>
<android.graphics.Paint: void finalize()>
<android.widget.AbsoluteLayout: void onMeasure(int,int)>
<javax.imageio.stream.ImageInputStream: void flush()>
<android.media.AudioTrack: void play()>
<android.accounts.AccountManagerFuture: boolean isCancelled()>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>
<android.database.CursorWindow: boolean putDouble(double,int,int)>
<android.drm.mobile1.DrmRights: void <init>()>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>
<android.app.ActivityManagerProxy: void goingToSleep()>
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>
<java.awt.Polygon: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>
<android.media.MediaPlayer: void prepareAsync()>
<android.pim.ICalendar.Component: java.util.Set getPropertyNames()>
<java.awt.image.Raster: java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel,java.awt.Point)>
<com.android.server.SystemBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>
<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>
<org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] getsRGBLUT(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>
<javax.imageio.stream.ImageInputStreamImpl: byte readByte()>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.MediaRecorder: void setOutputFormat(int)>
<javax.imageio.ImageReader: void addIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)>
<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue[] getEncodedStringValues(int)>
<android.accounts.AccountManagerService.AuthTokenKey: void <init>(android.accounts.Account,java.lang.String)>
<android.opengl.Matrix: void setIdentityM(float[],int)>
<android.text.style.StyleSpan: int describeContents()>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>
<android.widget.AbsSpinner: int pointToPosition(int,int)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>
<com.google.android.maps.MapView: boolean isSatellite()>
<android.widget.AutoCompleteTextView.Validator: java.lang.CharSequence fixText(java.lang.CharSequence)>
<com.android.server.SystemServer: void main(java.lang.String[])>
<com.android.fountain.FountainRS: void newTouchPosition(int,int,int)>
<java.awt.font.TextMeasurer: java.awt.font.TextLayout getLayout(int,int)>
<java.awt.image.SinglePixelPackedSampleModel: void setSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.content.SyncResult: void <init>()>
<android.media.MediaRecorder: int getMaxAmplitude()>
<com.android.server.ThrottleService: int getCliffLevel(java.lang.String,int)>
<java.awt.Graphics: void fillOval(int,int,int,int)>
<android.util.AttributeSet: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<java.awt.image.renderable.RenderContext: java.awt.Shape getAreaOfInterest()>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>
<com.google.android.mms.pdu.NotifyRespInd: void setTransactionId(byte[])>
<android.widget.TextView: void debug(int)>
<java.awt.event.ItemEvent: void <init>(java.awt.ItemSelectable,int,java.lang.Object,int)>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo beforeOffset(int)>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.net.LocalSocket: boolean isOutputShutdown()>
<android.content.DialogInterface.OnDismissListener: void onDismiss(android.content.DialogInterface)>
<android.pim.vcard.VCardUtils: java.util.List constructListFromValue(java.lang.String,boolean)>
<java.awt.Component: void list(java.io.PrintWriter,int)>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>
<com.google.android.mms.pdu.SendConf: byte[] getMessageId()>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>
<com.android.server.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>
<android.content.res.AssetManager.AssetInputStream: boolean markSupported()>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>
<android.webkit.WebView: void enablePlatformNotifications()>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>
<android.text.format.Time: int getActualMaximum(int)>
<java.awt.color.ICC_Profile: void write(java.io.OutputStream)>
<android.app.IntentService: void onCreate()>
<com.android.server.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<com.android.common.userhappiness.UserHappinessSignals: void userAcceptedImeText(android.content.Context)>
<android.opengl.GLSurfaceView: void onPause()>
<com.google.android.mms.pdu.SendReq: void setTransactionId(byte[])>
<android.graphics.Camera: void <init>()>
<android.app.Dialog: void onCreate(android.os.Bundle)>
<com.google.android.mms.pdu.ReadOrigInd: int getReadStatus()>
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>
<com.android.commands.input.Input: void main(java.lang.String[])>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<android.pim.vcard.VCardEntry: java.lang.String getFullName()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>
<com.android.common.OperationScheduler: void setEnabledState(boolean)>
<android.os.StatFs: int getBlockCount()>
<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.os.Parcel: void setDataPosition(int)>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>
<java.awt.event.InputMethodListener: void caretPositionChanged(java.awt.event.InputMethodEvent)>
<com.google.android.mms.pdu.SendReq: void <init>(byte[],com.google.android.mms.pdu.EncodedStringValue,int,byte[])>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: void <init>(java.lang.String,java.lang.String)>
<android.os.Bundle: void putLong(java.lang.String,long)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<android.renderscript.Allocation.Adapter2D: void subData(int,int,int,int,float[])>
<com.android.server.DiskStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<java.awt.geom.Arc2D.Double: double getAngleStart()>
<com.google.android.gles_jni.GLImpl: void glColor4f(float,float,float,float)>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,java.nio.IntBuffer)>
<com.google.android.util.AbstractMessageParser.Format: boolean isHtml()>
<javax.imageio.stream.ImageInputStream: void readFully(byte[])>
<android.text.Layout: int getEllipsisCount(int)>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>
<java.awt.Font: java.lang.String getFamily(java.util.Locale)>
<android.location.Address: java.lang.String getSubLocality()>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>
<android.view.View: void setNextFocusDownId(int)>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>
<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void copyInternalFields(org.apache.harmony.awt.gl.CommonGraphics2D)>
<android.ddm.DdmHandleProfiling: void register()>
<android.text.style.ImageSpan: java.lang.String getSource()>
<com.google.android.mms.pdu.ReadRecInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
<java.awt.image.BufferedImage: int getWidth(java.awt.image.ImageObserver)>
<java.awt.image.BufferedImage: int getTileWidth()>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues)>
<android.text.style.ForegroundColorSpan: void <init>(int)>
<com.android.server.KeyInputQueue.FilterCallback: int filterEvent(com.android.server.KeyInputQueue.QueuedEvent)>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>
<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder,android.os.Bundle)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>
<android.util.AttributeSet: java.lang.String getAttributeValue(int)>
<java.awt.Font: int canDisplayUpTo(char[],int,int)>
<java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>
<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform)>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>
<android.hardware.Camera.Parameters: java.util.List getSupportedWhiteBalance()>
<android.view.animation.Animation: void start()>
<com.google.android.util.AbstractMessageParser.Part: java.util.ArrayList getTokens()>
<android.telephony.ServiceState: int describeContents()>
<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
<java.awt.geom.QuadCurve2D: boolean contains(java.awt.geom.Rectangle2D)>
<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getNativeStreamMetadataFormatName()>
<java.awt.image.Kernel: int getHeight()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillOval(int,int,int,int)>
<android.widget.AbsListView: void onTouchModeChanged(boolean)>
<java.awt.GraphicsEnvironment: boolean isHeadless()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.gesture.GestureOverlayView: void setGestureColor(int)>
<java.awt.image.DataBufferUShort: void <init>(int)>
<android.util.MonthDisplayHelper: void <init>(int,int,int)>
<java.awt.font.MultipleMaster: int getNumDesignAxes()>
<android.graphics.drawable.ScaleDrawable: boolean isStateful()>
<android.graphics.Canvas: void skew(float,float)>
<android.widget.Toast: int getXOffset()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>
<java.awt.event.InvocationEvent: long getWhen()>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>
<android.os.BadParcelableException: void <init>(java.lang.String)>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<android.widget.BaseAdapter: boolean hasStableIds()>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.server.connectivity.Tethering: int untether(java.lang.String)>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>
<com.android.server.status.StatusBarView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>
<android.preference.VolumePreference.SeekBarVolumizer: void onSaveInstanceState(android.preference.VolumePreference.VolumeStore)>
<com.android.defcontainer.DefaultContainerService: boolean copyToFile(java.io.InputStream,java.io.FileOutputStream)>
<com.android.server.am.ActivityManagerService: void collectPss(com.android.server.Watchdog.PssStats)>
<android.net.wifi.WifiManager.WifiLock: void acquire()>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>
<org.apache.harmony.awt.wtk.NativeEvent: java.awt.Point getScreenPos()>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>
<javax.imageio.spi.ImageTranscoderSpi: void <init>()>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>
<android.widget.CheckedTextView: void setPadding(int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glClearStencil(int)>
<android.content.Intent: int filterHashCode()>
<android.widget.Scroller: void <init>(android.content.Context)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.provider.Contacts.ContactMethods: java.lang.Object decodeImProtocol(java.lang.String)>
<android.view.MotionEvent: float getPressure()>
<android.text.style.LeadingMarginSpan.Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>
<android.widget.Checkable: void toggle()>
<android.sax.EndTextElementListener: void end(java.lang.String)>
<android.preference.Preference: boolean persistFloat(float)>
<java.awt.Color: int getAlpha()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>
<android.widget.Chronometer: void <init>(android.content.Context)>
<android.telephony.SmsMessage: int getStatusOnIcc()>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
<android.hardware.Camera.Parameters: int getZoom()>
<com.google.android.gles_jni.GLImpl: void glActiveTexture(int)>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>
<java.awt.geom.Line2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<java.awt.geom.QuadCurve2D: void setCurve(double[],int)>
<android.widget.TextView: int getTotalPaddingRight()>
<android.widget.Toast: void setText(int)>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>
<com.google.android.mms.pdu.PduComposer: void appendQuotedString(byte[])>
<java.awt.AWTEvent: boolean isConsumed()>
<org.apache.harmony.awt.gl.CommonGraphics2DFactory: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<android.inputmethodservice.KeyboardView: boolean isShifted()>
<java.awt.AWTKeyStroke: char getKeyChar()>
<android.service.wallpaper.WallpaperService: void onDestroy()>
<android.os.BatteryStats.Uid: java.util.Map getPackageStats()>
<android.app.Activity: void setResult(int,android.content.Intent)>
<java.awt.Component: void reshape(int,int,int,int)>
<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRights installRights(java.io.InputStream,int,java.lang.String)>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
<android.content.res.AssetManager: void close()>
<android.view.inputmethod.InputMethodManager: boolean isActive()>
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>
<android.preference.Preference: void onPrepareForRemoval()>
<android.graphics.Rect: void <init>()>
<android.app.LauncherActivity.IconResizer: void <init>()>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>
<java.awt.geom.RoundRectangle2D.Float: double getX()>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>
<android.os.Parcel: void setDataCapacity(int)>
<java.awt.Graphics2D: java.awt.RenderingHints getRenderingHints()>
<java.awt.image.renderable.RenderableImageOp: float getMinY()>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender)>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void finishInput()>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>
<android.text.SpannableStringBuilder: char charAt(int)>
<android.pim.vcard.VCardUtils: java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String)>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<org.apache.harmony.awt.gl.font.FontManager: int getStyleFromLogicalFace(java.lang.String)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
<android.speech.srec.Recognizer: void putAudio(java.io.InputStream)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: void <init>(javax.imageio.spi.ImageWriterSpi)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo,java.awt.geom.Rectangle2D,java.awt.font.TextLayout)>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>
<java.awt.AWTKeyStroke: void <init>()>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.media.MediaRecorder: void setMaxDuration(int)>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>
<android.content.pm.ConfigurationInfo: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<com.android.server.am.ActivityManagerService: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<javax.imageio.IIOParam: javax.imageio.IIOParamController getController()>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.SystemProperties getSystemProperties()>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<java.awt.font.FontRenderContext: boolean equals(java.awt.font.FontRenderContext)>
<android.view.Surface: void setPosition(int,int)>
<android.widget.RelativeLayout: void <init>(android.content.Context)>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>
<android.app.IActivityManager.WaitResult: void writeToParcel(android.os.Parcel,int)>
<java.awt.BasicStroke: int hashCode()>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<android.pim.ICalendar.Component: android.pim.ICalendar.Component getParent()>
<android.opengl.GLES10: void glEnableClientState(int)>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<com.google.android.util.AbstractMessageParser.Format: java.util.List getInfo()>
<java.awt.Rectangle: void grow(int,int)>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,int[],int)>
<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>
<javax.imageio.ImageWriteParam: float getCompressionQuality()>
<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<java.awt.Graphics: void <init>()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>
<org.apache.harmony.awt.gl.MultiRectArea: int checkValidation(java.awt.Rectangle[],boolean)>
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>
<android.os.Message: android.os.Message obtain()>
<android.hardware.Camera.OnZoomChangeListener: void onZoomChange(int,boolean,android.hardware.Camera)>
<android.view.Window.Callback: void onAttachedToWindow()>
<android.widget.PopupWindow: void <init>(android.view.View)>
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.view.View: int getVerticalScrollbarWidth()>
<android.pim.vcard.VCardUtils: java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getAttributeName(int)>
<android.opengl.GLSurfaceView: void requestRender()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>
<android.text.TextUtils.SimpleStringSplitter: java.util.Iterator iterator()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: java.awt.image.WritableRaster createWritableTranslatedChild(int,int)>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>
<javax.imageio.ImageWriter: boolean canInsertEmpty(int)>
<android.net.http.RequestQueue.ConnectionManager: boolean recycleConnection(android.net.http.Connection)>
<java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>
<java.awt.geom.RoundRectangle2D.Float: double getArcWidth()>
<java.awt.event.MouseWheelListener: void mouseWheelMoved(java.awt.event.MouseWheelEvent)>
<android.provider.Contacts.People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
<android.view.View: int getLeftPaddingOffset()>
<javax.imageio.ImageWriter: void processThumbnailComplete()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>
<android.widget.TextView: boolean onTextContextMenuItem(int)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>
<java.awt.image.BufferedImage: int getWidth()>
<java.awt.event.WindowAdapter: void windowStateChanged(java.awt.event.WindowEvent)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.awt.geom.AffineTransform: double getDeterminant()>
<com.android.common.ArrayListCursor: java.lang.String[] getColumnNames()>
<android.pim.vcard.VCardInterpreter: void endEntry()>
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)>
<android.content.ContentValues: int size()>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<javax.microedition.khronos.opengles.GL10: void glDepthRangex(int,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glFrustumf(float,float,float,float,float,float)>
<android.os.Bundle: void putShort(java.lang.String,short)>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.view.View: int getTop()>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexiOES(int,int,int,int,int)>
<org.apache.harmony.awt.gl.image.PNGData: java.awt.image.WritableRaster getRaster()>
<android.widget.CursorAdapter: long getItemId(int)>
<android.view.View: void dispatchWindowFocusChanged(boolean)>
<android.widget.Scroller: int getStartY()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsFramebufferOES(int)>
<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getStreamMetadata()>
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Rectangle,java.awt.Point,java.awt.image.WritableRaster)>
<java.awt.image.renderable.ParameterBlock: java.lang.Object clone()>
<java.awt.Event: boolean controlDown()>
<android.content.pm.Signature: void <init>(java.lang.String)>
<org.apache.harmony.awt.state.State: java.awt.Color getTextColor()>
<android.graphics.Region: void setEmpty()>
<java.awt.image.ColorModel: int[] getComponents(java.lang.Object,int[],int)>
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.app.SearchableInfo: int getHintId()>
<com.android.server.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>
<com.google.android.gles_jni.GLImpl: void glPopMatrix()>
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.apache.harmony.awt.wtk.NativeCursor: long getId()>
<com.google.android.util.AbstractMessageParser.MusicTrack: boolean isHtml()>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>
<java.awt.image.RenderedImage: java.awt.image.Raster getData()>
<java.awt.image.DataBufferInt: int[][] getBankData()>
<com.android.server.am.ActivityManagerService: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<org.apache.harmony.awt.wtk.NativeRobot: void mouseButton(int,boolean)>
<android.graphics.Paint: boolean isSubpixelText()>
<java.awt.Point: java.lang.String toString()>
<android.speech.SpeechRecognizer: void stopListening()>
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>
<com.google.android.mms.pdu.ReadOrigInd: void setDate(long)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<javax.imageio.metadata.IIOMetadata: javax.imageio.metadata.IIOMetadataNode getStandardTree()>
<android.database.AbstractCursor: boolean moveToFirst()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.os.Binder: void joinThreadPool()>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<android.os.Parcel: void writeLongArray(long[])>
<android.widget.Gallery: int computeHorizontalScrollExtent()>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>
<android.view.View: void onDetachedFromWindow()>
<javax.microedition.khronos.opengles.GL11: void glDrawElements(int,int,int,int)>
<android.appwidget.AppWidgetHost: void startListening()>
<android.graphics.Matrix: boolean preScale(float,float)>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>
<android.widget.RemoteViews: void removeAllViews(int)>
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver,android.database.CursorWindow)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,int[],int)>
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>
<android.inputmethodservice.Keyboard: int getKeyWidth()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues)>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>
<java.awt.font.GlyphVector: boolean equals(java.awt.font.GlyphVector)>
<android.content.pm.PackageParser.Activity: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ActivityInfo)>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>
<android.security.Sha1MessageDigest: void update(byte[])>
<javax.imageio.spi.ImageReaderSpi: boolean canDecodeInput(java.lang.Object)>
<android.location.LocationProvider: boolean supportsBearing()>
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<javax.microedition.khronos.opengles.GL11: boolean glIsTexture(int)>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>
<java.awt.image.VolatileImage: java.awt.ImageCapabilities getCapabilities()>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<javax.imageio.ImageIO: java.util.Iterator getImageReadersByMIMEType(java.lang.String)>
<com.android.layoutlib.bridge.FontLoader: java.awt.Font getFont(java.lang.String,int[])>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>
<java.awt.image.DataBufferFloat: void setElemDouble(int,double)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>
<android.os.Debug.MemoryInfo: int describeContents()>
<android.os.BatteryStats.Uid.Pkg.Serv: int getLaunches(int)>
<android.util.MonthDisplayHelper: int getYear()>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>
<android.graphics.Matrix: void setSinCos(float,float)>
<java.awt.geom.Rectangle2D: void union(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>
<com.android.server.status.StatusBarService: void toggle()>
<android.os.Binder: void finalize()>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.Service: void onCreate()>
<java.awt.geom.QuadCurve2D: void subdivide(java.awt.geom.QuadCurve2D,java.awt.geom.QuadCurve2D,java.awt.geom.QuadCurve2D)>
<android.database.MatrixCursor: void <init>(java.lang.String[])>
<android.content.PeriodicSync: boolean equals(java.lang.Object)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>
<org.apache.harmony.awt.gl.image.DecodingImageSource: void addConsumer(java.awt.image.ImageConsumer)>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<android.speech.RecognitionListener: void onReadyForSpeech(android.os.Bundle)>
<org.apache.harmony.awt.gl.color.LUTColorConverter: byte[] getFromsRGBto8lRGB_LUT()>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<org.apache.harmony.awt.gl.font.CompositeFont: org.apache.harmony.awt.gl.font.Glyph getDefaultGlyph()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeUp()>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>
<android.widget.DialerFilter: boolean onKeyDown(int,android.view.KeyEvent)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>
<android.widget.TextView: int getGravity()>
<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>
<com.android.server.KeyInputQueue: int getDeviceClasses(int)>
<java.awt.event.WindowListener: void windowActivated(java.awt.event.WindowEvent)>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,float[],int)>
<org.apache.harmony.awt.gl.Surface: void addValidCache(java.lang.Object)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String[] getAttributeEnumerations(java.lang.String,java.lang.String)>
<android.os.Parcel: android.os.Parcel obtain(int)>
<android.view.animation.Animation: void setStartTime(long)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<javax.imageio.IIOImage: int getNumThumbnails()>
<java.awt.geom.Rectangle2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>
<java.awt.Rectangle: java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)>
<android.view.MotionEvent: long getEventTime()>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>
<java.awt.Graphics2D: void translate(int,int)>
<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
<java.awt.image.SampleModel: java.lang.Object getDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: android.graphics.Path getAndroidOutline()>
<com.android.server.am.BatteryStatsService: void noteStopSensor(int,int)>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>
<android.os.Process: void setThreadPriority(int,int)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>
<android.text.TextUtils.SimpleStringSplitter: boolean hasNext()>
<java.awt.image.DataBufferInt: void <init>(int,int)>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>
<android.view.View: java.util.ArrayList getTouchables()>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>
<android.pim.vcard.VCardEntryCommitter: void onStart()>
<java.awt.geom.Arc2D: void setFrame(double,double,double,double)>
<java.awt.geom.Line2D: double getX1()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>()>
<java.awt.Component: void processHierarchyBoundsEvent(java.awt.event.HierarchyEvent)>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.android.layoutlib.bridge.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
<java.awt.Font: java.awt.Font getFont(java.lang.String,java.awt.Font)>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.os.Parcel: void writeDouble(double)>
<android.view.KeyEvent: int getDeviceId()>
<javax.imageio.metadata.IIOMetadataFormatImpl: boolean isAttributeRequired(java.lang.String,java.lang.String)>
<com.google.android.mms.pdu.SendReq: byte[] getMessageClass()>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>
<org.apache.harmony.awt.wtk.NativeWindow: long getId()>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.telephony.ServiceState: void <init>()>
<com.google.android.mms.pdu.DeliveryInd: void setMessageId(byte[])>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,byte[],int,int,java.util.Hashtable)>
<com.google.android.gles_jni.GLImpl: boolean glIsTexture(int)>
<android.app.Activity: void closeOptionsMenu()>
<org.apache.harmony.awt.wtk.NativeIM: java.lang.Object getControlObject()>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.pim.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(com.android.internal.telephony.CallerInfo,int,android.pim.ContactsAsyncHelper.OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,android.net.Uri,int)>
<android.server.BluetoothService: void initAfterRegistration()>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>
<java.awt.DisplayMode: int getBitDepth()>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>
<javax.imageio.stream.ImageInputStream: long readLong()>
<org.apache.harmony.awt.wtk.NativeEvent: long getWindowId()>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.preference.DialogPreference: void setDialogIcon(int)>
<java.awt.image.SampleModel: double[] getSamples(int,int,int,int,int,double[],java.awt.image.DataBuffer)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindTexture(int,int)>
<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.opengl.GLES10: void glClientActiveTexture(int)>
<android.widget.QuickContactBadge: void assignContactUri(android.net.Uri)>
<com.android.server.VibratorService: void vibrate(long,android.os.IBinder)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String[] getAttributeEnumerations(java.lang.String,java.lang.String)>
<com.android.providers.settings.SettingsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.view.MenuItem: boolean isVisible()>
<android.opengl.GLES20: void glPolygonOffset(float,float)>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>
<android.webkit.WebView: void resumeTimers()>
<com.android.server.am.ActivityManagerService: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>
<android.pim.EventRecurrence: int calendarDay2Day(int)>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>
<android.database.CursorWindow: boolean setNumColumns(int)>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>
<android.pim.vcard.VCardComposer: void <init>(android.content.Context,int)>
<javax.imageio.ImageWriteParam: int getTileWidth()>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalHeight()>
<android.view.WindowManagerPolicy.WindowState: boolean hasDrawnLw()>
<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String getFileName()>
<org.apache.harmony.awt.wtk.NativeEvent: long getTime()>
<org.apache.harmony.awt.gl.color.ColorConverter: void translateColor(org.apache.harmony.awt.gl.color.ICC_Transform,java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawString(java.lang.String,float,float)>
<javax.imageio.metadata.IIOMetadataNode: void setAttribute(java.lang.String,java.lang.String)>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.image.DataBufferInt: int getElem(int,int)>
<java.awt.geom.Line2D: boolean linesIntersect(double,double,double,double,double,double,double,double)>
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>
<com.android.server.status.DateView: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.geom.CubicCurve2D: java.awt.Rectangle getBounds()>
<android.graphics.Matrix: void setSkew(float,float,float,float)>
<android.pim.RecurrenceSet: boolean populateContentValues(android.pim.ICalendar.Component,android.content.ContentValues)>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>
<javax.imageio.stream.ImageInputStream: void flushBefore(long)>
<java.awt.Event: void translate(int,int)>
<android.location.Address: java.lang.String toString()>
<java.awt.font.TransformAttribute: java.awt.geom.AffineTransform getTransform()>
<android.server.BluetoothService.BondState: boolean hasAutoPairingFailed(java.lang.String)>
<android.app.Instrumentation: android.content.Context getTargetContext()>
<java.awt.image.ConvolveOp: int getEdgeCondition()>
<android.view.animation.AnticipateInterpolator: void <init>()>
<com.android.server.am.BatteryStatsService: void noteStartGps(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>
<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: java.awt.image.RenderedImage getRenImage()>
<javax.imageio.metadata.IIOMetadataFormat: int getAttributeDataType(java.lang.String,java.lang.String)>
<android.view.ViewGroup: boolean hasFocusable()>
<java.awt.image.DataBufferDouble: void <init>(double[],int)>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterSpi: java.lang.String getDescription(java.util.Locale)>
<javax.microedition.khronos.opengles.GL10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<java.awt.Adjustable: int getMaximum()>
<android.database.BulkCursorProxy: boolean getWantsAllOnMoveCalls()>
<android.util.SparseBooleanArray: void <init>()>
<android.widget.ListView: void <init>(android.content.Context)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getNumGlyphs()>
<com.android.server.ClipboardService: void setClipboardText(java.lang.CharSequence)>
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue copy(com.google.android.mms.pdu.EncodedStringValue)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>
<java.awt.image.BufferedImage: int getRGB(int,int)>
<android.text.format.Time: long normalize(boolean)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: void setInput(java.lang.Object,boolean,boolean)>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>
<android.telephony.ServiceState: void setStateOff()>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<javax.imageio.stream.ImageInputStream: int readUnsignedByte()>
<java.awt.FontMetrics: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.Graphics)>
<javax.imageio.ImageReader: void addIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.server.am.BatteryStatsService: void noteBluetoothOff()>
<android.text.Spanned: int getSpanFlags(java.lang.Object)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.webkit.CacheManager: android.webkit.CacheManager.CacheResult getCacheFile(java.lang.String,java.util.Map)>
<javax.imageio.stream.FileCacheImageInputStream: boolean isCachedMemory()>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>
<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>
<java.awt.Component.FlipBufferStrategy: void show()>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.server.NetStatService: long getMobileTxPackets()>
<android.widget.QuickContactBadge: void <init>(android.content.Context)>
<java.awt.ComponentBehavior: void removeNotify()>
<java.awt.geom.Arc2D: void setAngleExtent(double)>
<java.awt.image.ColorModel: float[] getNormalizedComponents(java.lang.Object,float[],int)>
<java.awt.geom.AffineTransform: void transform(java.awt.geom.Point2D[],int,java.awt.geom.Point2D[],int,int)>
<android.drm.mobile1.DrmRawContent: java.io.InputStream getContentInputStream(android.drm.mobile1.DrmRights)>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.widget.TextView: void onBeginBatchEdit()>
<java.awt.event.InputMethodEvent: java.text.AttributedCharacterIterator getText()>
<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.content.res.Resources: void finishPreloading()>
<android.widget.DatePicker: int getYear()>
<android.server.BluetoothService.BondState: void setBondState(java.lang.String,int,int)>
<javax.imageio.stream.ImageInputStream: long getFlushedPosition()>
<java.awt.geom.AffineTransform: void deltaTransform(double[],int,double[],int,int)>
<org.apache.harmony.awt.gl.Surface: void finalize()>
<android.opengl.GLES10: void glPointSize(float)>
<android.graphics.Paint: void setTextSize(float)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbum()>
<com.android.fountain.FountainView: void <init>(android.content.Context)>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void <init>(int,int)>
<android.media.AudioTrack: int getStreamType()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,int[],int)>
<com.android.server.Watchdog.Monitor: void monitor()>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>
<java.awt.event.MouseWheelEvent: int getScrollAmount()>
<com.google.android.util.SmileyParser: java.lang.CharSequence getSpannableString(android.content.Context)>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.gl.image.ByteArrayDecodingImageSource: boolean checkConnection()>
<android.content.pm.ConfigurationInfo: int describeContents()>
<java.awt.image.BandedSampleModel: void setSample(int,int,int,int,java.awt.image.DataBuffer)>
<javax.imageio.spi.IIOServiceProvider: java.lang.String getVendorName()>
<android.provider.Settings.System: android.net.Uri getUriFor(java.lang.String)>
<android.net.Uri.Builder: java.lang.String toString()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int charWidth(int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.google.android.mms.pdu.PduPart: byte[] getContentLocation()>
<javax.imageio.spi.IIORegistry: javax.imageio.spi.IIORegistry getDefaultInstance()>
<android.graphics.Matrix: boolean isIdentity()>
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>
<java.awt.Component: java.awt.Rectangle getBounds(java.awt.Rectangle)>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>
<android.text.LoginFilter.PasswordFilterGMail: boolean isAllowed(char)>
<android.database.CursorWrapper: boolean moveToFirst()>
<android.graphics.Picture: void <init>(android.graphics.Picture)>
<android.os.ParcelFileDescriptor: long getStatSize()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,int,int,java.awt.font.FontRenderContext)>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>
<javax.imageio.stream.ImageInputStreamImpl: int read(byte[])>
<javax.imageio.spi.ImageWriterSpi: boolean isFormatLossless()>
<android.telephony.gsm.SmsMessage: byte[] getPdu()>
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>
<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>
<android.database.sqlite.SQLiteProgram: void native_bind_string(int,java.lang.String)>
<android.view.View: void scrollTo(int,int)>
<java.awt.event.InvocationEvent: java.lang.Throwable getThrowable()>
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>
<android.view.Surface: void setMatrix(float,float,float,float)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>
<com.google.android.mms.pdu.SendConf: void setResponseStatus(int)>
<java.awt.font.GraphicAttribute: float getAdvance()>
<android.os.ParcelFormatException: void <init>()>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.String,boolean)>
<java.awt.image.ImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>
<android.graphics.Region: boolean set(int,int,int,int)>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>
<java.awt.image.renderable.RenderableImageOp: float getMinX()>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.os.PowerManager.WakeLock: void acquire()>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>
<java.awt.geom.AffineTransform: void setToTranslation(double,double)>
<android.graphics.Path: void toggleInverseFillType()>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.content.res.Configuration: void setToDefaults()>
<android.app.Activity: android.app.Application getApplication()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onPress(int)>
<android.widget.AbsListView: void setStackFromBottom(boolean)>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>
<android.graphics.Paint: void setFilterBitmap(boolean)>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>
<android.provider.Settings.System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<android.webkit.WebView: boolean canGoBackOrForward(int)>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: int getGlyphCode(int)>
<android.os.ServiceManagerProxy: void <init>(android.os.IBinder)>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>
<com.google.android.gles_jni.GLImpl: void glNormal3f(float,float,float)>
<android.app.FullBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>
<android.preference.Preference: android.content.Intent getIntent()>
<com.android.server.status.StatusBarService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<org.apache.harmony.awt.wtk.NativeEventQueue: void dispatchEvent()>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: javax.imageio.ImageReader createReaderInstance(java.lang.Object)>
<android.text.BoringLayout: int getParagraphDirection(int)>
<java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<android.opengl.GLES10: void glFinish()>
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>
<com.google.android.mms.pdu.PduBody: int getPartIndex(com.google.android.mms.pdu.PduPart)>
<android.preference.Preference: boolean isPersistent()>
<org.apache.harmony.awt.wtk.NativeIM: void reconvert()>
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<org.apache.harmony.awt.wtk.Synchronizer: void setEnvironment(org.apache.harmony.awt.wtk.WTK,java.lang.Thread)>
<android.os.MemoryFile: boolean isPurgingAllowed()>
<java.awt.image.PixelInterleavedSampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<android.text.InputFilter.AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.webkit.WebView: void clearMatches()>
<android.renderscript.Script.Invokable: void execute()>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>
<org.apache.harmony.awt.state.MenuState: int getSelectedItemIndex()>
<android.text.method.ReplacementTransformationMethod: char[] getOriginal()>
<org.apache.harmony.x.imageio.spi.FileIISSpi: java.lang.String getDescription(java.util.Locale)>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.Looper)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.Base64InputStream: void reset()>
<android.gesture.GesturePoint: void <init>(float,float,long)>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>
<android.net.http.SslError: java.lang.String toString()>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>
<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>
<android.webkit.GeolocationPermissions: void clearAll()>
<android.opengl.GLES10: void glPointSizex(int)>
<android.graphics.Paint: boolean isSubpixelText()>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.preference.Preference: void setPersistent(boolean)>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>
<javax.imageio.event.IIOWriteProgressListener: void imageComplete(javax.imageio.ImageWriter)>
<android.graphics.drawable.BitmapDrawable: int getGravity()>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,java.lang.CharSequence,int)>
<com.android.server.am.UsageStatsService: void noteLaunchTime(android.content.ComponentName,int)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.geom.Line2D.Float: java.awt.geom.Point2D getP1()>
<java.awt.geom.Rectangle2D.Double: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>
<javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>
<android.widget.ZoomButtonsController: void setVisible(boolean)>
<android.os.Parcel: void writeByteArray(byte[],int,int)>
<android.widget.Gallery: void setSpacing(int)>
<org.apache.harmony.awt.wtk.NativeIM: void removeNotify()>
<org.apache.harmony.x.imageio.spi.OutputStreamIOSSpi: void <init>()>
<java.awt.event.ContainerEvent: java.awt.Component getChild()>
<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>
<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>
<android.location.Location: double getAltitude()>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getExternalFilesDir(java.lang.String)>
<android.net.LocalSocket: boolean isBound()>
<javax.imageio.stream.ImageInputStreamImpl: void <init>()>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.media.AudioTrack: int write(byte[],int,int)>
<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: float getAttributeFloatValue(int,float)>
<javax.imageio.metadata.IIOMetadataNode: void removeAttributeNS(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>
<org.apache.harmony.awt.gl.font.AndroidFont: java.lang.String getFamily(java.util.Locale)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>
<java.awt.image.SampleModel: void setPixel(int,int,float[],java.awt.image.DataBuffer)>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<java.awt.image.SampleModel: void setDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)>
<javax.imageio.stream.MemoryCacheImageInputStream: boolean isCached()>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.TypedArray obtainStyledAttributes(int[])>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
<com.android.layoutlib.bridge.BridgeResources: java.lang.String getResourceName(int)>
<java.awt.event.WindowAdapter: void windowActivated(java.awt.event.WindowEvent)>
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>
<android.content.Intent: android.content.Intent setFlags(int)>
<java.awt.im.spi.InputMethod: void removeNotify()>
<android.preference.DialogPreference: int getDialogLayoutResource()>
<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.hardware.Camera.Parameters: int getExposureCompensation()>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>
<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>
<java.awt.geom.Rectangle2D.Double: int outcode(double,double)>
<android.webkit.WebView: void goForward()>
<android.speech.RecognitionListener: void onBufferReceived(byte[])>
<android.widget.AbsSeekBar: void setMax(int)>
<android.provider.SyncStateContract.Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<com.android.layoutlib.bridge.BridgeTypedArray: java.lang.CharSequence getText(int)>
<android.content.pm.PackageParser.Provider: java.lang.String toString()>
<java.awt.image.PackedColorModel: boolean isCompatibleSampleModel(java.awt.image.SampleModel)>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>
<com.android.layoutlib.bridge.BridgeResources: float getDimension(int)>
<android.database.sqlite.SQLiteProgram: void native_bind_long(int,long)>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>
<java.awt.image.DirectColorModel: int getBlue(java.lang.Object)>
<android.os.Debug: int getBinderSentTransactions()>
<android.view.VelocityTracker: float getXVelocity()>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.net.Credentials: int getPid()>
<java.awt.geom.IllegalPathStateException: void <init>()>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>
<com.google.android.util.AbstractMessageParser.Photo: java.util.List getInfo()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserURL(java.lang.String)>
<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>
<android.content.IntentFilter: int countDataSchemes()>
<android.pim.vcard.exception.VCardInvalidCommentLineException: void <init>(java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.database.BulkCursorProxy: boolean updateRows(java.util.Map)>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getStyle()>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>
<com.android.server.KeyInputQueue: android.view.KeyEvent newKeyEvent(com.android.server.InputDevice,long,long,boolean,int,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>
<com.android.server.am.ActivityManagerService: void setPersistent(android.os.IBinder,boolean)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaRecorder: void setVideoEncoder(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<com.android.server.ThrottleService: long getPeriodStartTime(java.lang.String)>
<javax.imageio.spi.ImageWriterSpi: void <init>()>
<android.graphics.Paint: void setAntiAlias(boolean)>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<javax.imageio.stream.ImageInputStream: void setByteOrder(java.nio.ByteOrder)>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>
<java.awt.image.SampleModel: int getNumDataElements()>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>
<org.apache.harmony.awt.ReadOnlyIterator: void remove()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.view.View: android.view.ViewParent getParent()>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>
<org.apache.harmony.awt.wtk.NativeWindow: void setEnabled(boolean)>
<android.view.Window: int getLocalFeatures()>
<java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvi(int,int,int)>
<java.awt.geom.Ellipse2D.Float: void setFrame(double,double,double,double)>
<java.awt.image.DataBufferFloat: void <init>(int)>
<javax.imageio.ImageWriteParam: void setTilingMode(int)>
<android.app.ActivityManagerProxy: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,boolean)>
<android.net.NetworkInfo: boolean isConnected()>
<java.awt.Toolkit: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getName()>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setOptimizeHuffmanTables(boolean)>
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>
<java.awt.GraphicsEnvironment: java.awt.Rectangle getMaximumWindowBounds()>
<android.content.Intent: int fillIn(android.content.Intent,int)>
<android.graphics.Paint: void setFlags(int)>
<java.awt.geom.CubicCurve2D: double getY1()>
<android.provider.Contacts.ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
<java.awt.event.FocusEvent: void <init>(java.awt.Component,int,boolean)>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withExpectedCount(int)>
<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRights queryRights(android.drm.mobile1.DrmRawContent)>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getSize()>
<android.app.ActivityManagerProxy: void finishOtherInstances(android.os.IBinder,android.content.ComponentName)>
<java.awt.image.BufferedImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<javax.imageio.event.IIOReadUpdateListener: void thumbnailUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int[])>
<javax.imageio.stream.MemoryCacheImageInputStream: int read(byte[],int,int)>
<android.util.MonthDisplayHelper: int getDayAt(int,int)>
<android.widget.Gallery: void setGravity(int)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFrameRates()>
<org.apache.harmony.awt.gl.MultiRectArea.RectCash: void <init>()>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: boolean isPlatformFile()>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>
<android.graphics.Paint: void setStrokeWidth(float)>
<android.pim.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List)>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>
<android.text.format.Time: int getWeekNumber()>
<android.view.View: void onWindowFocusChanged(boolean)>
<java.awt.Graphics: void fillPolygon(int[],int[],int)>
<android.text.style.BulletSpan: int describeContents()>
<android.os.Parcel: void writeIntArray(int[])>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>
<java.awt.geom.Line2D.Double: void <init>()>
<java.awt.geom.QuadCurve2D: java.awt.geom.Point2D getCtrlPt()>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: void visitFormalTypeParameter(java.lang.String)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet(java.lang.Object[])>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.media.FaceDetector: void <init>(int,int,int)>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getName()>
<java.awt.event.AdjustmentEvent: void <init>(java.awt.Adjustable,int,int,int,boolean)>
<java.awt.im.spi.InputMethodContext: void dispatchInputMethodEvent(int,java.text.AttributedCharacterIterator,int,java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>
<java.awt.event.HierarchyBoundsAdapter: void <init>()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>
<android.database.AbstractWindowedCursor: boolean isLong(int)>
<org.apache.harmony.awt.state.MenuItemState: void setItemBounds(int,int,int,int)>
<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>
<android.app.ActivityThread.PackageInfo: java.lang.String getResDir()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(char)>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>
<android.widget.RemoteViews: int getLayoutId()>
<java.awt.image.Kernel: int getXOrigin()>
<javax.microedition.khronos.opengles.GL10: void glRotatef(float,float,float,float)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void <init>(org.objectweb.asm.MethodVisitor)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getPrefixedURL(boolean,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.Font: int canDisplayUpTo(java.text.CharacterIterator,int,int)>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>
<android.pim.vcard.VCardUtils: boolean containsOnlyAlphaDigitHyphen(java.util.Collection)>
<android.text.style.RasterizerSpan: void <init>(android.graphics.Rasterizer)>
<com.android.rs.image.ImageProcessingActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<javax.imageio.stream.MemoryCacheImageInputStream: void flushBefore(long)>
<javax.imageio.ImageReadParam: int[] getDestinationBands()>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>
<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>
<java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int getNumGlyphs()>
<javax.imageio.stream.ImageInputStreamImpl: int getBitOffset()>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,int,int,android.content.Intent)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<android.widget.VideoView: void <init>(android.content.Context)>
<org.apache.harmony.awt.wtk.NativeWindow: java.awt.Insets getInsets()>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>
<java.awt.event.MouseEvent: int getClickCount()>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<javax.imageio.ImageReader: int getTileGridYOffset(int)>
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int)>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>
<android.graphics.drawable.ScaleDrawable: boolean onStateChange(int[])>
<android.os.BatteryStats.Uid.Proc: long getForegroundTime(int)>
<android.speech.srec.MicrophoneInputStream: int read(byte[],int,int)>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.widget.ProgressBar: void postInvalidate()>
<android.view.View: void offsetTopAndBottom(int)>
<javax.microedition.khronos.opengles.GL11: void glBufferData(int,int,java.nio.Buffer,int)>
<com.google.android.gles_jni.GLImpl: void glLineWidth(float)>
<java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>
<android.preference.VolumePreference.SeekBarVolumizer: void changeVolumeBy(int)>
<android.os.StatFs: void <init>(java.lang.String)>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(java.lang.String)>
<javax.imageio.ImageWriteParam: boolean canOffsetTiles()>
<android.hardware.Camera.Parameters: void setGpsTimestamp(long)>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,int[],int)>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>
<android.webkit.WebView: void stopLoading()>
<java.awt.Cursor: java.lang.String toString()>
<java.awt.image.ComponentColorModel: int getGreen(int)>
<android.graphics.Paint: void setARGB(int,int,int,int)>
<android.graphics.drawable.Drawable: void clearColorFilter()>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,int[],int)>
<android.net.http.EventHandler: void endData()>
<android.ddm.DdmHandleAppName: void connected()>
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>
<java.awt.geom.Area: boolean intersects(double,double,double,double)>
<android.widget.TimePicker: int getBaseline()>
<android.widget.DialerFilter: java.lang.CharSequence getDigits()>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.Object getUserObject()>
<java.awt.Rectangle: java.awt.Dimension getSize()>
<android.view.animation.Animation: void setDuration(long)>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>
<android.view.MotionEvent: long getHistoricalEventTime(int)>
<android.media.SoundPool: void release()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<android.text.StaticLayout: int getTopPadding()>
<android.database.CursorWindow: void <init>(boolean)>
<android.opengl.GLES20: void glLinkProgram(int)>
<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)>
<com.google.android.util.AbstractMessageParser.TrieNode: void addToTrie(com.google.android.util.AbstractMessageParser.TrieNode,java.lang.String,java.lang.String)>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void <init>(java.lang.String,java.awt.font.FontRenderContext,java.awt.Font,int)>
<android.graphics.Paint: float measureText(java.lang.String)>
<android.text.method.MultiTapKeyListener: int getInputType()>
<java.awt.image.PixelGrabber: void setColorModel(java.awt.image.ColorModel)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node cloneNode(boolean)>
<java.awt.geom.PathIterator: boolean isDone()>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>
<android.widget.AbsSpinner: void setSelection(int)>
<java.awt.Rectangle: void <init>(java.awt.Point)>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus.NmeaListener)>
<java.awt.geom.Line2D: boolean intersectsLine(java.awt.geom.Line2D)>
<com.android.tools.layoutlib.create.Log: void debug(java.lang.String,java.lang.Object[])>
<android.graphics.drawable.AnimationDrawable: void start()>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>
<javax.imageio.ImageIO: javax.imageio.ImageWriter getImageWriter(javax.imageio.ImageReader)>
<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<android.database.AbstractCursor: boolean onMove(int,int)>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>
<com.google.android.util.AbstractMessageParser.Link: void <init>(java.lang.String,java.lang.String)>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<com.android.layoutlib.bridge.LayoutResult: com.android.layoutlib.api.ILayoutResult.ILayoutViewInfo getRootView()>
<android.text.style.URLSpan: int getSpanTypeId()>
<java.awt.Component: java.awt.event.MouseWheelListener[] getMouseWheelListeners()>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: int[] getGlyphCodes(int,int,int[])>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<com.google.android.mms.ContentType: boolean isSupportedType(java.lang.String)>
<android.content.res.Resources: android.content.res.Resources.Theme newTheme()>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<java.awt.font.TextLayout: void draw(java.awt.Graphics2D,float,float)>
<android.widget.ExpandableListAdapter: boolean areAllItemsEnabled()>
<android.text.Layout: float getSpacingAdd()>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>
<android.opengl.GLES20: void glEnable(int)>
<android.provider.MediaStore.Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.graphics.Path: void incReserve(int)>
<java.awt.image.SinglePixelPackedSampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.common.OperationScheduler: void onPermanentError()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexParameterf(int,int,float)>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>
<android.media.AudioManager: void setStreamSolo(int,boolean)>
<android.server.BluetoothService.BondState: int getAttempt(java.lang.String)>
<java.awt.BasicStroke: int getEndCap()>
<android.location.Address: void setAdminArea(java.lang.String)>
<org.apache.harmony.awt.gl.font.AndroidLineMetrics: void <init>(org.apache.harmony.awt.gl.font.AndroidFont,java.awt.font.FontRenderContext,java.lang.String)>
<android.preference.VolumePreference.SeekBarVolumizer: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.content.Intent: java.lang.String getScheme()>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>
<com.android.common.ArrayListCursor: long getLong(int)>
<java.awt.Component: java.awt.Image createImage(int,int)>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.backup.BackupAgent: void <init>()>
<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedReadMethod()>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>
<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>
<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>
<java.awt.AWTKeyStroke: java.lang.String toString()>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>
<java.awt.image.DataBufferDouble: void setElemFloat(int,float)>
<android.database.AbstractCursor: void <init>()>
<java.awt.image.IndexColorModel: boolean isCompatibleSampleModel(java.awt.image.SampleModel)>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
<java.awt.image.renderable.RenderableImageOp: float getHeight()>
<android.text.DynamicLayout: int getEllipsisCount(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<android.speech.srec.Recognizer: void <init>(java.lang.String)>
<java.awt.Toolkit: java.awt.Image createImage(java.lang.String)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<javax.imageio.ImageReadParam: int getSourceMinProgressivePass()>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<android.view.View: android.view.View getRootView()>
<android.preference.Preference: void notifyHierarchyChanged()>
<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<com.android.tools.layoutlib.create.AsmGenerator: java.util.Set getClassesNotRenamed()>
<org.apache.harmony.awt.wtk.NativeRobot: java.awt.image.BufferedImage createScreenCapture(java.awt.Rectangle)>
<java.awt.image.Raster: int getNumDataElements()>
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>
<javax.microedition.khronos.opengles.GL10: void glOrthox(int,int,int,int,int,int)>
<java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)>
<android.graphics.drawable.Animatable: void stop()>
<com.android.layoutlib.bridge.Bridge: com.android.layoutlib.api.ILayoutResult computeLayout(com.android.layoutlib.api.IXmlPullParser,java.lang.Object,int,int,java.lang.String,java.util.Map,java.util.Map,com.android.layoutlib.api.IProjectCallback,com.android.layoutlib.api.ILayoutLog)>
<android.content.BroadcastReceiver: int getResultCode()>
<android.text.Spanned: int getSpanStart(java.lang.Object)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>
<android.pim.vcard.VCardComposer: boolean isAfterLast()>
<android.widget.CompoundButton: void <init>(android.content.Context)>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextRightHit(java.awt.font.TextHitInfo)>
<org.apache.harmony.awt.wtk.NativeEventQueue: boolean isEmpty()>
<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<org.apache.harmony.awt.gl.font.FontProperty: java.lang.String getName()>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>
<java.awt.HeadlessToolkit: boolean isFrameStateSupported(int)>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>
<java.awt.Graphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>
<java.awt.image.Raster: int getNumBands()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>
<android.view.MenuItem: android.content.Intent getIntent()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.server.am.ActivityManagerService: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>
<java.awt.GraphicsDevice: java.awt.DisplayMode getDisplayMode()>
<android.hardware.Camera.Parameters: float getFocalLength()>
<java.awt.geom.Ellipse2D.Float: double getHeight()>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.net.wifi.WifiManager: boolean startScan()>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: void <init>(java.lang.String,java.lang.Object,int,int,int,int)>
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>
<java.awt.geom.GeneralPath: void setWindingRule(int)>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName)>
<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>
<android.graphics.Bitmap: boolean isMutable()>
<android.app.NotificationManager: void notify(int,android.app.Notification)>
<android.view.MotionEvent: float getXPrecision()>
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxOES(int,int,int,int,int)>
<org.apache.harmony.awt.gl.Surface: int getType(java.awt.image.ColorModel,java.awt.image.WritableRaster)>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>
<org.apache.harmony.awt.gl.Crossing: int intersectLine(double,double,double,double,double,double,double,double)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void revokeSelf()>
<android.graphics.Xfermode: void finalize()>
<java.awt.Graphics: java.awt.Color getColor()>
<android.graphics.RectF: void <init>()>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.graphics.Rect: void union(android.graphics.Rect)>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>
<java.awt.Adjustable: void setVisibleAmount(int)>
<java.awt.geom.Arc2D: void setAngles(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.drm.mobile1.DrmRawContent: java.lang.String getRightsAddress()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(int)>
<java.beans.PropertyEditorSupport: void <init>()>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<android.graphics.Matrix: void setSinCos(float,float)>
<org.apache.harmony.awt.gl.ImageSurface: void validate()>
<com.android.tools.layoutlib.create.OverrideMethod: void invokeV(java.lang.String,boolean,java.lang.Object)>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>
<com.android.layoutlib.bridge.BridgeResources: int getInteger(int)>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>
<com.android.server.ThrottleService: java.lang.String getHelpUri()>
<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[])>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>
<java.awt.event.InputEvent: int getModifiersEx()>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,int[],int)>
<android.widget.CursorTreeAdapter: void onGroupCollapsed(int)>
<android.os.Parcel: java.io.Serializable readSerializable()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>
<android.content.ContentProvider: void setWritePermission(java.lang.String)>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.common.OperationScheduler: long getLastSuccessTimeMillis()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>
<android.opengl.GLES20: void glCullFace(int)>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>
<android.view.Window: void setChildInt(int,int)>
<com.android.server.PackageManagerBackupAgent: com.android.server.PackageManagerBackupAgent.Metadata getRestoredMetadata(java.lang.String)>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.google.android.mms.pdu.EncodedStringValue: byte[] getTextString()>
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String)>
<android.telephony.SmsMessage: byte[] getPdu()>
<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.net.wifi.WifiManager: boolean reassociate()>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitGL()>
<java.awt.font.GlyphVector: int getGlyphCode(int)>
<java.awt.image.DataBufferDouble: double getElemDouble(int)>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<com.google.android.gles_jni.GLImpl: java.lang.String glGetString(int)>
<android.database.AbstractCursor: void onChange(boolean)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addAttribute(java.lang.String,java.lang.String,int,boolean,int,int)>
<android.view.Window: void <init>(android.content.Context)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int)>
<java.awt.Toolkit: java.awt.EventQueue getSystemEventQueue()>
<javax.imageio.spi.ServiceRegistry: void deregisterAll()>
<android.text.style.AlignmentSpan.Standard: void <init>(android.text.Layout.Alignment)>
<com.google.android.mms.pdu.NotificationInd: void setMessageSize(long)>
<java.awt.Component: boolean isOpaque()>
<com.android.server.NetStatService: long getMobileRxPackets()>
<android.os.Parcel: boolean hasFileDescriptors()>
<java.awt.Component: java.awt.Cursor getCursor()>
<android.graphics.YuvImage: int getYuvFormat()>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<android.widget.LinearLayout: void setOrientation(int)>
<android.content.Intent: int describeContents()>
<java.awt.event.InvocationEvent: void <init>(java.lang.Object,java.lang.Runnable)>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>
<android.pim.vcard.VCardComposer.HandlerForOutputStream: boolean onInit(android.content.Context)>
<android.util.SparseIntArray: int get(int)>
<java.awt.image.renderable.RenderableImageOp: java.awt.image.renderable.ParameterBlock setParameterBlock(java.awt.image.renderable.ParameterBlock)>
<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.graphics.Typeface: boolean isBold()>
<android.preference.Preference: android.content.Context getContext()>
<java.awt.geom.Line2D.Double: java.awt.geom.Point2D getP2()>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>
<java.awt.geom.Line2D: double getY1()>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>
<android.renderscript.ScriptC.Builder: void setScript(android.content.res.Resources,int)>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>
<android.widget.ProgressBar: void setVisibility(int)>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>
<android.graphics.GradientShader: void <init>(int[],float[])>
<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>
<android.telephony.gsm.SmsMessage: boolean isReplace()>
<java.awt.image.SinglePixelPackedSampleModel: void setPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.graphics.Matrix: void set()>
<com.google.android.mms.pdu.PduPersister: android.net.Uri persistPart(com.google.android.mms.pdu.PduPart,long)>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>
<android.text.style.AlignmentSpan.Standard: int getSpanTypeId()>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>
<java.awt.image.Raster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Point)>
<android.graphics.drawable.RotateDrawable: void <init>()>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.app.Notification: void <init>(android.os.Parcel)>
<com.google.android.mms.pdu.NotificationInd: long getExpiry()>
<android.hardware.Camera.Parameters: java.lang.String getAntibanding()>
<java.awt.image.BandedSampleModel: void setPixel(int,int,int[],java.awt.image.DataBuffer)>
<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<android.text.util.Rfc822Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>
<android.app.Service: void stopForeground(boolean)>
<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>
<android.location.Address: void setSubAdminArea(java.lang.String)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isRevoked()>
<android.widget.GridView: void setNumColumns(int)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<android.media.AudioRecord: int read(byte[],int,int)>
<com.google.android.mms.pdu.PduParser: long parseLongInteger(java.io.ByteArrayInputStream)>
<java.awt.im.spi.InputMethod: void setCompositionEnabled(boolean)>
<java.awt.image.LookupOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,java.nio.IntBuffer)>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.graphics.RectF: float height()>
<android.graphics.drawable.ScaleDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.view.WindowManagerPolicy.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,int[],int)>
<android.webkit.WebSettings: void setNavDump(boolean)>
<org.apache.harmony.awt.wtk.WindowFactory: org.apache.harmony.awt.wtk.NativeWindow getWindowFromPoint(java.awt.Point)>
<android.webkit.WebSettings: void setCacheMode(int)>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.view.animation.Animation: long getDuration()>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>
<android.widget.RadioGroup: void onFinishInflate()>
<android.webkit.WebView: void goBack()>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>
<android.app.IntentService: void onDestroy()>
<android.util.SparseIntArray: int keyAt(int)>
<org.apache.harmony.awt.gl.color.ICC_ProfileHelper: int getIntFromByteArray(byte[],int)>
<android.database.CursorWrapper: int getPosition()>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>
<android.view.KeyEvent: int getRepeatCount()>
<android.app.ActivityManagerProxy: boolean testIsSystemReady()>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>
<android.widget.AbsListView: int computeVerticalScrollRange()>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
<javax.microedition.khronos.egl.EGL10: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>
<android.hardware.Camera.Parameters: void setSceneMode(java.lang.String)>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<java.awt.image.renderable.ParameterBlock: void <init>()>
<org.apache.harmony.awt.ContextStorage: boolean shutdownPending()>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>
<android.media.Ringtone: void stop()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>
<android.pim.vcard.VCardEntry: java.lang.String getPrefix()>
<java.awt.image.renderable.ParameterBlock: int getNumSources()>
<javax.microedition.khronos.opengles.GL10: void glFogx(int,int)>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.widget.TabHost.TabContentFactory)>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager.CacheResult)>
<java.awt.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice getDefaultScreenDevice()>
<android.widget.TextView: int getCurrentTextColor()>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>
<android.view.View: void invalidate(android.graphics.Rect)>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>
<android.pim.vcard.VCardParser_V21: java.lang.String getNonEmptyLine()>
<java.awt.Component.FlipBufferStrategy: boolean contentsRestored()>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.DigitalClock: void onAttachedToWindow()>
<android.widget.ArrayAdapter: void remove(java.lang.Object)>
<android.widget.ViewAnimator: void removeViewAt(int)>
<android.content.Context: java.lang.String getPackageCodePath()>
<com.android.layoutlib.bridge.BridgeContext: java.lang.Object getSystemService(java.lang.String)>
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent)>
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>
<android.telephony.gsm.SmsMessage: boolean isMwiDontStore()>
<android.view.KeyEvent: boolean isModifierKey(int)>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>
<java.awt.geom.Area: void exclusiveOr(java.awt.geom.Area)>
<org.apache.harmony.awt.gl.image.DecodingImageSource: boolean checkConnection()>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>
<android.widget.TextView: boolean getFreezesText()>
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>
<org.apache.harmony.awt.gl.Surface: java.awt.image.WritableRaster getRaster()>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.opengl.GLES20: void glDeleteShader(int)>
<android.content.ContextWrapper: android.content.res.Resources.Theme getTheme()>
<java.awt.Polygon: void addPoint(int,int)>
<android.widget.SimpleAdapter: android.widget.SimpleAdapter.ViewBinder getViewBinder()>
<android.content.IntentFilter.AuthorityEntry: int getPort()>
<android.pim.vcard.VCardUtils: boolean containsOnlyNonCrLfPrintableAscii(java.lang.String[])>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>
<java.awt.Component: boolean areFocusTraversalKeysSet(int)>
<com.google.android.util.AbstractMessageParser.Photo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int)>
<org.apache.harmony.awt.wtk.NativeIM: void setInputMethodContext(java.awt.im.spi.InputMethodContext)>
<android.view.KeyEvent: char getMatch(char[],int)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<java.awt.Component: void firePropertyChange(java.lang.String,double,double)>
<javax.imageio.stream.MemoryCacheImageOutputStream: void write(int)>
<org.apache.harmony.awt.wtk.SystemProperties: void init(java.util.Map)>
<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>
<android.speech.srec.MicrophoneInputStream: void close()>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>
<android.graphics.Matrix: void finalize()>
<java.awt.image.DataBufferByte: void <init>(byte[],int)>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>
<java.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(java.awt.image.DataBuffer,int,int,int,int[],int[],java.awt.Point)>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,java.nio.IntBuffer)>
<java.awt.image.DataBufferByte: void <init>(byte[][],int)>
<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>
<java.awt.image.ShortLookupTable: short[] lookupPixel(short[],short[])>
<android.opengl.GLES10: void glTranslatex(int,int,int)>
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
<android.content.IntentFilter: java.util.Iterator pathsIterator()>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>
<java.awt.image.DataBufferFloat: float[] getData(int)>
<java.awt.Component.BltBufferStrategy: java.awt.Graphics getDrawGraphics()>
<javax.imageio.ImageReader: void processThumbnailPassStarted(java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[])>
<android.util.EventLog.Event: int getProcessId()>
<android.opengl.GLES20: void glFlush()>
<org.apache.harmony.awt.state.MenuItemState: boolean isSeparator()>
<android.renderscript.Type.Builder: android.renderscript.Type create()>
<android.content.DialogInterface.OnShowListener: void onShow(android.content.DialogInterface)>
<java.awt.image.renderable.RenderableImage: java.lang.Object getProperty(java.lang.String)>
<android.text.style.TextAppearanceSpan: int describeContents()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>
<android.widget.VideoView: boolean canSeekForward()>
<java.awt.font.TextLayout: java.awt.Shape getCaretShape(java.awt.font.TextHitInfo,java.awt.geom.Rectangle2D)>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<java.awt.font.TextLayout: java.awt.font.TextLayout getJustifiedLayout(float)>
<java.awt.image.ColorModel: java.lang.Object getDataElements(float[],int,java.lang.Object)>
<java.awt.geom.Rectangle2D: boolean intersectsLine(java.awt.geom.Line2D)>
<android.widget.AbsSpinner: int getCount()>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.TimePicker: void <init>(android.content.Context)>
<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.wifi.WifiManager: boolean reconnect()>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,int[],int)>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.inputmethodservice.KeyboardView: boolean handleBack()>
<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>
<android.text.method.ArrowKeyMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.Class)>
<javax.microedition.khronos.opengles.GL10: void glFrontFace(int)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,java.nio.IntBuffer)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getPSName()>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>
<javax.imageio.stream.MemoryCacheImageOutputStream: int read(byte[],int,int)>
<java.awt.geom.Point2D: int hashCode()>
<android.view.animation.Animation: boolean hasStarted()>
<org.apache.harmony.awt.gl.font.Glyph: void setGlyphJustificationInfo(java.awt.font.GlyphJustificationInfo)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>
<java.awt.ImageCapabilities: boolean isAccelerated()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void clip(java.awt.Shape)>
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>
<com.android.server.am.ActivityManagerService: void unhandledBack()>
<android.content.SyncStats: int describeContents()>
<com.google.android.mms.pdu.RetrieveConf: void setRetrieveText(com.google.android.mms.pdu.EncodedStringValue)>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getBaseURI()>
<android.gesture.GestureLibrary: boolean save()>
<android.app.ActivityManagerProxy: void wakingUp()>
<android.widget.Scroller: void abortAnimation()>
<android.os.Debug: int getGlobalGcInvocationCount()>
<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.view.WindowManagerPolicy.WindowState: boolean showLw(boolean)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<com.google.android.gles_jni.GLImpl: void glCullFace(int)>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<com.android.server.KeyInputQueue: int nativeGetScancodeState(int,int)>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>
<android.hardware.Camera.Parameters: void set(java.lang.String,int)>
<com.android.providers.settings.SettingsHelper: boolean restoreValue(java.lang.String,java.lang.String)>
<java.awt.image.MemoryImageSource: void newPixels()>
<android.graphics.Region: void finalize()>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getAscent()>
<android.database.Cursor: int getColumnIndex(java.lang.String)>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.util.SparseIntArray: int indexOfKey(int)>
<java.awt.Graphics2D: void rotate(double,double,double)>
<android.database.sqlite.SQLiteQuery: void bindString(int,java.lang.String)>
<java.awt.AWTKeyStroke: boolean equals(java.lang.Object)>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.wtk.NativeMouseInfo: java.awt.Point getLocation()>
<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>
<android.webkit.WebView: void clearSslPreferences()>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.database.sqlite.SQLiteClosable: void releaseReference()>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>
<android.util.MonthDisplayHelper: int getColumnOf(int)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>
<com.android.commands.svc.WifiCommand: java.lang.String longHelp()>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<android.widget.AbsListView: void onGlobalLayout()>
<java.awt.geom.Rectangle2D: int outcode(double,double)>
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.inputmethodservice.InputMethodService: void updateInputViewShown()>
<android.graphics.Canvas: void <init>()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>
<java.awt.Graphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>
<android.pim.vcard.VCardParser_V30: java.lang.String unescapeText(java.lang.String)>
<com.google.android.mms.pdu.SendReq: void <init>()>
<android.app.ProgressDialog: void setSecondaryProgress(int)>
<java.awt.geom.RectangularShape: void setFrameFromDiagonal(double,double,double,double)>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<android.webkit.CacheManager: boolean startCacheTransaction()>
<android.graphics.Rect: java.lang.String flattenToString()>
<java.awt.Component: java.awt.Component locate(int,int)>
<android.text.util.Linkify.TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>
<android.os.Parcel: void writeFloatArray(float[])>
<android.webkit.WebSettings: boolean getAllowFileAccess()>
<android.widget.MediaController.MediaPlayerControl: void pause()>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>
<android.content.ContentProviderClient: boolean release()>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>
<android.text.BoringLayout: int getLineCount()>
<android.text.format.Time: boolean parse(java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.WallpaperManager: void clear()>
<android.provider.Contacts.Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.hardware.Camera.Parameters: void setPictureSize(int,int)>
<android.graphics.Interpolator: void reset(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<java.awt.event.ActionEvent: java.lang.String getActionCommand()>
<android.pim.vcard.VCardConfig: boolean usesDefactProperty(int)>
<android.content.IntentFilter: void addAction(java.lang.String)>
<java.awt.color.ColorSpace: float[] fromRGB(float[])>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReaderSpi: boolean canDecodeInput(java.lang.Object)>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>
<java.awt.Adjustable: void setMaximum(int)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.Comparable getObjectMinValue(java.lang.String)>
<android.widget.TabHost.ContentStrategy: void tabClosed()>
<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>
<java.awt.geom.Line2D.Float: void setLine(double,double,double,double)>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>
<android.location.Address: java.lang.String getSubThoroughfare()>
<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>
<java.awt.image.BufferedImage: int getMinX()>
<android.view.View: void getLocationInWindow(int[])>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.widget.RemoteViews: void setTextColor(int,int)>
<java.awt.geom.Line2D.Float: double getY2()>
<android.os.Parcel: void finalize()>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.database.AbstractWindowedCursor: float getFloat(int)>
<com.google.android.util.AbstractMessageParser.Part: void add(com.google.android.util.AbstractMessageParser.Token)>
<java.awt.image.WritableRaster: void setSample(int,int,int,float)>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,android.content.res.Configuration,java.util.Map)>
<java.awt.Dimension: void setSize(int,int)>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<android.database.CursorWrapper: float getFloat(int)>
<org.apache.harmony.awt.gl.font.AndroidLineMetrics: int getBaselineIndex()>
<java.awt.Color: void <init>(java.awt.color.ColorSpace,float[],float)>
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>
<java.awt.font.GlyphVector: java.awt.Shape getGlyphVisualBounds(int)>
<android.renderscript.SimpleMesh.Builder: void <init>(android.renderscript.RenderScript)>
<android.database.AbstractCursor: int getPosition()>
<java.awt.image.renderable.ParameterBlock: byte getByteParameter(int)>
<android.net.Credentials: int getGid()>
<android.os.MemoryFile: java.io.InputStream getInputStream()>
<java.awt.Graphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints.Key)>
<android.content.Intent: void removeExtra(java.lang.String)>
<java.awt.image.SampleModel: int[] getPixels(int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.content.OperationApplicationException: void <init>()>
<android.view.animation.Animation: void setRepeatMode(int)>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>
<android.net.NetworkInfo: boolean isAvailable()>
<java.awt.image.DirectColorModel: java.lang.Object getDataElements(int[],int,java.lang.Object)>
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>
<java.awt.im.InputContext: void dispose()>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.graphics.Paint: float descent()>
<android.preference.PreferenceManager.OnPreferenceTreeClickListener: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<java.awt.geom.QuadCurve2D: boolean intersects(java.awt.geom.Rectangle2D)>
<org.apache.harmony.awt.wtk.Synchronizer: void lockAndRestoreState()>
<android.view.Window.Callback: void onDetachedFromWindow()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeFloats(float[],int,int)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawOval(int,int,int,int)>
<java.awt.geom.AffineTransform: double getScaleX()>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>
<javax.imageio.stream.ImageInputStreamImpl: java.nio.ByteOrder getByteOrder()>
<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.graphics.Path: void lineTo(float,float)>
<android.graphics.Paint: void setCompatibilityScaling(float)>
<android.hardware.Camera.Parameters: void setWhiteBalance(java.lang.String)>
<android.os.BinderProxy: java.lang.String getInterfaceDescriptor()>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>
<java.awt.event.KeyEvent: boolean isActionKey()>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void removeElement(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void <init>()>
<java.awt.image.renderable.ParameterBlock: java.lang.Object getObjectParameter(int)>
<com.google.android.mms.pdu.RetrieveConf: void setReadReport(int)>
<java.awt.image.DataBuffer: int getOffset()>
<java.awt.image.DataBufferUShort: short[] getData(int)>
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.app.Activity: android.view.View getCurrentFocus()>
<java.awt.image.ComponentColorModel: java.awt.image.WritableRaster getAlphaRaster(java.awt.image.WritableRaster)>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>
<org.apache.harmony.awt.gl.font.TextMetricsCalculator: void checkBaselines()>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>
<java.awt.geom.QuadCurve2D.Double: void setCurve(double,double,double,double,double,double)>
<java.awt.Component: void hide()>
<android.media.AudioManager: void setRingerMode(int)>
<android.app.Activity: void onLowMemory()>
<android.pim.vcard.VCardEntry: void <init>(int)>
<android.os.Bundle: java.util.Set keySet()>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>
<android.preference.EditTextPreference: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.BridgeTypedArray: void bridgeSetValue(int,java.lang.String,com.android.layoutlib.api.IResourceValue)>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>
<com.google.android.mms.pdu.SendReq: void addBcc(com.google.android.mms.pdu.EncodedStringValue)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>
<org.apache.harmony.awt.gl.image.PngDecoder: void <init>(org.apache.harmony.awt.gl.image.DecodingImageSource,java.io.InputStream)>
<javax.imageio.stream.FileImageInputStream: int read()>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<java.awt.Point: void setLocation(double,double)>
<javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.File)>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
<android.view.View: void onMeasure(int,int)>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,)>
<android.content.Intent: java.lang.String getDataString()>
<com.android.layoutlib.bridge.BridgeContext: com.android.layoutlib.api.ILayoutLog getLogger()>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.Window: int getForcedWindowFlags()>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(int[],int,int[],int)>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>(android.os.Parcel)>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>
<java.awt.geom.CubicCurve2D: boolean intersects(double,double,double,double)>
<java.awt.Component.BltBufferStrategy: java.awt.BufferCapabilities getCapabilities()>
<android.pim.vcard.exception.VCardNotSupportedException: void <init>()>
<javax.imageio.metadata.IIOMetadataFormatImpl: int getChildPolicy(java.lang.String)>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>
<android.database.BulkCursorProxy: void deactivate()>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<java.awt.Event: void <init>(java.lang.Object,long,int,int,int,int,int,java.lang.Object)>
<javax.imageio.stream.ImageInputStream: boolean isCached()>
<android.widget.PopupWindow: void update(int,int,int,int)>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>
<android.os.BatteryStats.Uid.Proc: long getUserTime(int)>
<android.pim.ContactsAsyncHelper.ImageTracker: boolean isDifferentImageRequest(com.android.internal.telephony.Connection)>
<android.provider.SearchRecentSuggestions: void clearHistory()>
<android.graphics.RectF: void offset(float,float)>
<android.webkit.WebView: void onMeasure(int,int)>
<java.awt.image.renderable.RenderContext: void concetenateTransform(java.awt.geom.AffineTransform)>
<android.content.EntityIterator: void close()>
<android.text.DynamicLayout: android.text.Layout.Directions getLineDirections(int)>
<com.google.android.mms.pdu.PduPart: byte[] getName()>
<java.awt.Font: java.awt.Font decode(java.lang.String)>
<org.apache.harmony.awt.gl.render.JavaTextRenderer: void drawGlyphVector(java.awt.Graphics2D,java.awt.font.GlyphVector,float,float)>
<android.widget.TextView: void setTextSize(float)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalMaxCharWidth()>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setSamples(int,int,int,int,int,float[])>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>
<android.speech.RecognitionService.Callback: void rmsChanged(float)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixels(int,int,int,int,int[])>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.bluetooth.BluetoothSocket: void connect()>
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>
<android.widget.RelativeLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,float[],int)>
<java.awt.Toolkit: void removeAWTEventListener(java.awt.event.AWTEventListener)>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>
<com.google.android.gles_jni.GLImpl: void glDisable(int)>
<java.awt.Component: boolean getIgnoreRepaint()>
<android.view.View: boolean isInEditMode()>
<java.awt.image.SampleModel: void setSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.text.util.Rfc822Token: java.lang.String quoteComment(java.lang.String)>
<java.awt.geom.QuadCurve2D.Float: java.awt.geom.Point2D getP1()>
<android.os.Bundle: double getDouble(java.lang.String)>
<com.android.tools.layoutlib.create.AsmGenerator: java.util.Map getKeep()>
<android.server.BluetoothService: boolean startDiscovery()>
<javax.imageio.ImageWriter: void processThumbnailStarted(int,int)>
<android.text.style.DrawableMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<java.awt.event.WindowEvent: void <init>()>
<android.view.View: int getScrollY()>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.content.ComponentName: int hashCode()>
<android.widget.ZoomControls: void show()>
<org.apache.harmony.awt.gl.image.BufferedImageGraphics2D: java.awt.Graphics create()>
<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>
<android.content.res.Configuration: int hashCode()>
<android.speech.RecognitionService.Callback: void results(android.os.Bundle)>
<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>
<android.location.LocationProvider: boolean hasMonetaryCost()>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.app.PendingIntent: java.lang.String toString()>
<android.provider.SyncStateContract.Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.view.View: void setDrawingCacheQuality(int)>
<java.awt.image.AreaAveragingScaleFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getCacheDir()>
<android.app.Service: void setForeground(boolean)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>
<android.widget.Chronometer: java.lang.String getFormat()>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>
<java.awt.Graphics2D: void rotate(double)>
<com.google.android.gles_jni.GLImpl: void glStencilMask(int)>
<android.content.res.AssetFileDescriptor: void close()>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>
<android.widget.LinearLayout: int getOrientation()>
<java.awt.geom.QuadCurve2D: java.awt.Rectangle getBounds()>
<android.graphics.Canvas: int save()>
<javax.imageio.spi.ImageOutputStreamSpi: boolean canUseCacheFile()>
<android.util.AttributeSet: java.lang.String getPositionDescription()>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>
<android.content.DialogInterface.OnMultiChoiceClickListener: void onClick(android.content.DialogInterface,int,boolean)>
<java.awt.image.ConvolveOp: java.awt.RenderingHints getRenderingHints()>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>
<java.awt.MenuComponent: void processEvent(java.awt.AWTEvent)>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.telephony.SmsMessage: int getStatus()>
<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<java.awt.image.MultiPixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<android.provider.ContactsContract.Contacts: void markAsContacted(android.content.ContentResolver,long)>
<javax.imageio.spi.ImageReaderWriterSpi: boolean isStandardImageMetadataFormatSupported()>
<java.awt.MenuComponent: java.awt.MenuContainer getParent()>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
<java.awt.geom.RectangularShape: double getMinY()>
<android.util.EventLog: java.lang.String getTagName(int)>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4f(int,float,float,float,float)>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,java.nio.IntBuffer)>
<java.awt.Component: java.awt.image.VolatileImage createVolatileImage(int,int)>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<android.webkit.CacheManager.CacheResult: java.lang.String getEncoding()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
<java.awt.Rectangle: void <init>(int,int,int,int)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>
<com.android.server.ProcessStats: int getLastUserTime()>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>
<android.content.pm.Signature: boolean equals(java.lang.Object)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getRssUrl(java.lang.String)>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>
<android.app.UiModeManager: void disableCarMode(int)>
<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>
<android.view.animation.Interpolator: float getInterpolation(float)>
<java.awt.Graphics: void clearRect(int,int,int,int)>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>
<android.drm.mobile1.DrmRights: boolean consumeRights(int)>
<android.view.View: boolean isFocusable()>
<android.location.Address: boolean hasLatitude()>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>
<android.widget.ImageView: void setImageResource(int)>
<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>
<android.pim.vcard.VCardUtils: java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String)>
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<java.awt.image.renderable.RenderContext: void setTransform(java.awt.geom.AffineTransform)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.film.FilmView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<org.apache.harmony.awt.gl.Surface: void dispose()>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView.OnKeyboardActionListener getOnKeyboardActionListener()>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>
<java.awt.event.KeyEvent: char getKeyChar()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getAttributeMaxValue(java.lang.String,java.lang.String)>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.os.Debug.InstructionCount: void <init>()>
<android.graphics.Matrix: java.lang.String toString()>
<android.widget.MediaController: void show(int)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: java.awt.font.FontRenderContext getFontRenderContext()>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>
<android.widget.VideoView: void seekTo(int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.pim.vcard.VCardBuilder: android.pim.vcard.VCardBuilder appendIms(java.util.List)>
<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.view.animation.AnimationSet: void setStartOffset(long)>
<android.graphics.Typeface: void init(com.android.layoutlib.bridge.FontLoader)>
<android.widget.ViewSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<java.awt.geom.Rectangle2D.Float: java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)>
<android.inputmethodservice.InputMethodService: void onInitializeInterface()>
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>
<java.awt.image.SampleModel: void setPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.widget.ViewFlipper: void <init>(android.content.Context)>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>
<android.graphics.Paint: int getColor()>
<java.awt.image.AffineTransformOp: int getInterpolationType()>
<java.awt.Component: void addFocusListener(java.awt.event.FocusListener)>
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>
<javax.imageio.ImageWriter: void abort()>
<android.view.Window: boolean requestFeature(int)>
<com.android.server.Watchdog: void run()>
<android.pim.RecurrenceSet: java.lang.String unfold(java.lang.String)>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>
<java.awt.Toolkit: void addAWTEventListener(java.awt.event.AWTEventListener,long)>
<android.webkit.WebView: void pauseTimers()>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>
<java.awt.geom.Line2D.Float: double getY1()>
<org.apache.harmony.awt.wtk.NativeCursor: void setCursor(long)>
<android.view.SurfaceView: void <init>(android.content.Context)>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>
<android.widget.Filterable: android.widget.Filter getFilter()>
<android.media.AudioManager: void setMode(int)>
<com.android.layoutlib.bridge.Bridge: com.android.layoutlib.api.ILayoutResult computeLayout(com.android.layoutlib.api.IXmlPullParser,java.lang.Object,int,int,int,float,float,java.lang.String,boolean,java.util.Map,java.util.Map,com.android.layoutlib.api.IProjectCallback,com.android.layoutlib.api.ILayoutLog)>
<android.graphics.RectF: boolean intersects(float,float,float,float)>
<android.preference.RingtonePreference: void setRingtoneType(int)>
<android.content.BroadcastReceiver: void setResultCode(int)>
<java.awt.im.spi.InputMethod: void notifyClientWindowChange(java.awt.Rectangle)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<org.apache.harmony.awt.gl.font.FontManager: void initLCIDTable()>
<android.database.sqlite.SQLiteProgram: void native_bind_blob(int,byte[])>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>
<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: void validate(java.awt.image.DataBuffer)>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,float[],int)>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>
<javax.imageio.spi.ServiceRegistry: boolean registerServiceProvider(java.lang.Object,java.lang.Class)>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>
<java.awt.geom.Line2D.Double: double getY1()>
<javax.imageio.stream.ImageInputStream: void seek(long)>
<java.awt.geom.Line2D.Float: java.awt.geom.Point2D getP2()>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.text.AlteredCharSequence: int length()>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>
<java.awt.image.renderable.RenderableImage: float getMinY()>
<com.google.android.mms.pdu.PduPart: byte[] getContentId()>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.imageio.metadata.IIOMetadataNode: boolean hasAttribute(java.lang.String)>
<org.apache.harmony.awt.im.InputMethodContext: void notifyClientWindowChange(java.awt.Rectangle)>
<javax.imageio.event.IIOReadProgressListener: void sequenceStarted(javax.imageio.ImageReader,int)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByName(java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitMaxs(int,int)>
<android.pim.ICalendar: android.pim.ICalendar.Component parseCalendar(java.lang.String)>
<android.pim.vcard.VCardUtils: java.lang.String guessImageType(byte[])>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>
<java.awt.image.Raster: java.awt.image.WritableRaster createInterleavedRaster(int,int,int,int,java.awt.Point)>
<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createScaledRendering(int,int,java.awt.RenderingHints)>
<java.awt.Graphics2D: java.awt.Paint getPaint()>
<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>
<javax.imageio.spi.RegisterableService: void onDeregistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.MessageClass getMessageClass()>
<android.webkit.WebView: boolean zoomIn()>
<android.view.MenuItem: boolean isEnabled()>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<java.awt.event.ItemEvent: java.lang.Object getItem()>
<android.widget.TableRow.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.Uri: java.lang.String getHost()>
<android.content.Context: boolean deleteDatabase(java.lang.String)>
<android.content.res.AssetManager.AssetInputStream: int read()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void <init>(java.lang.String,int)>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.pim.vcard.VCardEntry.PhoneData: void <init>(int,java.lang.String,java.lang.String,boolean)>
<java.awt.font.ImageGraphicAttribute: void <init>(java.awt.Image,int)>
<javax.imageio.metadata.IIOMetadataFormat: int getObjectArrayMinLength(java.lang.String)>
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter.ViewBinder)>
<java.awt.GraphicsDevice: boolean isFullScreenSupported()>
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.ExpandableListAdapter: long getCombinedGroupId(long)>
<javax.imageio.metadata.IIOMetadataNode: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>
<android.view.MenuItem: boolean isCheckable()>
<android.app.Activity: void onUserLeaveHint()>
<android.preference.RingtonePreference: boolean getShowSilent()>
<org.apache.harmony.awt.wtk.NativeWindow: void setIconImage(java.awt.Image)>
<android.view.Window: void setLayout(int,int)>
<java.awt.Component: boolean mouseDown(java.awt.Event,int,int)>
<org.apache.harmony.awt.im.InputMethodContext: java.text.AttributedCharacterIterator cancelLatestCommittedText(java.text.AttributedCharacterIterator.Attribute[])>
<java.awt.image.BufferedImageFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>
<java.awt.event.ActionEvent: java.lang.String paramString()>
<android.graphics.Paint: float measureText(char[],int,int)>
<java.awt.event.AdjustmentEvent: java.lang.String paramString()>
<com.android.server.ShutdownActivity: void onCreate(android.os.Bundle)>
<android.hardware.Camera.PreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)>
<android.pim.vcard.VCardEntryConstructor: void propertyParamValue(java.lang.String)>
<java.beans.PropertyEditor: void setValue(java.lang.Object)>
<android.net.LocalSocket: void shutdownInput()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<java.awt.Event: void <init>(java.lang.Object,long,int,int,int,int,int)>
<java.awt.image.CropImageFilter: void setProperties(java.util.Hashtable)>
<android.graphics.drawable.Drawable: int getLevel()>
<java.awt.Component: void validate()>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<org.apache.harmony.awt.gl.font.AndroidFont: boolean canDisplay(char)>
<android.os.Debug: void resetGlobalExternalAllocCount()>
<android.graphics.YuvImage: int getHeight()>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.ComponentName: boolean equals(java.lang.Object)>
<com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats getService()>
<javax.imageio.stream.ImageInputStream: java.nio.ByteOrder getByteOrder()>
<android.database.Cursor: boolean moveToPosition(int)>
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.wtk.WindowFactory getWindowFactory()>
<android.pim.vcard.VCardParser_V30: void readEndVCard(boolean,boolean)>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeShort(int)>
<javax.imageio.ImageIO: java.io.File getCacheDirectory()>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<com.google.android.mms.pdu.NotificationInd: void setTransactionId(byte[])>
<android.database.MergeCursor: float getFloat(int)>
<org.apache.harmony.awt.gl.font.AndroidLineMetrics: float[] getBaselineOffsets()>
<android.widget.CursorAdapter: void onContentChanged()>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<android.view.ViewParent: void clearChildFocus(android.view.View)>
<android.os.Debug: void resetGlobalClassInitCount()>
<com.android.server.status.StatusBarService: android.os.IBinder addIcon(java.lang.String,java.lang.String,int,int)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<android.app.Activity: void onUserInteraction()>
<com.android.providers.settings.SettingsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.webkit.CacheManager.CacheResult: java.io.InputStream getInputStream()>
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>
<java.awt.image.PixelGrabber: void startGrabbing()>
<android.widget.EditText: boolean getDefaultEditable()>
<com.android.layoutlib.bridge.BridgeTypedArray: void recycle()>
<android.graphics.Matrix: void <init>()>
<android.opengl.GLES20: void glBlendEquation(int)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>
<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>
<java.beans.PropertyEditorSupport: java.lang.String getJavaInitializationString()>
<javax.imageio.metadata.IIOInvalidTreeException: void <init>(java.lang.String,org.w3c.dom.Node)>
<android.app.Service: void onStart(android.content.Intent,int)>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>
<android.view.WindowManager.LayoutParams: void <init>(int)>
<org.apache.harmony.awt.gl.font.Glyph: long getPFont()>
<java.awt.Component.FlipBufferStrategy: void <init>(int,java.awt.BufferCapabilities)>
<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>
<android.graphics.Canvas: void setViewport(int,int)>
<android.text.util.Rfc822Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>
<android.graphics.Rect: void set(int,int,int,int)>
<android.pim.vcard.VCardParser: void cancel()>
<android.view.Menu: void close()>
<android.pim.vcard.VCardParser: boolean parse(java.io.InputStream,java.lang.String,android.pim.vcard.VCardInterpreter)>
<org.apache.harmony.awt.gl.font.FontManager: java.util.Properties getProperties(java.io.File)>
<android.graphics.Canvas: void setViewport(int,int)>
<android.widget.TextView: boolean isInputMethodTarget()>
<android.widget.ZoomButtonsController.OnZoomListener: void onZoom(boolean)>
<java.awt.geom.AffineTransform: void setToShear(double,double)>
<android.widget.TextView: boolean getDefaultEditable()>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<android.os.Process: void sendSignal(int,int)>
<android.view.View: boolean isLongClickable()>
<android.text.Layout: float getSecondaryHorizontal(int)>
<java.awt.image.WritableRaster: void setPixels(int,int,int,int,float[])>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<android.graphics.drawable.Drawable: int[] getState()>
<java.awt.Component: java.awt.Point getLocation()>
<android.opengl.GLES20: void glValidateProgram(int)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.Object[] getObjectEnumerations(java.lang.String)>
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getStartDate()>
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhoto()>
<java.awt.Cursor: void <init>(java.lang.String)>
<android.widget.NumberPicker.OnChangedListener: void onChanged(android.widget.NumberPicker,int,int)>
<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>
<android.view.ViewGroup: void setPadding(int,int,int,int)>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>
<com.google.android.util.AbstractMessageParser.Html: void trimLeadingWhitespace()>
<android.widget.DigitalClock: void onDetachedFromWindow()>
<android.content.Intent: android.graphics.Rect getSourceBounds()>
<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(int)>
<com.android.server.DiskStatsService: void <init>(android.content.Context)>
<android.widget.AbsSeekBar: void setThumbOffset(int)>
<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>
<javax.imageio.ImageReader: void removeAllIIOReadProgressListeners()>
<android.os.ResultReceiver: void <init>(android.os.Handler)>
<java.awt.Component: void doLayout()>
<org.apache.harmony.awt.ComponentInternals: void setComponentInternals(org.apache.harmony.awt.ComponentInternals)>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>
<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<javax.imageio.stream.MemoryCacheImageOutputStream: boolean isCachedMemory()>
<android.os.PowerManager.WakeLock: void finalize()>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStroke(int,int)>
<android.view.accessibility.AccessibilityEvent: int describeContents()>
<android.content.pm.PackageStats: void <init>(android.os.Parcel)>
<android.inputmethodservice.Keyboard.Key: void onReleased(boolean)>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>
<android.os.BatteryStats.Uid: void noteVideoTurnedOnLocked()>
<android.webkit.WebSettings: boolean supportMultipleWindows()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.Class getObjectClass(java.lang.String)>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>
<android.speech.RecognitionService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.status.TrackingView: void onLayout(boolean,int,int,int,int)>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>
<android.app.Activity: void setSecondaryProgress(int)>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
<android.pim.vcard.VCardEntry: java.util.List getWebsiteList()>
<java.awt.image.renderable.RenderableImageOp: java.awt.image.renderable.ParameterBlock getParameterBlock()>
<java.awt.geom.AffineTransform: void <init>()>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>
<com.google.android.mms.pdu.PduHeaders: void setLongInteger(long,int)>
<android.webkit.PluginList: void clear()>
<android.content.ContentProviderResult: void <init>(android.net.Uri)>
<android.content.pm.PackageManager: int checkSignatures(int,int)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>
<java.beans.FeatureDescriptor: java.lang.String getDisplayName()>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>
<java.awt.geom.CubicCurve2D.Float: double getX2()>
<android.provider.ContactsContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>
<android.graphics.ColorMatrix: void <init>()>
<org.apache.harmony.awt.wtk.NativeEventThread: org.apache.harmony.awt.wtk.WTK getWTK()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>
<javax.imageio.ImageIO: java.lang.String[] getWriterFormatNames()>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.pim.vcard.VCardEntryConstructor: void endProperty()>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: int getLogicalAscent()>
<android.media.ExifInterface: void saveAttributes()>
<android.inputmethodservice.ExtractEditText: void startInternalChanges()>
<android.util.EventLog: int writeEvent(int,long)>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<java.awt.event.AWTEventListener: void eventDispatched(java.awt.AWTEvent)>
<android.provider.Settings.Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<java.awt.image.DataBufferFloat: void setElem(int,int,int)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.app.ExpandableListActivity: void onGroupExpand(int)>
<android.os.Debug: void waitForDebugger()>
<android.graphics.Point: void negate()>
<android.text.style.LeadingMarginSpan.Standard: void writeToParcel(android.os.Parcel,int)>
<java.beans.PropertyDescriptor: boolean isConstrained()>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<java.awt.Component: void processEvent(java.awt.AWTEvent)>
<java.awt.geom.CubicCurve2D: void setCurve(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>
<android.view.KeyEvent: int getDeadChar(int,int)>
<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>
<android.util.SparseIntArray: void removeAt(int)>
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.os.Parcel: void recycle()>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.hardware.Camera: void startSmoothZoom(int)>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>
<android.media.RingtoneManager: void <init>(android.app.Activity)>
<com.android.fountain.FountainRS: void init(android.renderscript.RenderScriptGL,android.content.res.Resources,int,int)>
<android.view.MotionEvent: float getSize()>
<java.awt.image.BufferStrategy: java.awt.BufferCapabilities getCapabilities()>
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>
<android.content.Intent: char getCharExtra(java.lang.String,char)>
<android.content.SyncAdapterType: int hashCode()>
<javax.imageio.stream.ImageInputStream: boolean isCachedFile()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<java.awt.font.MultipleMaster: java.awt.Font deriveMMFont(float[],float,float,float,float)>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>
<android.view.animation.AnimationSet: boolean willChangeBounds()>
<org.apache.harmony.awt.gl.CommonGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>
<com.android.server.ClipboardService: void <init>(android.content.Context)>
<java.awt.image.PixelInterleavedSampleModel: void <init>(int,int,int,int,int,int[])>
<android.hardware.Camera.Parameters: java.lang.String getWhiteBalance()>
<android.telephony.ServiceState: java.lang.String toString()>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>
<android.view.Window: void makeActive()>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
<java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.awt.geom.RectangularShape: boolean isEmpty()>
<android.widget.HeaderViewListAdapter: int getFootersCount()>
<android.pim.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.util.Collection)>
<android.view.View: boolean isFocused()>
<javax.imageio.metadata.IIOMetadataNode: boolean isSupported(java.lang.String,java.lang.String)>
<java.awt.font.TextLayout: float getDescent()>
<android.widget.AbsoluteLayout: void <init>(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glViewport(int,int,int,int)>
<java.awt.Dimension: double getWidth()>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>
<android.content.res.Resources.Theme: void setTo(android.content.res.Resources.Theme)>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.location.Address: void setLocality(java.lang.String)>
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.widget.CompoundButton: void setButtonDrawable(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>
<java.awt.ComponentBehavior: boolean setFocus(boolean,java.awt.Component)>
<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>
<android.os.CountDownTimer: void cancel()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>
<javax.microedition.khronos.opengles.GL10: void glScissor(int,int,int,int)>
<android.graphics.Paint: void setDither(boolean)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<android.preference.Preference: void onClick()>
<android.media.AudioTrack: int getAudioFormat()>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>
<android.provider.Telephony.Sms.Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.webkit.Plugin: java.lang.String getPath()>
<android.app.Dialog: void openContextMenu(android.view.View)>
<com.android.layoutlib.bridge.BridgeContext: void addViewKey(android.view.View,java.lang.Object)>
<java.awt.image.ColorConvertOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
<java.awt.Component: void processInputMethodEvent(java.awt.event.InputMethodEvent)>
<android.preference.PreferenceGroup: int getPreferenceCount()>
<java.awt.geom.Arc2D: boolean intersects(double,double,double,double)>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<javax.imageio.ImageReader: void processThumbnailStarted(int,int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.graphics.Paint: float getStrokeMiter()>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>
<android.preference.DialogPreference: void setDialogTitle(int)>
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.net.LocalSocket: boolean isConnected()>
<android.content.res.Configuration: java.lang.String toString()>
<android.graphics.Matrix: void setRotate(float)>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<android.media.MediaPlayer: void setVolume(float,float)>
<com.google.android.mms.pdu.SendReq: void setMessageClass(byte[])>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>
<android.widget.TextView: int length()>
<android.graphics.DashPathEffect: void <init>(float[],float)>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>
<java.awt.image.renderable.ParameterBlock: char getCharParameter(int)>
<android.content.res.AssetManager.AssetInputStream: long skip(long)>
<com.google.android.util.AbstractMessageParser: java.lang.String toHtml()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<java.awt.geom.Line2D: boolean intersects(double,double,double,double)>
<java.awt.image.MemoryImageSource: void newPixels(int,int,int,int,boolean)>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillMultiRectAreaColor(org.apache.harmony.awt.gl.MultiRectArea)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[])>
<android.app.Service: void onDestroy()>
<org.apache.harmony.awt.gl.image.ImageDecoder: void setProperties(java.util.Hashtable)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: java.lang.String getFamily(java.util.Locale)>
<android.text.format.Time: void setToNow()>
<android.os.Messenger: void send(android.os.Message)>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>
<android.net.Downloads.ById: void deleteDownload(android.content.Context,long)>
<com.google.android.gles_jni.GLImpl: void glTranslatef(float,float,float)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getElementDescription(java.lang.String,java.util.Locale)>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context)>
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageId()>
<com.google.android.gles_jni.GLImpl: void glSampleCoveragex(int,boolean)>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>
<com.google.android.mms.pdu.PduPart: android.net.Uri getDataUri()>
<android.widget.TextView: int getLineCount()>
<org.apache.harmony.awt.gl.font.FontManager: org.apache.harmony.awt.gl.font.FontManager getInstance()>
<android.content.pm.ServiceInfo: void <init>()>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])>
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.accounts.AuthenticatorDescription: int hashCode()>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>
<java.awt.Toolkit: java.awt.event.AWTEventListener[] getAWTEventListeners(long)>
<com.android.layoutlib.bridge.BridgeContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.app.ActivityThread.PackageInfo: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.app.ActivityThread,java.lang.ClassLoader,boolean,boolean)>
<android.content.res.Resources: float getFraction(int,int,int)>
<android.database.MergeCursor: void close()>
<android.net.Downloads.ByUri: int getProgressColumnCurrentBytes()>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>
<android.os.BatteryStats.Uid.Wakelock: android.os.BatteryStats.Timer getWakeTime(int)>
<android.webkit.Plugin.PreferencesClickHandler: void handleClickEvent(android.content.Context)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,java.nio.IntBuffer)>
<android.hardware.Sensor: java.lang.String getName()>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri)>
<android.pim.vcard.VCardInterpreterCollection: void start()>
<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>
<com.android.layoutlib.bridge.BridgeContext: java.lang.String getPackageName()>
<android.location.Location: boolean hasBearing()>
<android.accounts.AccountManagerFuture: boolean isDone()>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
<android.view.View: void onAnimationStart()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>
<javax.imageio.spi.ImageWriterSpi: boolean isOwnWriter(javax.imageio.ImageWriter)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.image.ImageConsumer: void setProperties(java.util.Hashtable)>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>
<java.awt.image.MemoryImageSource: void setFullBufferUpdates(boolean)>
<android.content.Intent: int getFlags()>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>
<com.google.android.gles_jni.GLImpl: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.inputmethodservice.Keyboard.Row: void <init>(android.inputmethodservice.Keyboard)>
<android.text.style.BulletSpan: int getSpanTypeId()>
<org.apache.harmony.awt.gl.color.ColorScaler: void unscaleNormalized(java.awt.image.WritableRaster,float[][])>
<java.awt.image.BufferedImage: int getHeight()>
<android.view.accessibility.AccessibilityEvent: android.os.Parcelable getParcelableData()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStopTiming(android.os.Bundle)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getNamespace(java.lang.String)>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>
<android.graphics.Paint: int getFontMetricsInt()>
<android.widget.TableRow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.PopupWindow: void setFocusable(boolean)>
<javax.imageio.IIOParam: javax.imageio.ImageTypeSpecifier getDestinationType()>
<android.graphics.Paint: void setTextSize(float)>
<java.awt.Graphics: void drawPolygon(java.awt.Polygon)>
<java.awt.geom.CubicCurve2D: void setCurve(double[],int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindRenderbufferOES(int,int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,int[],int)>
<com.google.android.mms.pdu.RetrieveConf: void setMessageId(byte[])>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: int getWidth(int)>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>
<android.provider.MediaStore.Images.Media: android.net.Uri getContentUri(java.lang.String)>
<android.preference.DialogPreference: void onActivityDestroy()>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>
<com.android.common.OperationScheduler: void resetPermanentError()>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>
<java.beans.FeatureDescriptor: void setDisplayName(java.lang.String)>
<javax.imageio.stream.FileCacheImageOutputStream: int read(byte[],int,int)>
<android.telephony.gsm.GsmCellLocation: void <init>()>
<com.android.server.am.ActivityManagerService: void dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>
<android.webkit.WebView: void setScrollBarStyle(int)>
<android.view.inputmethod.EditorInfo: int describeContents()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>
<java.awt.geom.Arc2D: boolean contains(java.awt.geom.Rectangle2D)>
<android.widget.TextView: void setMinEms(int)>
<android.view.Window: void setFormat(int)>
<com.android.server.ProcessStats: com.android.server.ProcessStats.Stats getWorkingStats(int)>
<android.graphics.Paint: int getFlags()>
<javax.microedition.khronos.opengles.GL10: void glMatrixMode(int)>
<android.webkit.URLUtil: byte[] decode(byte[])>
<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>
<android.widget.Scroller: boolean isFinished()>
<java.awt.image.ComponentColorModel: int getBlue(int)>
<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.pim.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.util.List)>
<android.view.ViewStub: void onMeasure(int,int)>
<org.apache.harmony.awt.gl.image.PngDecoderJava: void readSignature(java.io.DataInputStream)>
<android.util.MonthDisplayHelper: int getWeekStartDay()>
<java.awt.image.DataBufferByte: void setElem(int,int)>
<android.widget.TextSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>
<com.google.android.mms.pdu.ReadOrigInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
<java.awt.geom.CubicCurve2D.Float: void setCurve(float,float,float,float,float,float,float,float)>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<java.awt.image.IndexColorModel: void <init>(int,int,int[],int,int,java.math.BigInteger)>
<android.view.Window: void addFlags(int)>
<com.android.server.NetStatService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.TableLayout.LayoutParams: void <init>()>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String)>
<java.awt.geom.RoundRectangle2D.Float: java.awt.geom.Rectangle2D getBounds2D()>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.content.Intent.ShortcutIconResource: int describeContents()>
<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>
<com.android.server.KeyInputQueue: int scancodeToKeycode(int,int)>
<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>
<android.server.BluetoothService: void removeServiceRecord(int)>
<android.os.MemoryFile: void close()>
<android.pim.vcard.VCardConfig: boolean usesShiftJis(int)>
<android.preference.EditTextPreference: java.lang.String getText()>
<android.provider.Calendar.CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>
<javax.imageio.stream.ImageInputStream: char readChar()>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<javax.imageio.stream.ImageOutputStream: void flushBefore(long)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
<android.speech.srec.Recognizer: int advance()>
<com.android.layoutlib.bridge.FontLoader: com.android.layoutlib.bridge.FontLoader create(java.lang.String)>
<com.android.providers.settings.SettingsProvider: java.lang.String getType(android.net.Uri)>
<android.webkit.WebSettings: void setDefaultFontSize(int)>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.drm.mobile1.DrmRightsManager: java.util.List getRightsList()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getStyleAttribute()>
<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>
<org.apache.harmony.awt.state.State: java.awt.Dimension getSize()>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<java.awt.event.FocusEvent: java.lang.String paramString()>
<java.awt.Component: int getX()>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>
<android.os.BatteryStats.Uid.Sensor: android.os.BatteryStats.Timer getSensorTime()>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<android.hardware.Camera.Parameters: java.lang.String getFlashMode()>
<android.view.View: void setSaveEnabled(boolean)>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>
<android.widget.AutoCompleteTextView: void showDropDown()>
<javax.imageio.stream.ImageOutputStreamImpl: void writeUTF(java.lang.String)>
<java.awt.geom.CubicCurve2D: double getCtrlX1()>
<org.apache.harmony.awt.wtk.NativeEvent: java.awt.Insets getInsets()>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.preference.VolumePreference.SeekBarVolumizer: void run()>
<android.view.animation.Animation: boolean getFillBefore()>
<android.graphics.Canvas: void freeGlCaches()>
<android.view.Menu: void removeGroup(int)>
<android.view.View: java.lang.CharSequence getContentDescription()>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<android.hardware.Camera: void setDisplayOrientation(int)>
<android.widget.ScrollView: void smoothScrollBy(int,int)>
<org.apache.harmony.awt.gl.image.DecodingImageSource: void removeConsumer(java.awt.image.ImageConsumer)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getStrikethroughOffset()>
<android.provider.Telephony.Mms: boolean isPhoneNumber(java.lang.String)>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
<android.widget.GridView: void setVerticalSpacing(int)>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.view.KeyCharacterMap: void finalize()>
<android.media.SoundPool: void <init>(int,int,int)>
<android.view.View: int getLeft()>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.provider.Calendar.Calendars: int deleteCalendarsForAccount(android.content.ContentResolver,android.accounts.Account)>
<android.database.AbstractCursor: double getDouble(int)>
<android.telephony.SmsMessage: boolean isReplace()>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>
<android.os.Debug: void resetGlobalFreedSize()>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<android.view.Display: float getRefreshRate()>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
<android.os.Debug: int getThreadExternalAllocCount()>
<android.os.Message: android.os.Message obtain(android.os.Message)>
<javax.imageio.stream.ImageInputStream: boolean isCachedMemory()>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: int getData(long)>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>
<android.view.ViewGroup: void detachViewFromParent(int)>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<java.awt.image.DataBufferUShort: short[] getData()>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<android.location.Criteria: void <init>(android.location.Criteria)>
<java.awt.FontMetrics: int getLeading()>
<android.graphics.Matrix: void mapPoints(float[])>
<org.apache.harmony.awt.gl.image.OffscreenImage: void setHints(int)>
<android.widget.Scroller: int getFinalY()>
<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<android.renderscript.Program.BaseProgramBuilder: void setTextureCount(int)>
<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.widget.AnalogClock: void onAttachedToWindow()>
<java.awt.geom.Point2D: double distanceSq(double,double,double,double)>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.mms.pdu.SendReq: long getExpiry()>
<android.util.SparseArray: java.lang.Object valueAt(int)>
<java.awt.event.AdjustmentEvent: boolean getValueIsAdjusting()>
<android.view.View: float getLeftFadingEdgeStrength()>
<java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,int,int)>
<android.webkit.WebView: void goBackOrForward(int)>
<org.apache.harmony.awt.gl.render.JavaLineRasterizer.LineDasher: void <init>()>
<android.widget.TableRow: void onMeasure(int,int)>
<android.database.sqlite.SQLiteCursor: void finalize()>
<android.widget.AnalogClock: void onDraw(android.graphics.Canvas)>
<android.text.TextUtils.StringSplitter: void setString(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glClearColor(float,float,float,float)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<android.text.Layout: int getLineBaseline(int)>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>
<android.app.Activity: android.view.View findViewById(int)>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>
<java.awt.event.WindowAdapter: void windowDeiconified(java.awt.event.WindowEvent)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>
<android.os.Parcel: void writeMap(java.util.Map)>
<android.content.ContentProviderOperation: int describeContents()>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addObjectValue(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Comparable,java.lang.Comparable,boolean,boolean)>
<android.app.ApplicationErrorReport.AnrInfo: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ProgramStore.Builder: void setBlendFunc(android.renderscript.ProgramStore.BlendSrcFunc,android.renderscript.ProgramStore.BlendDstFunc)>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>
<javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
<android.widget.VideoView: void onMeasure(int,int)>
<java.awt.EventQueue: void dispatchEvent(java.awt.AWTEvent)>
<android.widget.AutoCompleteTextView: void performValidation()>
<android.location.Address: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.BridgeContext: com.android.layoutlib.api.IProjectCallback getProjectCallback()>
<com.android.layoutlib.bridge.LayoutResult: void <init>(com.android.layoutlib.api.ILayoutResult.ILayoutViewInfo,java.awt.image.BufferedImage)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.OrientationEventListener: void enable()>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(int[],int)>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.util.List getInfo()>
<com.google.android.gles_jni.GLImpl: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.beans.PropertyEditorManager: void setEditorSearchPath(java.lang.String[])>
<android.content.Context: void unbindService(android.content.ServiceConnection)>
<java.awt.Component.FlipBufferStrategy: void revalidate()>
<javax.imageio.metadata.IIOMetadataFormat: int getObjectArrayMaxLength(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>
<java.awt.Graphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>
<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<java.awt.geom.Area: boolean isSingular()>
<javax.microedition.khronos.opengles.GL10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<javax.imageio.ImageIO: java.util.Iterator getImageWritersBySuffix(java.lang.String)>
<com.android.rs.image.ImageProcessingActivity: void onCreate(android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,java.nio.Buffer)>
<org.apache.harmony.awt.gl.font.CompositeFont: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext,java.awt.geom.AffineTransform)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.pim.vcard.VCardEntry: android.pim.vcard.VCardEntry buildFromResolver(android.content.ContentResolver)>
<android.ddm.DdmHandleAppName: void register()>
<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<javax.imageio.ImageWriteParam: void setProgressiveMode(int)>
<android.renderscript.ProgramVertex.MatrixAllocation: void setupOrthoNormalized(int,int)>
<android.os.SystemClock: long uptimeMillis()>
<android.util.AndroidException: void <init>(java.lang.Exception)>
<java.awt.image.DataBufferShort: void setElem(int,int,int)>
<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>
<java.awt.font.LineMetrics: float getDescent()>
<javax.imageio.stream.MemoryCacheImageOutputStream: int read()>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createIndexed(byte[],byte[],byte[],byte[],int,int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsListView: void onDetachedFromWindow()>
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>
<org.apache.harmony.awt.gl.font.CaretManager: java.awt.font.TextHitInfo getNextLeftHit(java.awt.font.TextHitInfo)>
<android.media.Ringtone: boolean isPlaying()>
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>
<java.awt.color.ICC_ColorSpace: void <init>(java.awt.color.ICC_Profile)>
<org.apache.harmony.awt.gl.image.OffscreenImage: void flush()>
<java.awt.geom.CubicCurve2D: java.awt.geom.Point2D getP1()>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>
<com.android.server.status.StatusBarService: void activate()>
<java.awt.event.WindowAdapter: void windowIconified(java.awt.event.WindowEvent)>
<android.graphics.Path: void rewind()>
<android.graphics.Paint: boolean isStrikeThruText()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>
<android.view.animation.BounceInterpolator: void <init>()>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<org.apache.harmony.awt.ContextStorage: java.awt.GraphicsEnvironment getGraphicsEnvironment()>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>
<org.apache.harmony.awt.gl.MultiRectArea: org.apache.harmony.awt.gl.MultiRectArea intersect(org.apache.harmony.awt.gl.MultiRectArea,org.apache.harmony.awt.gl.MultiRectArea)>
<com.android.layoutlib.bridge.BridgeTypedArray: int getLayoutDimension(int,java.lang.String)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo getNextLeftHit(java.awt.font.TextHitInfo)>
<android.widget.ExpandableListView: long getSelectedPosition()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void translate(double,double)>
<android.drm.mobile1.DrmRawContent: int getContentLength(android.drm.mobile1.DrmRights)>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>
<android.telephony.SmsMessage: boolean isMWIClearMessage()>
<java.awt.image.ColorModel: int getBlue(int)>
<android.content.pm.ApplicationInfo: void <init>()>
<java.awt.image.DataBufferFloat: void <init>(float[],int,int)>
<org.apache.harmony.awt.gl.image.PNGData: java.awt.image.ColorModel getColorModel()>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>
<java.beans.FeatureDescriptor: boolean isHidden()>
<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>
<android.webkit.DateSorter: void <init>(android.content.Context)>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>
<org.apache.harmony.awt.gl.render.JavaShapeRasterizer: void <init>()>
<android.hardware.Camera: void stopPreview()>
<java.awt.geom.Dimension2D: double getWidth()>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>
<android.os.ConditionVariable: void open()>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
<java.awt.image.DirectColorModel: int[] getComponents(java.lang.Object,int[],int)>
<android.app.LauncherActivity: java.util.List makeListItems()>
<android.webkit.HttpAuthHandler: void cancel()>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>
<javax.imageio.stream.FileImageInputStream: void <init>(java.io.RandomAccessFile)>
<android.app.ApplicationErrorReport.AnrInfo: void <init>()>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<java.awt.image.SampleModel: int getSampleSize(int)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>
<android.view.inputmethod.InputBinding: int getPid()>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>
<java.awt.image.renderable.ContextualRenderedImageFactory: java.lang.String[] getPropertyNames()>
<java.awt.geom.CubicCurve2D: double getFlatnessSq()>
<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>
<android.widget.ImageView: void setMaxWidth(int)>
<android.pim.vcard.VCardEntryHandler: void onEntryCreated(android.pim.vcard.VCardEntry)>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>
<android.content.SyncResult: java.lang.String toString()>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>
<com.android.server.am.ActivityManagerService: void killApplicationWithUid(java.lang.String,int)>
<java.awt.font.LineMetrics: float[] getBaselineOffsets()>
<android.os.Debug: void resetGlobalClassInitTime()>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>
<com.google.android.mms.pdu.PduComposer: void appendShortInteger(int)>
<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>
<android.view.Menu: void setQwertyMode(boolean)>
<android.os.Bundle: int describeContents()>
<org.apache.harmony.awt.wtk.NativeEvent: char getLastChar()>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Context: boolean deleteFile(java.lang.String)>
<javax.imageio.stream.ImageOutputStream: void writeChars(java.lang.String)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onText(java.lang.CharSequence)>
<org.apache.harmony.awt.gl.font.AndroidFont: void addGlyphs(char,char)>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>
<java.awt.geom.CubicCurve2D: double getCtrlX2()>
<java.awt.geom.RectangularShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentId(java.lang.String)>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>
<com.android.tools.layoutlib.create.LogAbortException: void error(com.android.tools.layoutlib.create.Log)>
<android.location.LocationListener: void onProviderDisabled(java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteUserActivity(int,int)>
<android.view.View: android.os.IBinder getApplicationWindowToken()>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<org.apache.harmony.awt.gl.Surface: int getSurfaceType()>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL11: void glNormalPointer(int,int,int)>
<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>
<java.awt.image.DataBufferByte: int getElem(int)>
<android.net.LocalSocket: int getReceiveBufferSize()>
<android.util.Base64InputStream: void mark(int)>
<android.widget.ImageView: void setAlpha(int)>
<android.view.animation.Transformation: float getAlpha()>
<android.widget.TabHost: void clearAllTabs()>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<android.net.UrlQuerySanitizer.ParameterValuePair: void <init>(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.Surface: boolean invalidated()>
<android.os.Environment: java.io.File getRootDirectory()>
<java.awt.geom.Point2D: java.lang.Object clone()>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<android.content.pm.PermissionGroupInfo: java.lang.String toString()>
<java.awt.RenderingHints: java.lang.Object clone()>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>
<com.android.server.am.ActivityManagerService: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.database.DataSetObservable: void notifyChanged()>
<android.view.MotionEvent: float getHistoricalY(int,int)>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>
<android.widget.GridView: void setStretchMode(int)>
<com.google.android.mms.pdu.SendReq: int getDeliveryReport()>
<android.widget.AbsListView: void onFilterComplete(int)>
<java.awt.Toolkit: void init()>
<org.apache.harmony.awt.wtk.NativeWindow: void setMaximizedBounds(java.awt.Rectangle)>
<android.graphics.Paint: int getAlpha()>
<android.media.SoundPool: void setPriority(int,int)>
<com.android.server.am.ActivityManagerService: android.content.Context main(int)>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>
<android.view.View: void onStartTemporaryDetach()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
<java.awt.AWTKeyStroke: int getKeyCode()>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(java.lang.Throwable)>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<android.content.Intent.FilterComparison: boolean equals(java.lang.Object)>
<android.appwidget.AppWidgetProvider: void <init>()>
<com.android.server.DevicePolicyManagerService: void lockNow()>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.String getElementDescription(java.lang.String,java.util.Locale)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.lang.String)>
<java.awt.EventQueue: java.awt.AWTEvent getNextEvent()>
<android.widget.Scroller: int getCurrY()>
<java.awt.FontMetrics: java.awt.font.LineMetrics getLineMetrics(char[],int,int,java.awt.Graphics)>
<android.widget.DatePicker.OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>
<java.awt.Cursor: void finalize()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.view.View: int getMeasuredHeight()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.graphics.Paint: void setUnderlineText(boolean)>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>
<android.content.ContentValues: boolean equals(java.lang.Object)>
<android.view.KeyCharacterMap: int get(int,int)>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<java.awt.image.Raster: java.awt.image.WritableRaster createInterleavedRaster(int,int,int,int,int,int[],java.awt.Point)>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>
<java.awt.image.PackedColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int,int)>
<java.awt.event.WindowListener: void windowDeiconified(java.awt.event.WindowEvent)>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.animation.DecelerateInterpolator: void <init>()>
<android.view.animation.Animation: void ensureInterpolator()>
<android.widget.AnalogClock: void onSizeChanged(int,int,int,int)>
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
<javax.imageio.stream.ImageInputStreamImpl: char readChar()>
<android.media.AudioService.VolumeStreamState: void setLastAudibleIndex(int)>
<android.provider.Contacts.People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<java.awt.image.SampleModel: void setSample(int,int,int,float,java.awt.image.DataBuffer)>
<android.widget.Scroller: void extendDuration(int)>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Document getOwnerDocument()>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: void performDefaultLayout()>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>
<android.webkit.CookieManager: java.lang.Object clone()>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<java.awt.Component: void setForeground(java.awt.Color)>
<android.app.ProgressDialog: void onStop()>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.renderscript.Allocation.Adapter1D: void setConstraint(android.renderscript.Dimension,int)>
<javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>
<android.app.ActivityThread.PackageInfo: java.lang.String getAppDir()>
<java.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int)>
<java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,int[],int,int,java.util.Hashtable)>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>
<android.util.SparseIntArray: void <init>(int)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(float)>
<android.renderscript.SimpleMesh.TriangleMeshBuilder: void addTriangle(int,int,int)>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>
<android.widget.ExpandableListView: boolean collapseGroup(int)>
<android.graphics.Point: int hashCode()>
<javax.imageio.stream.ImageInputStreamImpl: void setBitOffset(int)>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.pim.vcard.VCardComposer.OneEntryHandler: boolean onInit(android.content.Context)>
<android.view.KeyEvent: java.lang.String getCharacters()>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>
<org.apache.harmony.awt.state.MenuItemState: java.awt.Rectangle getTextBounds()>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>
<android.view.SubMenu: android.view.MenuItem getItem()>
<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>
<android.view.LayoutInflater: android.content.Context getContext()>
<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.net.Downloads.DownloadBase: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.awt.Component: void show()>
<android.content.Intent: java.lang.String getType()>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>
<android.pim.vcard.VCardComposer: void terminate()>
<com.google.android.mms.pdu.PduPart: void setContentDisposition(byte[])>
<android.widget.AbsListView: boolean isTextFilterEnabled()>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.graphics.drawable.shapes.RectShape: void <init>()>
<android.os.BatteryStats.Uid: void noteScanWifiLockReleasedLocked()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.widget.GridView: void setColumnWidth(int)>
<java.awt.EventQueue: void postEvent(java.awt.AWTEvent)>
<javax.imageio.ImageWriter: boolean canReplaceImageMetadata(int)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>
<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>
<java.awt.image.Raster: java.awt.image.WritableRaster createBandedRaster(int,int,int,int,java.awt.Point)>
<android.preference.PreferenceGroup: void removeAll()>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.text.format.Time: java.lang.String format2445()>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>
<java.awt.Component: void repaint(long)>
<android.view.MenuInflater: void <init>(android.content.Context)>
<java.awt.GraphicsEnvironment: void preferProportionalFonts()>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>
<android.renderscript.ProgramRaster.Builder: void setPointSmoothEnable(boolean)>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<org.apache.harmony.awt.gl.font.AndroidFontManager: java.awt.peer.FontPeer createDefaultFont(int,int)>
<android.opengl.GLES10: void glFogf(int,float)>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.net.TrafficStats: long getUidTxBytes(int)>
<javax.imageio.stream.ImageInputStreamImpl: void seek(long)>
<android.content.res.Resources: int getInteger(int)>
<org.apache.harmony.awt.gl.ImageSurface: java.awt.image.ColorModel getColorModel()>
<android.pim.EventRecurrence: int day2TimeDay(int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>
<java.awt.geom.Area: boolean equals(java.awt.geom.Area)>
<java.awt.image.ComponentColorModel: int getGreen(java.lang.Object)>
<java.awt.geom.RoundRectangle2D.Double: double getX()>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.text.DynamicLayout: int getTopPadding()>
<android.app.SearchDialog.SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.shapes.Shape: float getWidth()>
<android.accounts.AccountsException: void <init>()>
<java.awt.Toolkit: void setLockingKeyState(int,boolean)>
<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,int[],int)>
<android.renderscript.ProgramFragment.Builder: android.renderscript.ProgramFragment create()>
<java.awt.image.renderable.RenderableImageProducer: void startProduction(java.awt.image.ImageConsumer)>
<android.webkit.UrlInterceptRegistry: boolean registerHandler(android.webkit.UrlInterceptHandler)>
<android.pim.vcard.exception.VCardInvalidCommentLineException: void <init>()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>
<org.apache.harmony.awt.wtk.NativeEvent: int getKeyLocation()>
<java.awt.image.LookupTable: void <init>(int,int)>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>
<android.content.SyncResult: boolean hasHardError()>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>
<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.text.SpannableStringBuilder: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glClearColor(float,float,float,float)>
<android.pim.ICalendar.FormatException: void <init>(java.lang.String,java.lang.Throwable)>
<java.awt.Font: java.lang.String getPSName()>
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>
<android.webkit.WebView: void reload()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>
<android.view.View: android.view.View findViewById(int)>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeMouseInfo getNativeMouseInfo()>
<android.pim.vcard.VCardEntry: void <init>()>
<android.location.Location: void setLatitude(double)>
<org.apache.harmony.awt.gl.image.OffscreenImage: int getState()>
<android.widget.AbsSeekBar: void <init>(android.content.Context)>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<android.app.Dialog: void onStart()>
<android.preference.Preference: java.lang.String toString()>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>
<com.android.server.NativeDaemonConnectorException: int getCode()>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>
<android.provider.Telephony.Mms: java.lang.String getMessageBoxName(int)>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>
<android.database.Cursor: int getInt(int)>
<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.GenericPdu parse()>
<javax.imageio.ImageReader: void computeRegions(javax.imageio.ImageReadParam,int,int,java.awt.image.BufferedImage,java.awt.Rectangle,java.awt.Rectangle)>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.gesture.GestureStore: int getOrientationStyle()>
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>
<android.os.Parcel: void readDoubleArray(double[])>
<java.awt.geom.Point2D: void <init>()>
<android.database.AbstractCursor: boolean requery()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void setXORMode(java.awt.Color)>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>
<android.view.MotionEvent: void setAction(int)>
<android.widget.AdapterView: long getSelectedItemId()>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int getMaxDecent()>
<java.awt.image.MultiPixelPackedSampleModel: void setSample(int,int,int,int,java.awt.image.DataBuffer)>
<java.awt.geom.Area: boolean isPolygonal()>
<android.content.Context: java.lang.String getPackageName()>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>
<android.media.JetPlayer: boolean pause()>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,int)>
<java.awt.geom.QuadCurve2D: java.lang.Object clone()>
<java.awt.image.ColorModel: int getAlpha(int)>
<com.android.server.am.BatteryStatsService: void noteStartAudio(int)>
<android.ddm.DdmHandleHeap: void connected()>
<android.app.Instrumentation: void start()>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>
<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>()>
<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<android.text.Editable: android.text.Editable delete(int,int)>
<java.awt.image.BandedSampleModel: int getSample(int,int,int,java.awt.image.DataBuffer)>
<android.graphics.RectF: float centerX()>
<java.awt.image.SinglePixelPackedSampleModel: int[] getSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>
<java.awt.event.ContainerEvent: void <init>(java.awt.Component,int,java.awt.Component)>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>
<android.content.res.Resources: float getDimension(int)>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>
<java.awt.image.ComponentColorModel: boolean isCompatibleSampleModel(java.awt.image.SampleModel)>
<android.view.Menu: void setGroupEnabled(int,boolean)>
<com.android.server.status.LatestItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>
<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>
<android.view.InflateException: void <init>(java.lang.Throwable)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReader: java.util.Iterator getImageTypes(int)>
<org.apache.harmony.awt.gl.image.PngDecoderJava: boolean verifyCRC(byte[],byte[],long)>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>
<org.apache.harmony.awt.gl.font.FontManager: java.lang.Short getLCID(java.util.Locale)>
<android.view.SubMenu: void clearHeader()>
<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>
<android.text.Layout: int getLineVisibleEnd(int)>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isHtml()>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>
<android.view.View: void requestLayout()>
<java.awt.image.BandedSampleModel: float getSampleFloat(int,int,int,java.awt.image.DataBuffer)>
<android.app.Instrumentation: boolean isProfiling()>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.ContentValues: java.lang.String toString()>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>
<android.view.Window: void setContentView(android.view.View)>
<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitIntInsn(int,int)>
<android.provider.MediaStore.Images.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.text.format.DateUtils: java.lang.String getAMPMString(int)>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>
<android.renderscript.ProgramVertex.MatrixAllocation: void loadModelview(android.renderscript.Matrix4f)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitSource(java.lang.String,java.lang.String)>
<android.util.StateSet: boolean isWildCard(int[])>
<android.widget.ViewFlipper: void stopFlipping()>
<org.apache.harmony.awt.im.InputMethodContext: java.awt.font.TextHitInfo getLocationOffset(int,int)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: void removeDataBufferListener(java.awt.image.DataBuffer)>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.AudioTrack: int setPlaybackRate(int)>
<android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>
<android.view.animation.AnimationSet: long computeDurationHint()>
<java.awt.image.WritableRaster: void setSamples(int,int,int,int,int,double[])>
<android.webkit.WebView: void reload()>
<com.android.server.ProcessStats: void init()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.text.method.ArrowKeyMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<java.awt.im.InputMethodHighlight: int getVariation()>
<javax.imageio.stream.ImageInputStreamImpl: boolean isCachedMemory()>
<android.widget.TextView: void append(java.lang.CharSequence)>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>
<org.apache.harmony.awt.gl.MultiRectAreaOp: int[] createBuf(int)>
<org.apache.harmony.awt.gl.image.PNGData: short getBitsPerPixel()>
<com.google.android.mms.pdu.PduParser: int parseValueLength(java.io.ByteArrayInputStream)>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>
<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>
<com.android.server.LightsService.Light: void setColor(int)>
<android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.view.animation.Animation: int getRepeatCount()>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>
<javax.imageio.metadata.IIOMetadataNode: java.lang.String lookupNamespaceURI(java.lang.String)>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<android.app.ActivityGroup: void onDestroy()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.view.ViewGroup: void addView(android.view.View,int)>
<java.awt.image.Raster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Rectangle,java.awt.Point,java.awt.image.Raster)>
<com.android.server.am.BatteryStatsService: void noteScanWifiLockReleased(int)>
<android.app.ActivityGroup: void onStop()>
<android.hardware.Camera: void unlock()>
<org.apache.harmony.awt.wtk.ShutdownWatchdog: void setWindowListEmpty(boolean)>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>
<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>
<android.graphics.RectF: void round(android.graphics.Rect)>
<android.media.AsyncPlayer: void <init>(java.lang.String)>
<android.pim.vcard.VCardParser_V21: boolean isValidEncoding(java.lang.String)>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>
<android.media.ExifInterface: boolean getLatLong(float[])>
<android.os.TokenWatcher: boolean isAcquired()>
<android.app.Dialog: void <init>(android.content.Context,int)>
<java.awt.image.ImageFilter: void setHints(int)>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.Resources.Theme getTheme()>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>
<android.pim.ContactsAsyncHelper.ImageTracker: android.net.Uri getPhotoUri()>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>
<android.renderscript.ProgramVertex.MatrixAllocation: void loadProjection(android.renderscript.Matrix4f)>
<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelectionBackReference(int,int)>
<android.content.ContentProviderOperation: java.lang.String toString()>
<android.provider.SyncStateContract.Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<java.awt.image.renderable.ParameterBlock: java.util.Vector getSources()>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>
<android.app.Activity: void onAttachedToWindow()>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>
<android.pim.vcard.VCardBuilder: void <init>(int)>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
<android.server.BluetoothService: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>
<android.app.UiModeManager: int getCurrentModeType()>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
<android.graphics.RectF: java.lang.String toString()>
<javax.imageio.ImageIO: java.lang.String[] getReaderMIMETypes()>
<org.apache.harmony.awt.ListenerList: void <init>()>
<android.provider.Calendar.Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>
<com.google.android.gles_jni.GLImpl: void glTexParameterx(int,int,int)>
<org.apache.harmony.awt.gl.font.TextMetricsCalculator: void <init>(org.apache.harmony.awt.gl.font.TextRunBreaker)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>
<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOff()>
<javax.imageio.event.IIOWriteProgressListener: void thumbnailStarted(javax.imageio.ImageWriter,int,int)>
<android.content.Context: android.content.res.AssetManager getAssets()>
<java.awt.Adjustable: void addAdjustmentListener(java.awt.event.AdjustmentListener)>
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>
<org.apache.harmony.awt.ListenerList: java.util.List getUserListeners()>
<java.awt.Component: void setMinimumSize(java.awt.Dimension)>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>
<android.webkit.WebStorage: void deleteAllData()>
<android.widget.TabWidget.OnTabSelectionChanged: void onTabSelectionChanged(int,boolean)>
<java.awt.Component: void enable(boolean)>
<android.view.MotionEvent: float getYPrecision()>
<java.awt.Graphics: void drawLine(int,int,int,int)>
<android.widget.AdapterView: void setFocusable(boolean)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
<android.graphics.Camera: void rotateZ(float)>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: java.lang.String getName()>
<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,boolean)>
<android.widget.TextView: boolean getLinksClickable()>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>
<org.apache.harmony.awt.gl.MultiRectArea: void translate(int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>
<android.hardware.Camera.Parameters: void setRotation(int)>
<java.awt.Component: boolean contains(int,int)>
<org.apache.harmony.awt.gl.image.PNGData: short getCompression()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<org.apache.harmony.awt.gl.font.FontProperty: int[] getExclusionRange()>
<java.awt.geom.Point2D.Float: void setLocation(double,double)>
<java.awt.image.DataBufferFloat: void setElemFloat(int,int,float)>
<org.apache.harmony.awt.ListenerList: void addUserListener(java.util.EventListener)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.os.Looper: void setMessageLogging(android.util.Printer)>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>
<java.awt.geom.CubicCurve2D: java.awt.geom.Point2D getP2()>
<org.apache.harmony.awt.gl.font.TextRunSegmentImpl.TextRunSegmentGraphic: java.lang.Object clone()>
<android.widget.TextView: int getSelectionStart()>
<android.speech.RecognitionService: void onCancel(android.speech.RecognitionService.Callback)>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>
<org.apache.harmony.awt.gl.MultiRectArea.LineCash: void addLine(int[],int)>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>
<java.awt.event.KeyEvent: void setModifiers(int)>
<android.server.BluetoothService: boolean cancelPairingUserInput(java.lang.String)>
<android.view.MotionEvent: int getPointerId(int)>
<javax.imageio.ImageWriter: void prepareInsertEmpty(int,javax.imageio.ImageTypeSpecifier,int,int,javax.imageio.metadata.IIOMetadata,java.util.List,javax.imageio.ImageWriteParam)>
<android.text.BoringLayout: void ellipsized(int,int)>
<javax.imageio.stream.ImageOutputStream: void writeBytes(java.lang.String)>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: void freeBefore(long)>
<org.apache.harmony.awt.gl.TextRenderer: void drawString(java.awt.Graphics2D,java.lang.String,int,int)>
<java.awt.geom.Arc2D: void setArcType(int)>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,int,int)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int)>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>
<java.awt.FontMetrics: int[] getWidths()>
<android.util.FloatMath: float sin(float)>
<com.android.commands.svc.WifiCommand: void <init>()>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<com.android.layoutlib.bridge.BridgeContext: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<android.view.View: boolean isPressed()>
<java.beans.IndexedPropertyDescriptor: void setIndexedWriteMethod(java.lang.reflect.Method)>
<android.text.util.Rfc822Token: java.lang.String getName()>
<java.awt.font.TextLayout: void handleJustify(float)>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>
<android.provider.Telephony.Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>
<org.apache.harmony.awt.gl.image.ImageDecoder: void terminate()>
<javax.imageio.IIOImage: void setRenderedImage(java.awt.image.RenderedImage)>
<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>
<java.awt.HeadlessToolkit: java.awt.Dimension getBestCursorSize(int,int)>
<android.widget.EditText: void setSelection(int,int)>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(java.awt.Rectangle)>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageClass()>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>
<com.android.server.PackageManagerBackupAgent: boolean hasMetadata()>
<java.awt.image.DataBufferShort: short[] getData()>
<android.view.View: void onLayout(boolean,int,int,int,int)>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>
<com.google.android.collect.Sets: java.util.HashSet newHashSet()>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.view.View: boolean isHapticFeedbackEnabled()>
<android.database.CursorWrapper: long getLong(int)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setDataElements(int,int,java.awt.image.Raster)>
<java.awt.image.LookupOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
<android.os.BinderProxy: void dump(java.io.FileDescriptor,java.lang.String[])>
<android.hardware.Camera.Parameters: void setAntibanding(java.lang.String)>
<android.database.AbstractWindowedCursor: double getDouble(int)>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>
<javax.imageio.stream.ImageOutputStream: void writeChars(char[],int,int)>
<android.text.util.Rfc822Token: void setComment(java.lang.String)>
<org.apache.harmony.awt.gl.font.FontMetricsImpl: int charWidth(char)>
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>
<android.view.Window: void setGravity(int)>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>
<android.app.Activity: int getChangingConfigurations()>
<android.speech.srec.Recognizer: int getResultCount()>
<java.awt.event.KeyAdapter: void keyReleased(java.awt.event.KeyEvent)>
<android.webkit.WebView: java.lang.String getTitle()>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>
<com.android.common.OperationScheduler: com.android.common.OperationScheduler.Options parseOptions(java.lang.String,com.android.common.OperationScheduler.Options)>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>
<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>
<android.widget.TextView: void onEditorAction(int)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>
<android.location.Criteria: void setCostAllowed(boolean)>
<org.apache.harmony.awt.gl.image.ByteArrayDecodingImageSource: java.io.InputStream getInputStream()>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Email: int getTypeLabelResource(int)>
<android.provider.Telephony.Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.app.Activity: void onResume()>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.webkit.Plugin: void setPath(java.lang.String)>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<android.content.res.AssetManager.AssetInputStream: void finalize()>
<android.webkit.WebView: void goBackOrForward(int)>
<android.view.View: boolean isDrawingCacheEnabled()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitVarInsn(int,int)>
<com.android.fountain.Fountain: void onCreate(android.os.Bundle)>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriterSpi: boolean canEncodeImage(javax.imageio.ImageTypeSpecifier)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,int[],int)>
<org.apache.harmony.awt.gl.font.CommonGlyphVector: java.awt.font.FontRenderContext getFontRenderContext()>
<android.provider.ContactsContract.CommonDataKinds.Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.content.pm.PackageStats: void <init>(java.lang.String)>
<android.view.View: int getNextFocusRightId()>
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>
<android.widget.PopupWindow: boolean isShowing()>
<android.content.Intent: java.lang.String toUri(int)>
<android.widget.HorizontalScrollView: void fling(int)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
<android.provider.Telephony.Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitTypeArgument()>
<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.DataBufferUShort: void <init>(short[][],int)>
<android.util.SparseIntArray: void append(int,int)>
<javax.imageio.ImageReader: void processSequenceStarted(int)>
<android.widget.Adapter: int getCount()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>
<android.pim.vcard.VCardParser_V21: void handleParamWithoutName(java.lang.String)>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.event.KeyAdapter: void keyTyped(java.awt.event.KeyEvent)>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>
<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.view.KeyEvent.DispatcherState: void reset()>
<com.google.android.mms.pdu.NotifyRespInd: int getStatus()>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>
<android.app.ActivityThread.PackageInfo: void <init>(android.app.ActivityThread,java.lang.String,android.content.Context,android.content.pm.ApplicationInfo)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteri(int,int,int)>
<android.graphics.Paint: void setUnderlineText(boolean)>
<org.apache.harmony.awt.wtk.NativeEventThread: void <init>()>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>
<android.widget.TextView: int getCompoundPaddingLeft()>
<android.net.Uri: boolean isRelative()>
<java.awt.Component: boolean lostFocus(java.awt.Event,java.lang.Object)>
<android.pim.vcard.VCardEntryCommitter: void onEntryCreated(android.pim.vcard.VCardEntry)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixel(int,int,int[])>
<android.content.ContextWrapper: java.lang.String[] databaseList()>
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.text.format.Time: boolean after(android.text.format.Time)>
<android.os.Parcel: void writeCharArray(char[])>
<java.awt.geom.QuadCurve2D: void setCurve(java.awt.geom.QuadCurve2D)>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>
<android.view.accessibility.AccessibilityManager: void interrupt()>
<android.opengl.GLES20: void glUniform1i(int,int)>
<android.view.KeyEvent: boolean isLongPress()>
<javax.imageio.ImageReader: void removeIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)>
<android.database.CursorWrapper: boolean isLast()>
<java.awt.event.InputMethodEvent: long getWhen()>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<java.awt.image.SampleModel: double[] getPixels(int,int,int,int,double[],java.awt.image.DataBuffer)>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>
<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>
<android.webkit.WebIconDatabase: void open(java.lang.String)>
<com.android.server.AttributeCache: void <init>(android.content.Context)>
<javax.imageio.event.IIOReadUpdateListener: void passComplete(javax.imageio.ImageReader,java.awt.image.BufferedImage)>
<com.google.android.gles_jni.EGLImpl: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<java.awt.Graphics: void drawString(java.text.AttributedCharacterIterator,int,int)>
<com.android.common.OperationScheduler: void onSuccess()>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>
<com.android.layoutlib.bridge.BridgeContext: java.io.File getFilesDir()>
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>
<java.awt.image.renderable.ContextualRenderedImageFactory: java.lang.Object getProperty(java.awt.image.renderable.ParameterBlock,java.lang.String)>
<com.google.android.maps.MapView: boolean canCoverCenter()>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>
<android.content.IntentFilter: boolean hasDataType(java.lang.String)>
<java.awt.font.GlyphMetrics: boolean isCombining()>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<android.graphics.PointF: void set(float,float)>
<java.awt.ComponentBehavior: void onMove(int,int)>
<java.awt.im.InputMethodRequests: int getInsertPositionOffset()>
<android.inputmethodservice.ExtractEditText: boolean performClick()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getDisplayFrameLw()>
<java.awt.Font: java.awt.Font deriveFont(int,java.awt.geom.AffineTransform)>
<android.telephony.PhoneStateListener: void <init>()>
<java.awt.GraphicsConfiguration: java.awt.image.ColorModel getColorModel(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>
<android.text.GetChars: void getChars(int,int,char[],int)>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<javax.imageio.ImageReader: void processWarningOccurred(java.lang.String,java.lang.String)>
<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<android.os.BinderProxy: boolean pingBinder()>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,int[],int)>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<android.graphics.Movie: int width()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
<java.awt.geom.RectangularShape: boolean contains(java.awt.geom.Rectangle2D)>
<java.awt.image.renderable.RenderContext: void setAreaOfInterest(java.awt.Shape)>
<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>
<android.database.AbstractCursor: boolean moveToPrevious()>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>
<android.widget.ListView: boolean removeFooterView(android.view.View)>
<java.awt.Component: void requestFocus()>
<android.view.ViewParent: boolean isLayoutRequested()>
<javax.imageio.event.IIOReadProgressListener: void imageComplete(javax.imageio.ImageReader)>
<android.widget.TableRow: android.widget.TableRow.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.opengl.GLES20: java.lang.String glGetString(int)>
<javax.imageio.spi.ServiceRegistry: java.util.Iterator getServiceProviders(java.lang.Class,boolean)>
<javax.imageio.ImageReader: void processSequenceComplete()>
<java.awt.Component: boolean imageUpdate(java.awt.Image,int,int,int,int,int)>
<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>
<android.graphics.Path: java.awt.Shape getAwtShape()>
<android.os.HandlerThread: int getThreadId()>
<java.awt.image.MemoryImageSource: void addConsumer(java.awt.image.ImageConsumer)>
<org.apache.harmony.awt.wtk.WindowFactory: org.apache.harmony.awt.wtk.NativeWindow createWindow(org.apache.harmony.awt.wtk.CreationParams)>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>
<android.os.Debug: long getNativeHeapSize()>
<java.awt.image.RenderedImage: int getMinX()>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<java.awt.image.BufferedImage: int getTransparency()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>
<android.os.Bundle: int getInt(java.lang.String)>
<android.util.SparseBooleanArray: boolean get(int,boolean)>
<android.widget.TabHost.IndicatorStrategy: android.view.View createIndicatorView()>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>
<android.media.MediaPlayer: int getVideoWidth()>
<android.sax.Element: java.lang.String toString()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>
<android.preference.RingtonePreference: int getRingtoneType()>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>
<java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
<android.widget.ExpandableListAdapter: boolean isEmpty()>
<android.util.PrintWriterPrinter: void println(java.lang.String)>
<android.database.CursorWindow: void onAllReferencesReleased()>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
<android.widget.RatingBar: void <init>(android.content.Context)>
<android.widget.RatingBar: void setNumStars(int)>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>
<android.preference.PreferenceScreen: void onClick()>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>
<org.apache.harmony.awt.wtk.ShutdownWatchdog: void setAwtQueueEmpty(boolean)>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>
<java.awt.image.RenderedImage: int getTileGridYOffset()>
<android.speech.srec.Recognizer: java.lang.String getResult(int,java.lang.String)>
<android.os.CountDownTimer: void onFinish()>
<java.awt.image.BandedSampleModel: void setSamples(int,int,int,int,int,int[],java.awt.image.DataBuffer)>
<javax.imageio.ImageWriter: void writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
<android.view.VelocityTracker: float getYVelocity()>
<com.android.server.AttributeCache.Entry: void <init>(android.content.Context,android.content.res.TypedArray)>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>
<android.renderscript.ProgramFragment.Builder: void setPointSpriteTexCoordinateReplacement(boolean)>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>
<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>
<java.awt.image.PixelGrabber: void abortGrabbing()>
<java.awt.image.SinglePixelPackedSampleModel: int getSampleSize(int)>
<javax.imageio.ImageReader: void processThumbnailComplete()>
<java.awt.image.WritableRaster: void setRect(int,int,java.awt.image.Raster)>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>
<com.android.server.status.StatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.graphics.Matrix: void setSkew(float,float)>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>
<android.util.TimingLogger: void <init>(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.gl.Crossing: boolean isInsideEvenOdd(int)>
<android.view.View: boolean isFocusableInTouchMode()>
<android.widget.ExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<com.google.android.gles_jni.GLImpl: void glFrustumx(int,int,int,int,int,int)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUri(java.lang.String)>
<java.awt.image.DataBufferByte: byte[] getData()>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,boolean,boolean)>
<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.PduBody parseParts(java.io.ByteArrayInputStream)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<android.content.BroadcastReceiver: void <init>()>
<java.beans.FeatureDescriptor: void setExpert(boolean)>
<java.awt.Dimension: java.lang.String toString()>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>
<android.appwidget.AppWidgetHost: void stopListening()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>
<com.android.server.status.IconData: com.android.server.status.IconData makeText(java.lang.String,java.lang.CharSequence)>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>
<java.awt.AWTKeyStroke: void <init>(char,int,int,boolean)>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.view.View: int getWindowAttachCount()>
<org.apache.harmony.awt.gl.font.AndroidFont: java.lang.String getFontName()>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.webkit.CookieManager: boolean hasCookies()>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>
<android.hardware.Camera.Parameters: boolean isSmoothZoomSupported()>
<java.awt.image.BufferStrategy: boolean contentsLost()>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>
<android.server.BluetoothA2dpService: void <init>(android.content.Context,android.server.BluetoothService)>
<android.graphics.RectF: float centerY()>
<com.android.server.am.ActivityManagerService: void activityStopped(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawPolygon(java.awt.Polygon)>
<android.hardware.Camera.Parameters: int getMaxZoom()>
<java.awt.image.MultiPixelPackedSampleModel: void setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>
<android.graphics.Color: int argb(int,int,int,int)>
<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>
<java.awt.event.InputEvent: boolean isConsumed()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
<android.app.Activity: void onBackPressed()>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>
<com.android.layoutlib.bridge.BridgeResources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<javax.imageio.ImageTranscoder: javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<android.os.AsyncTask: void onCancelled()>
<com.google.android.gles_jni.GLImpl: void glBindFramebufferOES(int,int)>
<android.server.BluetoothService: boolean setName(java.lang.String)>
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>
<android.view.View: void dispatchSetPressed(boolean)>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>
<android.database.CursorWrapper: int getInt(int)>
<javax.imageio.spi.ImageReaderWriterSpi: boolean isStandardStreamMetadataFormatSupported()>
<java.awt.font.GlyphVector: java.awt.font.GlyphMetrics getGlyphMetrics(int)>
<android.content.ContentProviderOperation: boolean isReadOperation()>
<android.graphics.Rect: boolean contains(int,int,int,int)>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>
<android.webkit.WebView: android.view.View getZoomControls()>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>
<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>
<android.graphics.Matrix: void reset()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addAttribute(java.lang.String,java.lang.String,int,boolean,java.lang.String,java.util.List)>
<com.google.android.mms.pdu.PduComposer: void append(int)>
<javax.imageio.ImageTypeSpecifier: javax.imageio.ImageTypeSpecifier createInterleaved(java.awt.color.ColorSpace,int[],int,boolean,boolean)>
<javax.imageio.ImageWriteParam: int getTileHeight()>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<java.awt.geom.QuadCurve2D.Float: double getCtrlX()>
<java.awt.image.BandCombineOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)>
<java.awt.image.RenderedImage: int getNumXTiles()>
<java.awt.geom.RoundRectangle2D.Float: void setRoundRect(java.awt.geom.RoundRectangle2D)>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>
<java.awt.geom.GeneralPath: void moveTo(float,float)>
<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<com.android.server.status.StorageNotification: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
<java.awt.geom.AffineTransform: void rotate(double)>
<java.awt.image.DataBufferFloat: void setElemFloat(int,float)>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>
<android.location.Location: void writeToParcel(android.os.Parcel,int)>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>
<java.awt.font.GlyphMetrics: float getAdvance()>
<java.awt.event.InputEvent: boolean isAltDown()>
<javax.imageio.ImageIO: java.lang.String[] getWriterMIMETypes()>
<java.awt.image.PixelInterleavedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>
<android.widget.AdapterView: void <init>(android.content.Context)>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.Object[] getObjectEnumerations(java.lang.String)>
<android.os.Message: android.os.Bundle getData()>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>
<android.graphics.drawable.RotateDrawable: boolean isStateful()>
<android.opengl.GLES20: void glBindBuffer(int,int)>
<android.server.BluetoothA2dpService: boolean disconnectSink(android.bluetooth.BluetoothDevice)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)>
<javax.imageio.metadata.IIOMetadata: boolean activateController()>
<android.view.animation.Animation: void setFillEnabled(boolean)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getBeforeText()>
<android.text.StaticLayout: int getEllipsizedWidth()>
<java.awt.font.TextMeasurer: void insertChar(java.text.AttributedCharacterIterator,int)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<javax.microedition.khronos.opengles.GL10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<java.awt.event.MouseMotionAdapter: void mouseMoved(java.awt.event.MouseEvent)>
<android.text.Layout: int getLineCount()>
<android.database.sqlite.SQLiteProgram: void close()>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>
<org.apache.harmony.awt.gl.Surface: int getTransparency()>
<java.awt.image.SampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)>
<android.pim.vcard.exception.VCardVersionException: void <init>(java.lang.String)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>
<android.webkit.WebView: void disablePlatformNotifications()>
<android.app.Activity: boolean requestWindowFeature(int)>
<android.os.RemoteCallbackList: void kill()>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>
<android.widget.EditText: void setSelection(int)>
<java.awt.RenderingHints.Key: void <init>(int)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.RenderableImage getRenderableSource(int)>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
<java.awt.event.MouseWheelEvent: java.lang.String paramString()>
<javax.imageio.metadata.IIOMetadataFormatImpl: void addObjectValue(java.lang.String,java.lang.Class,boolean,java.lang.Object,java.util.List)>
<android.os.Parcel: boolean[] createBooleanArray()>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>
<android.media.FaceDetector.Face: float eyesDistance()>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>
<android.graphics.Canvas: void drawRGB(int,int,int)>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>
<android.location.Address: void setAddressLine(int,java.lang.String)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>
<android.view.View: void setFocusable(boolean)>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<org.apache.harmony.awt.gl.CommonGraphics2D: void fillRect(int,int,int,int)>
<java.awt.event.InputMethodEvent: java.awt.font.TextHitInfo getVisiblePosition()>
<java.awt.image.ComponentColorModel: int getBlue(java.lang.Object)>
<java.awt.image.Raster: java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer,int,int,int,int[],java.awt.Point)>
<org.apache.harmony.awt.wtk.ShutdownWatchdog: void setNativeQueueEmpty(boolean)>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<java.awt.font.TextLayout: java.awt.font.TextHitInfo hitTestChar(float,float,java.awt.geom.Rectangle2D)>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>
<android.view.ViewGroup: void <init>(android.content.Context)>
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>
<android.widget.PopupWindow: android.view.View getContentView()>
<org.apache.harmony.awt.gl.color.ColorScaler: void unscale(short[],java.awt.image.WritableRaster)>
<android.widget.ExpandableListAdapter: long getGroupId(int)>
<android.server.BluetoothService: boolean disable(boolean)>
<android.os.Debug: int getThreadGcInvocationCount()>
<java.awt.geom.Arc2D.Double: double getAngleExtent()>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValue(java.lang.String,java.lang.Object)>
<android.os.Bundle: void <init>(int)>
<android.pim.vcard.VCardConfig: int getVCardTypeFromString(java.lang.String)>
<com.android.common.ArrayListCursor: short getShort(int)>
<java.awt.geom.Point2D: void setLocation(double,double)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(int,int)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.net.MailTo: java.lang.String getCc()>
<android.app.SearchDialog.SearchAutoComplete: void setThreshold(int)>
<android.inputmethodservice.Keyboard: int getKeyHeight()>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>
<java.awt.geom.CubicCurve2D.Double: java.awt.geom.Point2D getP1()>
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>
<java.awt.image.ComponentSampleModel: int getSampleSize(int)>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>
<android.view.View: int getNextFocusUpId()>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.mms.pdu.PduPart: void setFilename(byte[])>
<android.graphics.Path: void toggleInverseFillType()>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.opengl.GLES10: void glAlphaFunc(int,float)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Sampler.Builder: void setMag(android.renderscript.Sampler.Value)>
<com.android.film.FilmView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.os.Parcel: int dataPosition()>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.GraphicsConfiguration: java.awt.image.ColorModel getColorModel()>
<android.net.Uri: int hashCode()>
<javax.imageio.spi.IIOServiceProvider: java.lang.String getVersion()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>
<android.database.CursorWrapper: short getShort(int)>
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.text.TextUtils.SimpleStringSplitter: void setString(java.lang.String)>
<android.media.AudioRecord: void stop()>
<java.awt.Component: java.awt.peer.ComponentPeer getPeer()>
<android.webkit.WebView: void documentHasImages(android.os.Message)>
<android.app.AlarmManager: void setTime(long)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.String getAttributeMinValue(java.lang.String,java.lang.String)>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>
<android.content.Context: java.lang.String getString(int)>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: long length()>
<android.text.TextUtils.SimpleStringSplitter: void <init>(char)>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>
<javax.imageio.ImageReader: int getThumbnailWidth(int,int)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>
<java.awt.font.TextLayout: float getAscent()>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.BridgeTypedArray: int length()>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>
<android.view.Window: void setSoftInputMode(int)>
<android.app.ActivityGroup: void onPause()>
<android.pim.vcard.VCardParser_V30: java.lang.String maybeUnescapeCharacter(char)>
<android.view.Window: android.view.View peekDecorView()>
<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>
<java.awt.MenuComponent: void <init>()>
<android.app.Dialog: void onBackPressed()>
<java.awt.geom.RoundRectangle2D.Float: double getArcHeight()>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(java.util.ArrayList)>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>
<java.awt.font.TextHitInfo: java.awt.font.TextHitInfo afterOffset(int)>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>
<java.awt.Component: void show(boolean)>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>
<android.widget.ProgressBar: int getProgress()>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>
<android.opengl.GLES10: void glPolygonOffset(float,float)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<org.apache.harmony.awt.gl.ICompositeContext: void <init>(java.awt.Composite,java.awt.image.ColorModel,java.awt.image.ColorModel)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>
<com.android.server.LightsService.Light: void pulse(int,int)>
<java.awt.geom.Arc2D: void setArc(double,double,double,double,double,double,int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageWriter: java.awt.image.BufferedImage getBufImage()>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,float[],int)>
<android.webkit.WebHistoryItem: int getId()>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.view.View: void getHitRect(android.graphics.Rect)>
<java.awt.geom.RectangularShape: double getCenterX()>
<java.awt.Color: int HSBtoRGB(float,float,float)>
<android.widget.AbsListView: void <init>(android.content.Context)>
<com.google.android.maps.MapView: void setStreetView(boolean)>
<android.webkit.WebSettings: boolean getSavePassword()>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>
<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.NodeList getChildNodes()>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
<android.app.ApplicationErrorReport.BatteryInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.ViewFlipper: boolean isAutoStart()>
<android.widget.TextView: void setLines(int)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.drm.mobile1.DrmRightsManager: void <init>()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String,java.lang.String)>
<android.hardware.GeomagneticField: float getHorizontalStrength()>
<android.provider.MediaStore.Audio.Genres.Members: android.net.Uri getContentUri(java.lang.String,long)>
<java.awt.geom.Line2D: double ptLineDistSq(double,double)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.opengl.GLES10: int glGetError()>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>
<com.android.tools.layoutlib.create.RenameClassAdapter.RenameMethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>
<java.awt.image.BufferedImage: int getNumXTiles()>
<com.android.layoutlib.bridge.BridgeContext: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.media.ToneGenerator: boolean startTone(int,int)>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>
<android.webkit.WebView: boolean canGoForward()>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,java.nio.IntBuffer)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newDelete(android.net.Uri)>
<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.awt.image.ColorModel: boolean hasAlpha()>
<android.content.Context: java.lang.ClassLoader getClassLoader()>
<java.awt.Component: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>
<com.android.server.MasterClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<java.awt.geom.Line2D.Float: void <init>(float,float,float,float)>
<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>
<java.awt.Image: float getAccelerationPriority()>
<com.android.server.status.StatusBarView: void onLayout(boolean,int,int,int,int)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.os.Bundle: void putFloat(java.lang.String,float)>
<java.awt.font.ImageGraphicAttribute: float getAdvance()>
<android.location.Location: float distanceTo(android.location.Location)>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<android.database.CursorWrapper: boolean move(int)>
<android.gesture.Gesture: float getLength()>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<android.net.LocalSocket: void <init>()>
<org.apache.harmony.awt.wtk.NativeRobot: java.awt.Color getPixel(int,int)>
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener.Capitalize,java.lang.CharSequence,int)>
<android.telephony.PhoneNumberUtils: boolean is12Key(char)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock set(double,int)>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>
<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>
<java.awt.FontMetrics: int getMaxAscent()>
<android.pim.vcard.VCardBuilder: void appendPostalLine(int,java.lang.String,android.content.ContentValues,boolean,boolean)>
<java.awt.geom.Line2D: double ptSegDist(double,double,double,double,double,double)>
<java.awt.event.MouseAdapter: void mouseExited(java.awt.event.MouseEvent)>
<java.awt.image.ComponentSampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>
<android.content.pm.PackageParser.Instrumentation: void setPackageName(java.lang.String)>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(java.nio.IntBuffer)>
<android.app.PendingIntent: int hashCode()>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(java.nio.IntBuffer)>
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>
<java.awt.image.DirectColorModel: int getAlphaMask()>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>
<android.graphics.Canvas: void <init>(int)>
<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>
<android.util.AttributeSet: int getAttributeIntValue(int,int)>
<android.speech.srec.Recognizer.Grammar: void compile()>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>
<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>
<android.os.Vibrator: void vibrate(long)>
<android.app.Activity: void setFeatureDrawableResource(int,int)>
<android.os.PatternMatcher: int describeContents()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: int getSuggestedMinimumHeight()>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
<com.google.android.mms.pdu.PduComposer: void appendShortLength(int)>
<java.awt.Event: java.lang.String toString()>
<android.graphics.Matrix: boolean equals(java.lang.Object)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.ddm.DdmHandleNativeHeap: void disconnected()>
<java.awt.MenuComponent: void removeNotify()>
<com.android.layoutlib.bridge.BridgeContext: void unregisterReceiver(android.content.BroadcastReceiver)>
<java.awt.image.DirectColorModel: int getBlueMask()>
<com.android.server.DevicePolicyManagerService: boolean isActivePasswordSufficient()>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<java.awt.geom.QuadCurve2D: int solveQuadratic(double[])>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>
<android.text.Annotation: void <init>(android.os.Parcel)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>
<android.graphics.PointF: float length()>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>
<android.content.Intent: java.lang.String getAction()>
<android.graphics.RectF: void sort()>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,int[],int)>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>
<android.inputmethodservice.ExtractEditText: boolean hasFocus()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<com.android.tools.layoutlib.create.RenameClassAdapter: void <init>(org.objectweb.asm.ClassWriter,java.lang.String,java.lang.String)>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>
<android.opengl.GLES20: void glScissor(int,int,int,int)>
<java.awt.image.ImagingOpException: void <init>(java.lang.String)>
<java.awt.geom.GeneralPath: void <init>()>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>
<java.awt.GraphicsConfiguration: void <init>()>
<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>
<java.beans.FeatureDescriptor: void setValue(java.lang.String,java.lang.Object)>
<android.graphics.drawable.InsetDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[])>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>
<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>
<java.awt.image.ComponentColorModel: int[] getComponents(java.lang.Object,int[],int)>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getLeading()>
<java.awt.image.PixelGrabber: int status()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.widget.AbsSpinner: void onMeasure(int,int)>
<android.net.TrafficStats: long getTotalTxPackets()>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>
<android.widget.TextView: void setIncludeFontPadding(boolean)>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.TextView: void setHint(int)>
<android.view.BridgeInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<java.awt.event.AdjustmentEvent: int getValue()>
<java.awt.Rectangle: void <init>()>
<javax.imageio.ImageReader: boolean isImageTiled(int)>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>
<android.renderscript.Light.Builder: void <init>(android.renderscript.RenderScript)>
<java.awt.geom.CubicCurve2D.Double: double getY2()>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>
<android.view.ViewDebug.ViewOperation: java.lang.Object[] pre()>
<android.widget.DialerFilter: void clearText()>
<android.os.Debug: int getGlobalClassInitTime()>
<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>
<com.android.tools.layoutlib.create.MethodListener: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
<java.awt.Graphics: void copyArea(int,int,int,int,int,int)>
<android.util.SparseArray: void setValueAt(int,java.lang.Object)>
<android.content.pm.ActivityInfo: java.lang.String toString()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>
<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int,java.lang.String,java.util.Set)>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>
<android.widget.CursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<org.apache.harmony.awt.wtk.ShutdownThread: void start()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>
<android.widget.PopupWindow: void <init>()>
<android.widget.ViewAnimator: void setDisplayedChild(int)>
<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>
<com.google.android.util.AbstractMessageParser.Video: com.google.android.util.AbstractMessageParser.Video matchURL(java.lang.String,java.lang.String)>
<android.media.JetPlayer: boolean triggerClip(int)>
<java.awt.HeadlessToolkit: void init()>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<java.awt.Shape: boolean intersects(java.awt.geom.Rectangle2D)>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>
<android.pim.vcard.VCardEntry: java.lang.String getPhoneticFullName()>
<android.provider.MediaStore.Audio: java.lang.String keyFor(java.lang.String)>
<javax.imageio.spi.ServiceRegistry.Filter: boolean filter(java.lang.Object)>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>
<android.pim.vcard.VCardEntryConstructor: void start()>
<android.content.ComponentCallbacks: void onLowMemory()>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>
<java.awt.Insets: int hashCode()>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>
<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.widget.ProgressBar: void setSecondaryProgress(int)>
<android.text.method.LinkMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.FontLoader: java.util.List getFallBackFonts()>
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<android.gesture.GestureLibrary: int getSequenceType()>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>
<com.android.common.OperationScheduler: long currentTimeMillis()>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.view.MotionEvent: int getAction()>
<android.pim.vcard.VCardEntry: java.util.List getImList()>
<android.database.sqlite.SQLiteMisuseException: void <init>()>
<android.widget.AbsListView: int getListPaddingLeft()>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<android.view.animation.Animation: void setStartOffset(long)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getFrom()>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>
<android.app.Activity: boolean isChild()>
<android.graphics.Canvas: java.awt.Graphics2D getGraphics2d()>
<com.google.android.mms.pdu.SendReq: void addCc(com.google.android.mms.pdu.EncodedStringValue)>
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<java.awt.im.spi.InputMethod: void activate()>
<android.widget.TimePicker: void setEnabled(boolean)>
<android.view.Menu: android.view.MenuItem add(int)>
<android.view.View: boolean willNotDraw()>
<javax.imageio.IIOImage: boolean hasRaster()>
<javax.imageio.metadata.IIOMetadataFormatImpl: java.lang.Object getObjectDefaultValue(java.lang.String)>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>
<android.view.View: float getBottomFadingEdgeStrength()>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>
<javax.imageio.stream.ImageInputStreamImpl: short readShort()>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<java.awt.image.MultiPixelPackedSampleModel: int[] getPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.webkit.Plugin: void setName(java.lang.String)>
<android.location.Location: void dump(android.util.Printer,java.lang.String)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.tools.layoutlib.create.OverrideMethod: java.lang.Object invokeA(java.lang.String,boolean,java.lang.Object)>
<android.app.Activity: void dismissDialog(int)>
<javax.imageio.ImageWriter: void removeAllIIOWriteWarningListeners()>
<android.location.Criteria: void setAltitudeRequired(boolean)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<javax.imageio.stream.ImageInputStream: float readFloat()>
<java.awt.Component: void setSize(int,int)>
<android.pim.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List)>
<android.media.AudioManager: void unloadSoundEffects()>
<android.app.UiModeManager: void setNightMode(int)>
<android.text.InputFilter.LengthFilter: void <init>(int)>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>
<android.text.Editable: void clearSpans()>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.view.BridgeInflater: android.view.View createViewFromTag(java.lang.String,android.util.AttributeSet)>
<android.hardware.Camera.Parameters: int getJpegThumbnailQuality()>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.google.android.mms.pdu.ReadRecInd: byte[] getMessageId()>
<java.awt.FontMetrics: int getHeight()>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>
<android.app.ActivityManager.RunningTaskInfo: void <init>()>
<com.android.server.am.UsageStatsService: void shutdown()>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>
<android.pim.vcard.VCardParser_V21: boolean isValidPropertyName(java.lang.String)>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.widget.Adapter: int getViewTypeCount()>
<com.google.android.mms.pdu.EncodedStringValue: int getCharacterSet()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.HorizontalScrollView: void requestLayout()>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.graphics.Rect: void <init>(android.graphics.Rect)>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>
<android.view.ViewRoot.CalledFromWrongThreadException: void <init>(java.lang.String)>
<android.graphics.Paint: void setColor(int)>
<com.google.android.gles_jni.GLImpl: void glAlphaFunc(int,float)>
<com.android.server.KeyInputQueue: int getScancodeState(int)>
<java.awt.MenuComponent: java.awt.Font getFont()>
<android.media.MediaRecorder: void setVideoFrameRate(int)>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>
<android.graphics.Typeface: void finalize()>
<android.text.style.TypefaceSpan: int getSpanTypeId()>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>
<android.app.SearchDialog.SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Program.BaseProgramBuilder: int addConstant(android.renderscript.Type)>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>
<android.text.style.ClickableSpan: void onClick(android.view.View)>
<com.android.commands.svc.DataCommand: java.lang.String longHelp()>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>
<android.widget.TableRow: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.text.BoringLayout: int getLineStart(int)>
<android.app.Activity: void setContentView(int)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void setSubject(com.google.android.mms.pdu.EncodedStringValue)>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: int[] getDataInt(java.awt.image.DataBuffer)>
<android.view.KeyCharacterMap: int getKeyboardType()>
<android.pim.vcard.VCardParser_V21: java.lang.String getQuotedPrintable(java.lang.String)>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>
<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)>
<android.content.ContentValues: void putAll(android.content.ContentValues)>
<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()>
<android.util.Base64InputStream: void close()>
<android.pim.vcard.VCardEntry.PhotoData: java.lang.String toString()>
<java.awt.image.DataBuffer: int getElem(int,int)>
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String)>
<java.awt.Component: void removeInputMethodListener(java.awt.event.InputMethodListener)>
<android.view.animation.Animation: void <init>()>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<java.awt.event.KeyEvent: void setKeyCode(int)>
<java.awt.event.MouseListener: void mouseReleased(java.awt.event.MouseEvent)>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>
<android.net.NetworkInfo: java.lang.String toString()>
<javax.imageio.IIOImage: java.awt.image.BufferedImage getThumbnail(int)>
<java.awt.geom.QuadCurve2D: boolean intersects(double,double,double,double)>
<android.speech.srec.MicrophoneInputStream: int read(byte[])>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>
<javax.imageio.ImageReader: java.lang.Object getInput()>
<android.renderscript.ProgramVertex.ShaderBuilder: android.renderscript.ProgramVertex create()>
<android.app.ActivityGroup: void <init>()>
<android.provider.Contacts.Intents: void <init>()>
<com.google.android.util.AbstractMessageParser: void parse()>
<java.awt.image.Raster: java.lang.Object getDataElements(int,int,java.lang.Object)>
<android.view.View: int computeHorizontalScrollRange()>
<org.apache.harmony.awt.state.MenuState: int getWidth()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>
<android.widget.CheckedTextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.layoutlib.bridge.BridgeXmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.BridgeContext,boolean)>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.view.Surface: int describeContents()>
<android.graphics.PixelXorXfermode: void <init>(int)>
<android.renderscript.Program.BaseProgramBuilder: void addInput(android.renderscript.Element)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>
<org.apache.harmony.awt.gl.font.BasicMetrics: float getDescent()>
<com.android.fountain.Fountain: void onPause()>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>
<android.app.Activity: void setRequestedOrientation(int)>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster create()>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.EventLog.Event: int getThreadId()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>
<javax.imageio.ImageTypeSpecifier: void <init>(java.awt.image.RenderedImage)>
<android.os.Message: java.lang.Runnable getCallback()>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>
<android.location.Address: void setCountryCode(java.lang.String)>
<java.awt.event.ActionListener: void actionPerformed(java.awt.event.ActionEvent)>
<java.awt.image.MemoryImageSource: boolean isConsumer(java.awt.image.ImageConsumer)>
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>
<com.android.common.ArrayListCursor: int getInt(int)>
<android.webkit.WebView: void onAttachedToWindow()>
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>
<java.awt.image.VolatileImage: void flush()>
<android.app.Instrumentation: void sendCharacterSync(int)>
<com.android.server.am.ActivityManagerService: boolean shutdown(int)>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>
<java.awt.image.DataBuffer: int getElem(int)>
<org.apache.harmony.x.imageio.plugins.jpeg.JPEGImageReader: void setInput(java.lang.Object,boolean,boolean)>
<com.android.providers.settings.SettingsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>
<android.widget.AbsListView: int[] onCreateDrawableState(int)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.hardware.GeomagneticField: float getX()>
<com.android.commands.svc.Svc.Command: java.lang.String shortHelp()>
<android.preference.Preference: boolean persistLong(long)>
<android.view.animation.AnimationSet: void restrictDuration(long)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,float[],int)>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>
<java.awt.image.RasterFormatException: void <init>(java.lang.String)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void <init>(java.awt.image.SampleModel,java.awt.Point)>
<java.awt.geom.Area: java.awt.geom.Rectangle2D getBounds2D()>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<java.awt.Polygon: boolean contains(double,double,double,double)>
<com.android.layoutlib.bridge.BridgeXmlBlockParser: java.lang.String getNamespacePrefix(int)>
<android.pim.vcard.VCardInterpreter: void propertyGroup(java.lang.String)>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.widget.Scroller: int getStartX()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void <init>(int,int,org.apache.harmony.awt.gl.MultiRectArea)>
<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>
<java.awt.geom.CubicCurve2D.Double: java.awt.geom.Rectangle2D getBounds2D()>
<android.view.animation.Transformation: void clear()>
<java.awt.image.Raster: int getMinY()>
<javax.microedition.khronos.opengles.GL10: void glTexParameterf(int,int,float)>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.widget.ViewAnimator: void removeAllViews()>
<javax.imageio.stream.FileCacheImageOutputStream: void write(byte[],int,int)>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,boolean[],int)>
<java.awt.image.DataBufferFloat: float[] getData()>
<android.view.KeyEvent: long getDownTime()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.os.Parcel: void enforceInterface(java.lang.String)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>
<java.awt.Toolkit: boolean getLockingKeyState(int)>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
<android.database.Cursor: boolean moveToLast()>
<android.webkit.WebView: float getScale()>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
<com.google.android.util.AbstractMessageParser.Token: boolean setCaps()>
<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>
<android.app.PendingIntent: void cancel()>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>
<android.opengl.GLES10: java.lang.String glGetString(int)>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.AudioRecord: void startRecording()>
<com.google.android.mms.pdu.GenericPdu: int getMessageType()>
<java.awt.Component: java.awt.Rectangle getBounds()>
<java.awt.image.BufferedImage: java.lang.String toString()>
<android.widget.TabWidget: void addView(android.view.View)>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>
<javax.imageio.stream.FileCacheImageInputStream: boolean isCached()>
<org.apache.harmony.awt.gl.font.AndroidFontProperty: java.lang.String getLogicalName()>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>
<android.view.inputmethod.InputMethod: void unbindInput()>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<javax.imageio.stream.FileImageOutputStream: long length()>
<org.apache.harmony.awt.gl.MultiRectArea.LineCash: void skipLine()>
<android.opengl.GLES10: void glDisableClientState(int)>
<java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStrokeForEvent(java.awt.event.KeyEvent)>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>
<android.content.BroadcastReceiver: void clearAbortBroadcast()>
<android.widget.TabHost: android.view.View getCurrentTabView()>
<android.widget.AbsSeekBar: void onMeasure(int,int)>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>
<android.inputmethodservice.Keyboard.Key: int squaredDistanceFrom(int,int)>
<android.content.ComponentName: int compareTo(android.content.ComponentName)>
<java.awt.Graphics: void draw3DRect(int,int,int,int,boolean)>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageReaderSpi: javax.imageio.ImageReader createReaderInstance(java.lang.Object)>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>
<android.view.View: void destroyDrawingCache()>
<android.pim.vcard.VCardParser_V21: void handleType(java.lang.String)>
<org.apache.harmony.awt.gl.Surface: int getHeight()>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>
<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color,boolean)>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.Activity: void takeKeyEvents(boolean)>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.WindowFactory getWindowFactory()>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawArc(int,int,int,int,int,int)>
<android.graphics.Paint: boolean isStrikeThruText()>
<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.pim.vcard.exception.VCardException: void <init>()>
<org.apache.harmony.awt.gl.CommonGraphics2D: void drawPolygon(int[],int[],int)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>
<android.widget.TextView.SavedState: java.lang.String toString()>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Allocation.Adapter1D: void subData(int,int,float[])>
<android.view.MotionEvent: float getHistoricalX(int,int)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.SparseArray: void append(int,java.lang.Object)>
<android.graphics.drawable.InsetDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,int[],int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>
<java.awt.font.TextMeasurer: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>
<com.google.android.mms.pdu.PduPersister: byte[] getBytes(java.lang.String)>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<org.apache.harmony.awt.gl.font.FontPeerImpl: int charWidth(char)>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>
<android.widget.CursorTreeAdapter: void notifyDataSetInvalidated()>
<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>
<android.view.View: int getScrollX()>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>
<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>
<java.awt.image.DirectColorModel: int getDataElement(int[],int)>
<javax.imageio.metadata.IIOMetadataNode: org.w3c.dom.Node getNextSibling()>
<android.gesture.GestureOverlayView: void clear(boolean)>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>
<java.awt.image.RescaleOp: java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>
<android.content.res.AssetManager.AssetInputStream: int available()>
<android.view.View.OnClickListener: void onClick(android.view.View)>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged()>
<android.graphics.Rect: void offsetTo(int,int)>
<java.awt.color.ColorSpace: void <init>(int,int)>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>
<java.awt.image.SampleModel: void setSamples(int,int,int,int,int,double[],java.awt.image.DataBuffer)>
<android.graphics.Rect: float exactCenterX()>
<android.widget.AdapterView: void removeViewAt(int)>
<java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>
<android.widget.TextView: void setInputType(int)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>
<android.view.View: int[] onCreateDrawableState(int)>
<javax.imageio.metadata.IIOMetadataNode: short compareDocumentPosition(org.w3c.dom.Node)>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>
<com.android.layoutlib.bridge.BridgeContext: void unbindService(android.content.ServiceConnection)>
<com.android.server.AttributeCache: void init(android.content.Context)>
<java.awt.GraphicsDevice: java.awt.DisplayMode[] getDisplayModes()>
<android.telephony.CellLocation: void requestLocationUpdate()>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.apache.harmony.awt.wtk.KeyInfo: void setKeyChars(char)>
<android.net.Uri: java.util.List getPathSegments()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.os.Debug: void resetGlobalExternalFreedSize()>
<com.android.server.status.TickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriterParam: void setInterlace(boolean)>
<android.graphics.Color: int parseColor(java.lang.String)>
<java.awt.image.PixelGrabber: java.lang.Object getPixels()>
<android.util.EventLog.Event: long getTimeNanos()>
<android.view.View: boolean performHapticFeedback(int)>
<android.gesture.Gesture: int describeContents()>
<java.awt.Graphics2D: void fill(java.awt.Shape)>
<java.awt.image.Raster: int getHeight()>
<javax.imageio.metadata.IIOMetadataNode: void setTextContent(java.lang.String)>
<javax.imageio.ImageWriter: javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam)>
<android.widget.TextView: java.lang.CharSequence getHint()>
<android.os.HandlerThread: void run()>
<java.awt.event.InvocationEvent: void <init>(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.database.sqlite.SQLiteDebug.DbStats: void <init>(java.lang.String,long,long,int)>
<android.widget.HeaderViewListAdapter: long getItemId(int)>
<com.android.providers.settings.SettingsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<org.apache.harmony.awt.gl.font.TextRunBreaker: void createSegments(int,int)>
<com.android.server.status.TrackingPatternView: void onDraw(android.graphics.Canvas)>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>
<com.android.server.NetStatService: long getTotalRxPackets()>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>
<android.database.SQLException: void <init>(java.lang.String)>
<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<java.awt.image.ComponentSampleModel: int hashCode()>
<java.awt.Polygon: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>
<android.preference.Preference: void onBindView(android.view.View)>
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeChar(int)>
<javax.imageio.ImageTypeSpecifier: java.awt.image.ColorModel getColorModel()>
<android.view.KeyEvent: void <init>(int,int)>
<java.awt.geom.Ellipse2D.Double: double getY()>
<java.awt.image.renderable.ParameterBlock: java.lang.Object getSource(int)>
<java.awt.Component.BltBufferStrategy: boolean contentsRestored()>
<android.webkit.WebView: boolean pageUp(boolean)>
<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>
<android.app.ListActivity: void setSelection(int)>
<android.os.MemoryFile: int length()>
<android.view.View: boolean hasFocus()>
<android.graphics.GradientShader.GradientPaint: void <init>(int[],float[],android.graphics.Shader.TileMode)>
<android.graphics.Picture: int getWidth()>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>
<android.graphics.Path: void incReserve(int)>
<android.database.CursorWindow: boolean allocRow()>
<java.awt.image.AffineTransformOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>
<org.apache.harmony.awt.gl.font.Glyph: java.awt.Shape getShape()>
<android.os.Parcel: void writeString(java.lang.String)>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>
<android.widget.ExpandableListView: int getFlatListPosition(long)>
<org.apache.harmony.awt.gl.font.AndroidFont: org.apache.harmony.awt.gl.font.FontExtraMetrics getExtraMetrics()>
<android.text.format.Time: void switchTimezone(java.lang.String)>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>
<android.util.TypedValue: void setTo(android.util.TypedValue)>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>
<android.os.Handler: boolean hasMessages(int)>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>
<javax.imageio.metadata.IIOMetadataNode: int getLength()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.os.Bundle: short getShort(java.lang.String)>
<android.widget.AbsListView: void smoothScrollBy(int,int)>
<org.apache.harmony.x.imageio.spi.RAFIISSpi: void <init>()>
<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>
<android.app.Instrumentation: void startProfiling()>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>
<java.awt.Component: boolean mouseMove(java.awt.Event,int,int)>
<java.awt.image.RescaleOp: void <init>(float[],float[],java.awt.RenderingHints)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean)>
<android.widget.AbsSpinner: android.view.View getSelectedView()>
<java.awt.image.ComponentSampleModel: void setSample(int,int,int,double,java.awt.image.DataBuffer)>
<android.widget.ViewSwitcher: void <init>(android.content.Context)>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<javax.imageio.ImageWriter: void replaceStreamMetadata(javax.imageio.metadata.IIOMetadata)>
<javax.microedition.khronos.opengles.GL10: void glDrawArrays(int,int,int)>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>
<com.android.layoutlib.bridge.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>
<android.media.JetPlayer: void release()>
<java.awt.HeadlessToolkit: void setDynamicLayout(boolean)>
<org.apache.harmony.awt.gl.MultiRectArea: void <init>(java.awt.Rectangle[])>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
<javax.imageio.ImageWriter: void processThumbnailProgress(float)>
<android.widget.ImageSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>
<android.net.Uri: java.lang.String getFragment()>
<java.awt.geom.QuadCurve2D: void setCurve(double,double,double,double,double,double)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.app.Activity: java.lang.String getLocalClassName()>
<java.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>
<java.awt.Rectangle: void setSize(int,int)>
<java.awt.image.RenderedImage: int getTileWidth()>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>
<com.android.server.status.StorageNotification: void <init>(android.content.Context)>
<android.widget.TextView: void setMaxEms(int)>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>
<org.apache.harmony.awt.gl.render.JavaBlitter: org.apache.harmony.awt.gl.render.JavaBlitter getInstance()>
<android.media.AudioTrack: int getChannelCount()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<android.media.AudioSystem.ErrorCallback: void onError(int)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>
<android.widget.Filter.FilterResults: void <init>()>
<java.awt.image.BufferedImage: void addTileObserver(java.awt.image.TileObserver)>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<android.view.Window: boolean isFloating()>
<javax.imageio.ImageTypeSpecifier: int getNumComponents()>
<android.pim.RecurrenceSet: long[] parseRecurrenceDates(java.lang.String)>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>
<android.provider.MediaStore.Audio.Playlists.Members: boolean moveItem(android.content.ContentResolver,long,int,int)>
<android.bluetooth.BluetoothAdapter: int getScanMode()>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<java.awt.geom.QuadCurve2D.Float: double getY1()>
<android.os.Parcel: void readBooleanArray(boolean[])>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<com.google.android.mms.util.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>
<javax.imageio.stream.ImageOutputStreamImpl: void writeBit(int)>
<javax.imageio.ImageWriter: void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,int,int,javax.imageio.metadata.IIOMetadata,java.util.List,javax.imageio.ImageWriteParam)>
<com.google.android.gles_jni.GLImpl: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.pim.vcard.VCardEntryConstructor: void <init>(int)>
<com.google.android.gles_jni.GLImpl: void glEnableClientState(int)>
<android.os.Message: void sendToTarget()>
<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>
<org.apache.harmony.x.imageio.stream.RandomAccessMemoryCache: int getData(byte[],int,int,long)>
<com.google.android.util.AbstractMessageParser.Token: java.util.List getInfo()>
<java.awt.Component: boolean isVisible()>
<javax.imageio.metadata.IIOMetadataFormat: java.lang.Object getObjectDefaultValue(java.lang.String)>
<android.graphics.Matrix: boolean postRotate(float,float,float)>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: void finalize()>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.media.MediaPlayer: int getVideoHeight()>
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView: void drawableStateChanged()>
<android.view.Window: void setFeatureInt(int,int)>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>
<android.pim.vcard.VCardInterpreterCollection: void propertyGroup(java.lang.String)>
<java.awt.geom.RoundRectangle2D.Float: void setRoundRect(double,double,double,double,double,double)>
<android.widget.Chronometer: void onWindowVisibilityChanged(int)>
<org.apache.harmony.awt.gl.color.ICC_Transform: int getNumInputChannels()>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>
<java.awt.image.BufferedImage: void flush()>
<android.view.animation.AnimationSet: java.util.List getAnimations()>
<android.security.Md5MessageDigest: void update(byte[])>
<android.os.FileObserver: void <init>(java.lang.String)>
<android.os.Parcel: double readDouble()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.graphics.PathMeasure: void finalize()>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<java.awt.Polygon: void translate(int,int)>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.google.android.gles_jni.EGLImpl: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.media.AudioRecord: int read(short[],int,int)>
<android.content.DialogInterface.OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>
<android.graphics.Canvas: void translate(float,float)>
<org.apache.harmony.awt.gl.render.JavaBlitter: void blit(int,int,org.apache.harmony.awt.gl.Surface,int,int,org.apache.harmony.awt.gl.Surface,int,int,java.awt.geom.AffineTransform,java.awt.Composite,java.awt.Color,org.apache.harmony.awt.gl.MultiRectArea)>
<android.opengl.GLES10: void glShadeModel(int)>
<java.awt.image.AreaAveragingScaleFilter: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glEnable(int)>
<java.awt.image.IndexColorModel: void <init>(int,int,byte[],int,boolean)>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<org.apache.harmony.awt.wtk.SystemProperties: void mapInputMethodHighlight(java.awt.im.InputMethodHighlight,java.util.Map)>
<android.app.ProgressDialog: void setProgressStyle(int)>
<android.pim.RecurrenceSet: java.lang.String fold(java.lang.String)>
<android.app.ListActivity: void onContentChanged()>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.os.Parcel: void setDataSize(int)>
<java.awt.event.WindowFocusListener: void windowLostFocus(java.awt.event.WindowEvent)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>
<com.android.server.am.BatteryStatsService: void noteScreenOff()>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String)>
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<java.awt.Component: java.awt.Dimension getMaximumSize()>
<java.awt.image.MemoryImageSource: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>
<android.location.Address: void setSubThoroughfare(java.lang.String)>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.harmony.awt.gl.image.OrdinaryWritableRaster: void setPixels(int,int,int,int,float[])>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<org.apache.harmony.x.imageio.plugins.png.PNGImageWriter: javax.imageio.ImageWriteParam getDefaultWriteParam()>
<org.apache.harmony.awt.gl.image.GifDecoder: void decodeImage()>
<android.graphics.DashPathEffect: float getPhase()>
<java.awt.Toolkit: java.lang.Object lazilyLoadDesktopProperty(java.lang.String)>
<java.awt.image.PixelGrabber: void setProperties(java.util.Hashtable)>
<android.widget.VideoView: boolean isPlaying()>
<java.awt.image.ComponentSampleModel: int getOffset(int,int)>
<android.database.CursorWrapper: double getDouble(int)>
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)>
<android.os.BatteryStats.Uid: void noteFullWifiLockReleasedLocked()>
<android.webkit.WebView: boolean pageDown(boolean)>
<java.awt.geom.Arc2D: void setArcByCenter(double,double,double,double,double,int)>
<javax.imageio.ImageReader: boolean readerSupportsThumbnails()>
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<javax.imageio.spi.ImageInputStreamSpi: boolean needsCacheFile()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>
<java.awt.geom.QuadCurve2D.Float: double getX2()>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>
<java.awt.image.WritableRaster: void <init>(java.awt.image.SampleModel,java.awt.image.DataBuffer,java.awt.Rectangle,java.awt.Point,java.awt.image.WritableRaster)>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>
<android.database.DataSetObservable: void notifyInvalidated()>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>
<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
<com.android.server.status.StatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<android.app.NotificationManager: void cancel(int)>
<java.awt.image.renderable.ParameterBlock: java.awt.image.renderable.ParameterBlock add(long)>
<java.awt.Point: void <init>(java.awt.Point)>
<android.content.Intent: java.lang.String toURI()>
<java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<android.graphics.Path: void addPath(android.graphics.Path)>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>
<javax.imageio.ImageWriter: void write(javax.imageio.IIOImage)>
<javax.imageio.stream.MemoryCacheImageOutputStream: long length()>
<android.view.animation.Transformation: void setTransformationType(int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.view.animation.Animation: void startNow()>
<com.google.android.mms.pdu.PduPart: byte[] getData()>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>
<android.pim.RecurrenceSet: boolean populateComponent(android.content.ContentValues,android.pim.ICalendar.Component)>
<android.os.Debug: void stopMethodTracing()>
<com.android.server.status.StatusBarService: void removeIcon(android.os.IBinder)>
<android.view.KeyCharacterMap: char getNumber(int)>
<java.awt.geom.AffineTransform: boolean equals(java.lang.Object)>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>
<org.apache.harmony.awt.gl.font.TextRunBreaker: java.awt.Shape getBlackBoxBounds(int,int)>
<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>
<android.view.View: void setNextFocusUpId(int)>
<com.android.layoutlib.bridge.LayoutResult.LayoutViewInfo: int getBottom()>
<android.location.Address: void setPremises(java.lang.String)>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>
<org.apache.harmony.awt.state.MenuItemState: void setShortcutBounds(int,int,int,int)>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>
<android.pim.vcard.VCardUtils: java.lang.String getPropertyNameForIm(int)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<javax.imageio.ImageWriter: void endWriteEmpty()>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>
<org.apache.harmony.awt.gl.render.NativeImageBlitter: org.apache.harmony.awt.gl.render.NativeImageBlitter getInstance()>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>
<android.graphics.Camera: void save()>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>()>
<javax.imageio.ImageReader: void dispose()>
<android.gesture.GestureStroke: void clearPath()>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.pim.vcard.exception.VCardInvalidLineException: void <init>()>
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>
<javax.microedition.khronos.opengles.GL10: void glAlphaFuncx(int,int)>
<com.google.android.mms.pdu.MultimediaMessagePdu: void <init>(com.google.android.mms.pdu.PduHeaders,com.google.android.mms.pdu.PduBody)>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>
<android.os.Debug: void resetGlobalAllocSize()>
<java.awt.image.LookupOp: java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)>
<java.awt.image.ColorConvertOp: java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)>
<android.view.inputmethod.CompletionInfo: long getId()>
<java.awt.Rectangle: void setRect(double,double,double,double)>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>
<org.apache.harmony.awt.gl.font.FontManager: int getLogicalStyle(java.lang.String)>
<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>
<java.awt.font.LineBreakMeasurer: void insertChar(java.text.AttributedCharacterIterator,int)>
<android.renderscript.Allocation.Adapter1D: void subData(int,int,int[])>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>
<android.os.BatteryStats.Uid: java.util.Map getSensorStats()>
<android.opengl.GLES11: void glPointParameterx(int,int)>
<android.webkit.WebSettings: boolean getSaveFormData()>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<android.os.BatteryStats.Uid: void noteAudioTurnedOffLocked()>
<android.widget.ImageButton: void <init>(android.content.Context)>
<android.content.ComponentName: java.lang.String toString()>
<java.awt.geom.CubicCurve2D.Float: java.awt.geom.Point2D getP1()>
<java.awt.Font: boolean hasUniformLineMetrics()>
<javax.imageio.ImageWriteParam: void unsetTiling()>
<java.awt.image.renderable.RenderableImageProducer: void <init>(java.awt.image.renderable.RenderableImage,java.awt.image.renderable.RenderContext)>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
<java.awt.geom.Area: void reset()>
<com.android.layoutlib.bridge.BridgeResources: int getDimensionPixelOffset(int)>
<android.util.DisplayMetrics: void setToDefaults()>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
<com.android.layoutlib.bridge.BridgeContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<java.beans.PropertyEditorSupport: boolean isPaintable()>
<android.database.CursorWrapper: boolean requery()>
<android.app.ApplicationThreadProxy: void requestPss()>
<java.awt.event.WindowListener: void windowOpened(java.awt.event.WindowEvent)>
<java.awt.image.RenderedImage: int getWidth()>
<android.os.Parcel: void unmarshall(byte[],int,int)>
<android.graphics.Rect: void union(int,int)>
<android.view.inputmethod.InputBinding: java.lang.String toString()>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<java.awt.geom.CubicCurve2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.view.View: int computeVerticalScrollRange()>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>
<android.pim.vcard.VCardComposer: void <init>(android.content.Context,int,boolean)>
<javax.microedition.khronos.opengles.GL11: void glVertexPointer(int,int,int,int)>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>
<org.apache.harmony.awt.gl.font.CompositeFont: int getAscent()>
<android.graphics.Canvas: int getDensity()>
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<java.awt.Color: boolean equals(java.lang.Object)>
<android.app.PendingIntent: void send()>
<java.awt.image.BufferedImage: java.awt.image.ImageProducer getSource()>
<android.opengl.GLSurfaceView: int getDebugFlags()>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex create()>
<android.widget.ExpandableListView: long getSelectedId()>
<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>
<android.graphics.Region: void <init>()>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>
<java.awt.image.ByteLookupTable: int[] lookupPixel(int[],int[])>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>
<java.awt.image.SinglePixelPackedSampleModel: int[] getPixel(int,int,int[],java.awt.image.DataBuffer)>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>
<org.apache.harmony.awt.gl.font.LineMetricsImpl: float getHeight()>
<android.text.Layout: int getLineBottom(int)>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>
<org.apache.harmony.awt.wtk.WTK: org.apache.harmony.awt.wtk.NativeEventQueue getNativeEventQueue()>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>
<android.content.res.ColorStateList: int describeContents()>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,java.nio.Buffer)>
<java.awt.Component: void enable()>
<com.android.commands.svc.Svc.Command: java.lang.String name()>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.os.Debug.InstructionCount: int globalTotal()>
<android.widget.TabHost: void setup()>
<android.widget.ProgressBar: void <init>(android.content.Context)>
<org.apache.harmony.awt.gl.font.CaretManager: float[] getCaretInfo(java.awt.font.TextHitInfo)>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>
<android.view.KeyEvent: long getEventTime()>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>
<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,float[],int)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>
<android.widget.TextView: int computeVerticalScrollRange()>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
<com.google.android.gles_jni.GLImpl: void glRenderbufferStorageOES(int,int,int,int)>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>
<android.view.animation.LinearInterpolator: void <init>()>
<com.android.server.status.CloseDragHandle: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.webkit.WebView: java.lang.String getOriginalUrl()>
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>
<java.awt.image.FilteredImageSource: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(int[],int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<org.apache.harmony.awt.state.MenuState: java.awt.FontMetrics getFontMetrics(java.awt.Font)>
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>
<android.view.View: void setWillNotCacheDrawing(boolean)>
<android.content.Context: void removeStickyBroadcast(android.content.Intent)>
<java.awt.Component: void list(java.io.PrintWriter)>
<java.awt.image.ColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>
<org.apache.harmony.x.imageio.spi.FileIISSpi: void <init>()>
<org.apache.harmony.awt.gl.AwtImageBackdoorAccessor: double[] getDataDouble(java.awt.image.DataBuffer)>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>
<android.os.ParcelUuid: java.lang.String toString()>
<android.os.RecoverySystem.ProgressListener: void onProgress(int)>
<android.view.View: void setScrollContainer(boolean)>
<android.media.AudioRecord: int getChannelConfiguration()>
<android.graphics.Path: void reset()>
<android.bluetooth.BluetoothClass: boolean hasService(int)>
<javax.microedition.khronos.opengles.GL10: void glShadeModel(int)>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>
<java.awt.event.KeyEvent: int getKeyCode()>
<java.awt.font.GlyphVector: java.awt.font.FontRenderContext getFontRenderContext()>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<org.apache.harmony.awt.gl.font.AndroidGlyphVector: int getGlyphCode(int)>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,int[],int)>
<com.android.layoutlib.bridge.LayoutResult: java.awt.image.BufferedImage getImage()>
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>
